# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: google/devtools/containeranalysis/v1beta1/grafeas/grafeas.proto for package 'grafeas.v1beta1'
# Original file comments:
# Copyright 2018 The Grafeas Authors. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'google/devtools/containeranalysis/v1beta1/grafeas/grafeas_pb'

module Grafeas
  module V1beta1
    module GrafeasV1Beta1
      # [Grafeas](grafeas.io) API.
      #
      # Retrieves analysis results of Cloud components such as Docker container
      # images.
      #
      # Analysis results are stored as a series of occurrences. An `Occurrence`
      # contains information about a specific analysis instance on a resource. An
      # occurrence refers to a `Note`. A note contains details describing the
      # analysis and is generally stored in a separate project, called a `Provider`.
      # Multiple occurrences can refer to the same note.
      #
      # For example, an SSL vulnerability could affect multiple images. In this case,
      # there would be one note for the vulnerability and an occurrence for each
      # image with the vulnerability referring to that note.
      class Service

        include GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'grafeas.v1beta1.GrafeasV1Beta1'

        # Gets the specified occurrence.
        rpc :GetOccurrence, GetOccurrenceRequest, Occurrence
        # Lists occurrences for the specified project.
        rpc :ListOccurrences, ListOccurrencesRequest, ListOccurrencesResponse
        # Deletes the specified occurrence. For example, use this method to delete an
        # occurrence when the occurrence is no longer applicable for the given
        # resource.
        rpc :DeleteOccurrence, DeleteOccurrenceRequest, Google::Protobuf::Empty
        # Creates a new occurrence.
        rpc :CreateOccurrence, CreateOccurrenceRequest, Occurrence
        # Creates new occurrences in batch.
        rpc :BatchCreateOccurrences, BatchCreateOccurrencesRequest, BatchCreateOccurrencesResponse
        # Updates the specified occurrence.
        rpc :UpdateOccurrence, UpdateOccurrenceRequest, Occurrence
        # Gets the note attached to the specified occurrence. Consumer projects can
        # use this method to get a note that belongs to a provider project.
        rpc :GetOccurrenceNote, GetOccurrenceNoteRequest, Note
        # Gets the specified note.
        rpc :GetNote, GetNoteRequest, Note
        # Lists notes for the specified project.
        rpc :ListNotes, ListNotesRequest, ListNotesResponse
        # Deletes the specified note.
        rpc :DeleteNote, DeleteNoteRequest, Google::Protobuf::Empty
        # Creates a new note.
        rpc :CreateNote, CreateNoteRequest, Note
        # Creates new notes in batch.
        rpc :BatchCreateNotes, BatchCreateNotesRequest, BatchCreateNotesResponse
        # Updates the specified note.
        rpc :UpdateNote, UpdateNoteRequest, Note
        # Lists occurrences referencing the specified note. Provider projects can use
        # this method to get all occurrences across consumer projects referencing the
        # specified note.
        rpc :ListNoteOccurrences, ListNoteOccurrencesRequest, ListNoteOccurrencesResponse
        # Gets a summary of the number and severity of occurrences.
        rpc :GetVulnerabilityOccurrencesSummary, GetVulnerabilityOccurrencesSummaryRequest, VulnerabilityOccurrencesSummary
      end

      Stub = Service.rpc_stub_class
    end
  end
end
