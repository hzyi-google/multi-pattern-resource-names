<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/containeranalysis/v1beta1/attestation/attestation.proto

namespace Grafeas\V1beta1\Attestation;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An attestation wrapper that uses the Grafeas `Signature` message.
 * This attestation must define the `serialized_payload` that the `signatures`
 * verify and any metadata necessary to interpret that plaintext.  The
 * signatures should always be over the `serialized_payload` bytestring.
 *
 * Generated from protobuf message <code>grafeas.v1beta1.attestation.GenericSignedAttestation</code>
 */
class GenericSignedAttestation extends \Google\Protobuf\Internal\Message
{
    /**
     * Type (for example schema) of the attestation payload that was signed.
     * The verifier must ensure that the provided type is one that the verifier
     * supports, and that the attestation payload is a valid instantiation of that
     * type (for example by validating a JSON schema).
     *
     * Generated from protobuf field <code>.grafeas.v1beta1.attestation.GenericSignedAttestation.ContentType content_type = 1;</code>
     */
    protected $content_type = 0;
    /**
     * The serialized payload that is verified by one or more `signatures`.
     * The encoding and semantic meaning of this payload must match what is set in
     * `content_type`.
     *
     * Generated from protobuf field <code>bytes serialized_payload = 2;</code>
     */
    protected $serialized_payload = '';
    /**
     * One or more signatures over `serialized_payload`.  Verifier implementations
     * should consider this attestation message verified if at least one
     * `signature` verifies `serialized_payload`.  See `Signature` in common.proto
     * for more details on signature structure and verification.
     *
     * Generated from protobuf field <code>repeated .grafeas.v1beta1.Signature signatures = 3;</code>
     */
    private $signatures;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $content_type
     *           Type (for example schema) of the attestation payload that was signed.
     *           The verifier must ensure that the provided type is one that the verifier
     *           supports, and that the attestation payload is a valid instantiation of that
     *           type (for example by validating a JSON schema).
     *     @type string $serialized_payload
     *           The serialized payload that is verified by one or more `signatures`.
     *           The encoding and semantic meaning of this payload must match what is set in
     *           `content_type`.
     *     @type \Grafeas\V1beta1\Signature[]|\Google\Protobuf\Internal\RepeatedField $signatures
     *           One or more signatures over `serialized_payload`.  Verifier implementations
     *           should consider this attestation message verified if at least one
     *           `signature` verifies `serialized_payload`.  See `Signature` in common.proto
     *           for more details on signature structure and verification.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Containeranalysis\V1Beta1\Attestation\Attestation::initOnce();
        parent::__construct($data);
    }

    /**
     * Type (for example schema) of the attestation payload that was signed.
     * The verifier must ensure that the provided type is one that the verifier
     * supports, and that the attestation payload is a valid instantiation of that
     * type (for example by validating a JSON schema).
     *
     * Generated from protobuf field <code>.grafeas.v1beta1.attestation.GenericSignedAttestation.ContentType content_type = 1;</code>
     * @return int
     */
    public function getContentType()
    {
        return $this->content_type;
    }

    /**
     * Type (for example schema) of the attestation payload that was signed.
     * The verifier must ensure that the provided type is one that the verifier
     * supports, and that the attestation payload is a valid instantiation of that
     * type (for example by validating a JSON schema).
     *
     * Generated from protobuf field <code>.grafeas.v1beta1.attestation.GenericSignedAttestation.ContentType content_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setContentType($var)
    {
        GPBUtil::checkEnum($var, \Grafeas\V1beta1\Attestation\GenericSignedAttestation_ContentType::class);
        $this->content_type = $var;

        return $this;
    }

    /**
     * The serialized payload that is verified by one or more `signatures`.
     * The encoding and semantic meaning of this payload must match what is set in
     * `content_type`.
     *
     * Generated from protobuf field <code>bytes serialized_payload = 2;</code>
     * @return string
     */
    public function getSerializedPayload()
    {
        return $this->serialized_payload;
    }

    /**
     * The serialized payload that is verified by one or more `signatures`.
     * The encoding and semantic meaning of this payload must match what is set in
     * `content_type`.
     *
     * Generated from protobuf field <code>bytes serialized_payload = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSerializedPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->serialized_payload = $var;

        return $this;
    }

    /**
     * One or more signatures over `serialized_payload`.  Verifier implementations
     * should consider this attestation message verified if at least one
     * `signature` verifies `serialized_payload`.  See `Signature` in common.proto
     * for more details on signature structure and verification.
     *
     * Generated from protobuf field <code>repeated .grafeas.v1beta1.Signature signatures = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSignatures()
    {
        return $this->signatures;
    }

    /**
     * One or more signatures over `serialized_payload`.  Verifier implementations
     * should consider this attestation message verified if at least one
     * `signature` verifies `serialized_payload`.  See `Signature` in common.proto
     * for more details on signature structure and verification.
     *
     * Generated from protobuf field <code>repeated .grafeas.v1beta1.Signature signatures = 3;</code>
     * @param \Grafeas\V1beta1\Signature[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSignatures($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Grafeas\V1beta1\Signature::class);
        $this->signatures = $arr;

        return $this;
    }

}

