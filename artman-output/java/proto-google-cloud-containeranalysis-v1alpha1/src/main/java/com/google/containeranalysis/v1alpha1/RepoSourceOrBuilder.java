// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1alpha1/provenance.proto

package com.google.containeranalysis.v1alpha1;

public interface RepoSourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.devtools.containeranalysis.v1alpha1.RepoSource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ID of the project that owns the repo.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   */
  java.lang.String getProjectId();
  /**
   * <pre>
   * ID of the project that owns the repo.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getProjectIdBytes();

  /**
   * <pre>
   * Name of the repo.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   */
  java.lang.String getRepoName();
  /**
   * <pre>
   * Name of the repo.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   */
  com.google.protobuf.ByteString
      getRepoNameBytes();

  /**
   * <pre>
   * Name of the branch to build.
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   */
  java.lang.String getBranchName();
  /**
   * <pre>
   * Name of the branch to build.
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   */
  com.google.protobuf.ByteString
      getBranchNameBytes();

  /**
   * <pre>
   * Name of the tag to build.
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   */
  java.lang.String getTagName();
  /**
   * <pre>
   * Name of the tag to build.
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   */
  com.google.protobuf.ByteString
      getTagNameBytes();

  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   */
  java.lang.String getCommitSha();
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   */
  com.google.protobuf.ByteString
      getCommitShaBytes();

  public com.google.containeranalysis.v1alpha1.RepoSource.RevisionCase getRevisionCase();
}
