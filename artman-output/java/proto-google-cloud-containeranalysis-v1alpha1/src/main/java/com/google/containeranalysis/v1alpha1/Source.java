// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/devtools/containeranalysis/v1alpha1/provenance.proto

package com.google.containeranalysis.v1alpha1;

/**
 * <pre>
 * Source describes the location of the source used for the build.
 * </pre>
 *
 * Protobuf type {@code google.devtools.containeranalysis.v1alpha1.Source}
 */
public  final class Source extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.devtools.containeranalysis.v1alpha1.Source)
    SourceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Source.newBuilder() to construct.
  private Source(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Source() {
    additionalContexts_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Source(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.containeranalysis.v1alpha1.StorageSource.Builder subBuilder = null;
            if (sourceCase_ == 1) {
              subBuilder = ((com.google.containeranalysis.v1alpha1.StorageSource) source_).toBuilder();
            }
            source_ =
                input.readMessage(com.google.containeranalysis.v1alpha1.StorageSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.containeranalysis.v1alpha1.StorageSource) source_);
              source_ = subBuilder.buildPartial();
            }
            sourceCase_ = 1;
            break;
          }
          case 18: {
            com.google.containeranalysis.v1alpha1.RepoSource.Builder subBuilder = null;
            if (sourceCase_ == 2) {
              subBuilder = ((com.google.containeranalysis.v1alpha1.RepoSource) source_).toBuilder();
            }
            source_ =
                input.readMessage(com.google.containeranalysis.v1alpha1.RepoSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.containeranalysis.v1alpha1.RepoSource) source_);
              source_ = subBuilder.buildPartial();
            }
            sourceCase_ = 2;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              fileHashes_ = com.google.protobuf.MapField.newMapField(
                  FileHashesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>
            fileHashes__ = input.readMessage(
                FileHashesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            fileHashes_.getMutableMap().put(
                fileHashes__.getKey(), fileHashes__.getValue());
            break;
          }
          case 34: {
            com.google.containeranalysis.v1alpha1.StorageSource.Builder subBuilder = null;
            if (artifactStorageSource_ != null) {
              subBuilder = artifactStorageSource_.toBuilder();
            }
            artifactStorageSource_ = input.readMessage(com.google.containeranalysis.v1alpha1.StorageSource.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(artifactStorageSource_);
              artifactStorageSource_ = subBuilder.buildPartial();
            }

            break;
          }
          case 58: {
            com.google.containeranalysis.v1alpha1.SourceContext.Builder subBuilder = null;
            if (context_ != null) {
              subBuilder = context_.toBuilder();
            }
            context_ = input.readMessage(com.google.containeranalysis.v1alpha1.SourceContext.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(context_);
              context_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              additionalContexts_ = new java.util.ArrayList<com.google.containeranalysis.v1alpha1.SourceContext>();
              mutable_bitField0_ |= 0x00000020;
            }
            additionalContexts_.add(
                input.readMessage(com.google.containeranalysis.v1alpha1.SourceContext.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        additionalContexts_ = java.util.Collections.unmodifiableList(additionalContexts_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.containeranalysis.v1alpha1.Provenance.internal_static_google_devtools_containeranalysis_v1alpha1_Source_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 3:
        return internalGetFileHashes();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.containeranalysis.v1alpha1.Provenance.internal_static_google_devtools_containeranalysis_v1alpha1_Source_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.containeranalysis.v1alpha1.Source.class, com.google.containeranalysis.v1alpha1.Source.Builder.class);
  }

  private int bitField0_;
  private int sourceCase_ = 0;
  private java.lang.Object source_;
  public enum SourceCase
      implements com.google.protobuf.Internal.EnumLite {
    STORAGE_SOURCE(1),
    REPO_SOURCE(2),
    SOURCE_NOT_SET(0);
    private final int value;
    private SourceCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SourceCase valueOf(int value) {
      return forNumber(value);
    }

    public static SourceCase forNumber(int value) {
      switch (value) {
        case 1: return STORAGE_SOURCE;
        case 2: return REPO_SOURCE;
        case 0: return SOURCE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SourceCase
  getSourceCase() {
    return SourceCase.forNumber(
        sourceCase_);
  }

  public static final int STORAGE_SOURCE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * If provided, get the source from this location in in Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
   */
  public boolean hasStorageSource() {
    return sourceCase_ == 1;
  }
  /**
   * <pre>
   * If provided, get the source from this location in in Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
   */
  public com.google.containeranalysis.v1alpha1.StorageSource getStorageSource() {
    if (sourceCase_ == 1) {
       return (com.google.containeranalysis.v1alpha1.StorageSource) source_;
    }
    return com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance();
  }
  /**
   * <pre>
   * If provided, get the source from this location in in Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
   */
  public com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder getStorageSourceOrBuilder() {
    if (sourceCase_ == 1) {
       return (com.google.containeranalysis.v1alpha1.StorageSource) source_;
    }
    return com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance();
  }

  public static final int REPO_SOURCE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * If provided, get source from this location in a Cloud Repo.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
   */
  public boolean hasRepoSource() {
    return sourceCase_ == 2;
  }
  /**
   * <pre>
   * If provided, get source from this location in a Cloud Repo.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
   */
  public com.google.containeranalysis.v1alpha1.RepoSource getRepoSource() {
    if (sourceCase_ == 2) {
       return (com.google.containeranalysis.v1alpha1.RepoSource) source_;
    }
    return com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance();
  }
  /**
   * <pre>
   * If provided, get source from this location in a Cloud Repo.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
   */
  public com.google.containeranalysis.v1alpha1.RepoSourceOrBuilder getRepoSourceOrBuilder() {
    if (sourceCase_ == 2) {
       return (com.google.containeranalysis.v1alpha1.RepoSource) source_;
    }
    return com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance();
  }

  public static final int ARTIFACT_STORAGE_SOURCE_FIELD_NUMBER = 4;
  private com.google.containeranalysis.v1alpha1.StorageSource artifactStorageSource_;
  /**
   * <pre>
   * If provided, the input binary artifacts for the build came from this
   * location.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
   */
  public boolean hasArtifactStorageSource() {
    return artifactStorageSource_ != null;
  }
  /**
   * <pre>
   * If provided, the input binary artifacts for the build came from this
   * location.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
   */
  public com.google.containeranalysis.v1alpha1.StorageSource getArtifactStorageSource() {
    return artifactStorageSource_ == null ? com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance() : artifactStorageSource_;
  }
  /**
   * <pre>
   * If provided, the input binary artifacts for the build came from this
   * location.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
   */
  public com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder getArtifactStorageSourceOrBuilder() {
    return getArtifactStorageSource();
  }

  public static final int FILE_HASHES_FIELD_NUMBER = 3;
  private static final class FileHashesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>newDefaultInstance(
                com.google.containeranalysis.v1alpha1.Provenance.internal_static_google_devtools_containeranalysis_v1alpha1_Source_FileHashesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.containeranalysis.v1alpha1.FileHashes.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> fileHashes_;
  private com.google.protobuf.MapField<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>
  internalGetFileHashes() {
    if (fileHashes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          FileHashesDefaultEntryHolder.defaultEntry);
    }
    return fileHashes_;
  }

  public int getFileHashesCount() {
    return internalGetFileHashes().getMap().size();
  }
  /**
   * <pre>
   * Hash(es) of the build source, which can be used to verify that the original
   * source integrity was maintained in the build.
   * The keys to this map are file paths used as build source and the values
   * contain the hash values for those files.
   * If the build source came in a single package such as a gzipped tarfile
   * (.tar.gz), the FileHash will be for the single path to that file.
   * </pre>
   *
   * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
   */

  public boolean containsFileHashes(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetFileHashes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getFileHashesMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> getFileHashes() {
    return getFileHashesMap();
  }
  /**
   * <pre>
   * Hash(es) of the build source, which can be used to verify that the original
   * source integrity was maintained in the build.
   * The keys to this map are file paths used as build source and the values
   * contain the hash values for those files.
   * If the build source came in a single package such as a gzipped tarfile
   * (.tar.gz), the FileHash will be for the single path to that file.
   * </pre>
   *
   * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
   */

  public java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> getFileHashesMap() {
    return internalGetFileHashes().getMap();
  }
  /**
   * <pre>
   * Hash(es) of the build source, which can be used to verify that the original
   * source integrity was maintained in the build.
   * The keys to this map are file paths used as build source and the values
   * contain the hash values for those files.
   * If the build source came in a single package such as a gzipped tarfile
   * (.tar.gz), the FileHash will be for the single path to that file.
   * </pre>
   *
   * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
   */

  public com.google.containeranalysis.v1alpha1.FileHashes getFileHashesOrDefault(
      java.lang.String key,
      com.google.containeranalysis.v1alpha1.FileHashes defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> map =
        internalGetFileHashes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Hash(es) of the build source, which can be used to verify that the original
   * source integrity was maintained in the build.
   * The keys to this map are file paths used as build source and the values
   * contain the hash values for those files.
   * If the build source came in a single package such as a gzipped tarfile
   * (.tar.gz), the FileHash will be for the single path to that file.
   * </pre>
   *
   * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
   */

  public com.google.containeranalysis.v1alpha1.FileHashes getFileHashesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> map =
        internalGetFileHashes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CONTEXT_FIELD_NUMBER = 7;
  private com.google.containeranalysis.v1alpha1.SourceContext context_;
  /**
   * <pre>
   * If provided, the source code used for the build came from this location.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
   */
  public boolean hasContext() {
    return context_ != null;
  }
  /**
   * <pre>
   * If provided, the source code used for the build came from this location.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
   */
  public com.google.containeranalysis.v1alpha1.SourceContext getContext() {
    return context_ == null ? com.google.containeranalysis.v1alpha1.SourceContext.getDefaultInstance() : context_;
  }
  /**
   * <pre>
   * If provided, the source code used for the build came from this location.
   * </pre>
   *
   * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
   */
  public com.google.containeranalysis.v1alpha1.SourceContextOrBuilder getContextOrBuilder() {
    return getContext();
  }

  public static final int ADDITIONAL_CONTEXTS_FIELD_NUMBER = 8;
  private java.util.List<com.google.containeranalysis.v1alpha1.SourceContext> additionalContexts_;
  /**
   * <pre>
   * If provided, some of the source code used for the build may be found in
   * these locations, in the case where the source repository had multiple
   * remotes or submodules. This list will not include the context specified in
   * the context field.
   * </pre>
   *
   * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
   */
  public java.util.List<com.google.containeranalysis.v1alpha1.SourceContext> getAdditionalContextsList() {
    return additionalContexts_;
  }
  /**
   * <pre>
   * If provided, some of the source code used for the build may be found in
   * these locations, in the case where the source repository had multiple
   * remotes or submodules. This list will not include the context specified in
   * the context field.
   * </pre>
   *
   * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
   */
  public java.util.List<? extends com.google.containeranalysis.v1alpha1.SourceContextOrBuilder> 
      getAdditionalContextsOrBuilderList() {
    return additionalContexts_;
  }
  /**
   * <pre>
   * If provided, some of the source code used for the build may be found in
   * these locations, in the case where the source repository had multiple
   * remotes or submodules. This list will not include the context specified in
   * the context field.
   * </pre>
   *
   * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
   */
  public int getAdditionalContextsCount() {
    return additionalContexts_.size();
  }
  /**
   * <pre>
   * If provided, some of the source code used for the build may be found in
   * these locations, in the case where the source repository had multiple
   * remotes or submodules. This list will not include the context specified in
   * the context field.
   * </pre>
   *
   * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
   */
  public com.google.containeranalysis.v1alpha1.SourceContext getAdditionalContexts(int index) {
    return additionalContexts_.get(index);
  }
  /**
   * <pre>
   * If provided, some of the source code used for the build may be found in
   * these locations, in the case where the source repository had multiple
   * remotes or submodules. This list will not include the context specified in
   * the context field.
   * </pre>
   *
   * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
   */
  public com.google.containeranalysis.v1alpha1.SourceContextOrBuilder getAdditionalContextsOrBuilder(
      int index) {
    return additionalContexts_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sourceCase_ == 1) {
      output.writeMessage(1, (com.google.containeranalysis.v1alpha1.StorageSource) source_);
    }
    if (sourceCase_ == 2) {
      output.writeMessage(2, (com.google.containeranalysis.v1alpha1.RepoSource) source_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetFileHashes(),
        FileHashesDefaultEntryHolder.defaultEntry,
        3);
    if (artifactStorageSource_ != null) {
      output.writeMessage(4, getArtifactStorageSource());
    }
    if (context_ != null) {
      output.writeMessage(7, getContext());
    }
    for (int i = 0; i < additionalContexts_.size(); i++) {
      output.writeMessage(8, additionalContexts_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sourceCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.containeranalysis.v1alpha1.StorageSource) source_);
    }
    if (sourceCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.containeranalysis.v1alpha1.RepoSource) source_);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> entry
         : internalGetFileHashes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>
      fileHashes__ = FileHashesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fileHashes__);
    }
    if (artifactStorageSource_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getArtifactStorageSource());
    }
    if (context_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getContext());
    }
    for (int i = 0; i < additionalContexts_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, additionalContexts_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.containeranalysis.v1alpha1.Source)) {
      return super.equals(obj);
    }
    com.google.containeranalysis.v1alpha1.Source other = (com.google.containeranalysis.v1alpha1.Source) obj;

    if (hasArtifactStorageSource() != other.hasArtifactStorageSource()) return false;
    if (hasArtifactStorageSource()) {
      if (!getArtifactStorageSource()
          .equals(other.getArtifactStorageSource())) return false;
    }
    if (!internalGetFileHashes().equals(
        other.internalGetFileHashes())) return false;
    if (hasContext() != other.hasContext()) return false;
    if (hasContext()) {
      if (!getContext()
          .equals(other.getContext())) return false;
    }
    if (!getAdditionalContextsList()
        .equals(other.getAdditionalContextsList())) return false;
    if (!getSourceCase().equals(other.getSourceCase())) return false;
    switch (sourceCase_) {
      case 1:
        if (!getStorageSource()
            .equals(other.getStorageSource())) return false;
        break;
      case 2:
        if (!getRepoSource()
            .equals(other.getRepoSource())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasArtifactStorageSource()) {
      hash = (37 * hash) + ARTIFACT_STORAGE_SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getArtifactStorageSource().hashCode();
    }
    if (!internalGetFileHashes().getMap().isEmpty()) {
      hash = (37 * hash) + FILE_HASHES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetFileHashes().hashCode();
    }
    if (hasContext()) {
      hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getContext().hashCode();
    }
    if (getAdditionalContextsCount() > 0) {
      hash = (37 * hash) + ADDITIONAL_CONTEXTS_FIELD_NUMBER;
      hash = (53 * hash) + getAdditionalContextsList().hashCode();
    }
    switch (sourceCase_) {
      case 1:
        hash = (37 * hash) + STORAGE_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getStorageSource().hashCode();
        break;
      case 2:
        hash = (37 * hash) + REPO_SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getRepoSource().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.containeranalysis.v1alpha1.Source parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.containeranalysis.v1alpha1.Source prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Source describes the location of the source used for the build.
   * </pre>
   *
   * Protobuf type {@code google.devtools.containeranalysis.v1alpha1.Source}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.devtools.containeranalysis.v1alpha1.Source)
      com.google.containeranalysis.v1alpha1.SourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.containeranalysis.v1alpha1.Provenance.internal_static_google_devtools_containeranalysis_v1alpha1_Source_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetFileHashes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetMutableFileHashes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.containeranalysis.v1alpha1.Provenance.internal_static_google_devtools_containeranalysis_v1alpha1_Source_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.containeranalysis.v1alpha1.Source.class, com.google.containeranalysis.v1alpha1.Source.Builder.class);
    }

    // Construct using com.google.containeranalysis.v1alpha1.Source.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAdditionalContextsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (artifactStorageSourceBuilder_ == null) {
        artifactStorageSource_ = null;
      } else {
        artifactStorageSource_ = null;
        artifactStorageSourceBuilder_ = null;
      }
      internalGetMutableFileHashes().clear();
      if (contextBuilder_ == null) {
        context_ = null;
      } else {
        context_ = null;
        contextBuilder_ = null;
      }
      if (additionalContextsBuilder_ == null) {
        additionalContexts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        additionalContextsBuilder_.clear();
      }
      sourceCase_ = 0;
      source_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.containeranalysis.v1alpha1.Provenance.internal_static_google_devtools_containeranalysis_v1alpha1_Source_descriptor;
    }

    @java.lang.Override
    public com.google.containeranalysis.v1alpha1.Source getDefaultInstanceForType() {
      return com.google.containeranalysis.v1alpha1.Source.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.containeranalysis.v1alpha1.Source build() {
      com.google.containeranalysis.v1alpha1.Source result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.containeranalysis.v1alpha1.Source buildPartial() {
      com.google.containeranalysis.v1alpha1.Source result = new com.google.containeranalysis.v1alpha1.Source(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (sourceCase_ == 1) {
        if (storageSourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = storageSourceBuilder_.build();
        }
      }
      if (sourceCase_ == 2) {
        if (repoSourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = repoSourceBuilder_.build();
        }
      }
      if (artifactStorageSourceBuilder_ == null) {
        result.artifactStorageSource_ = artifactStorageSource_;
      } else {
        result.artifactStorageSource_ = artifactStorageSourceBuilder_.build();
      }
      result.fileHashes_ = internalGetFileHashes();
      result.fileHashes_.makeImmutable();
      if (contextBuilder_ == null) {
        result.context_ = context_;
      } else {
        result.context_ = contextBuilder_.build();
      }
      if (additionalContextsBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          additionalContexts_ = java.util.Collections.unmodifiableList(additionalContexts_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.additionalContexts_ = additionalContexts_;
      } else {
        result.additionalContexts_ = additionalContextsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      result.sourceCase_ = sourceCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.containeranalysis.v1alpha1.Source) {
        return mergeFrom((com.google.containeranalysis.v1alpha1.Source)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.containeranalysis.v1alpha1.Source other) {
      if (other == com.google.containeranalysis.v1alpha1.Source.getDefaultInstance()) return this;
      if (other.hasArtifactStorageSource()) {
        mergeArtifactStorageSource(other.getArtifactStorageSource());
      }
      internalGetMutableFileHashes().mergeFrom(
          other.internalGetFileHashes());
      if (other.hasContext()) {
        mergeContext(other.getContext());
      }
      if (additionalContextsBuilder_ == null) {
        if (!other.additionalContexts_.isEmpty()) {
          if (additionalContexts_.isEmpty()) {
            additionalContexts_ = other.additionalContexts_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureAdditionalContextsIsMutable();
            additionalContexts_.addAll(other.additionalContexts_);
          }
          onChanged();
        }
      } else {
        if (!other.additionalContexts_.isEmpty()) {
          if (additionalContextsBuilder_.isEmpty()) {
            additionalContextsBuilder_.dispose();
            additionalContextsBuilder_ = null;
            additionalContexts_ = other.additionalContexts_;
            bitField0_ = (bitField0_ & ~0x00000020);
            additionalContextsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAdditionalContextsFieldBuilder() : null;
          } else {
            additionalContextsBuilder_.addAllMessages(other.additionalContexts_);
          }
        }
      }
      switch (other.getSourceCase()) {
        case STORAGE_SOURCE: {
          mergeStorageSource(other.getStorageSource());
          break;
        }
        case REPO_SOURCE: {
          mergeRepoSource(other.getRepoSource());
          break;
        }
        case SOURCE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.containeranalysis.v1alpha1.Source parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.containeranalysis.v1alpha1.Source) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int sourceCase_ = 0;
    private java.lang.Object source_;
    public SourceCase
        getSourceCase() {
      return SourceCase.forNumber(
          sourceCase_);
    }

    public Builder clearSource() {
      sourceCase_ = 0;
      source_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.StorageSource, com.google.containeranalysis.v1alpha1.StorageSource.Builder, com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder> storageSourceBuilder_;
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public boolean hasStorageSource() {
      return sourceCase_ == 1;
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public com.google.containeranalysis.v1alpha1.StorageSource getStorageSource() {
      if (storageSourceBuilder_ == null) {
        if (sourceCase_ == 1) {
          return (com.google.containeranalysis.v1alpha1.StorageSource) source_;
        }
        return com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 1) {
          return storageSourceBuilder_.getMessage();
        }
        return com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public Builder setStorageSource(com.google.containeranalysis.v1alpha1.StorageSource value) {
      if (storageSourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        storageSourceBuilder_.setMessage(value);
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public Builder setStorageSource(
        com.google.containeranalysis.v1alpha1.StorageSource.Builder builderForValue) {
      if (storageSourceBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        storageSourceBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public Builder mergeStorageSource(com.google.containeranalysis.v1alpha1.StorageSource value) {
      if (storageSourceBuilder_ == null) {
        if (sourceCase_ == 1 &&
            source_ != com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance()) {
          source_ = com.google.containeranalysis.v1alpha1.StorageSource.newBuilder((com.google.containeranalysis.v1alpha1.StorageSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 1) {
          storageSourceBuilder_.mergeFrom(value);
        }
        storageSourceBuilder_.setMessage(value);
      }
      sourceCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public Builder clearStorageSource() {
      if (storageSourceBuilder_ == null) {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 1) {
          sourceCase_ = 0;
          source_ = null;
        }
        storageSourceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public com.google.containeranalysis.v1alpha1.StorageSource.Builder getStorageSourceBuilder() {
      return getStorageSourceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    public com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder getStorageSourceOrBuilder() {
      if ((sourceCase_ == 1) && (storageSourceBuilder_ != null)) {
        return storageSourceBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 1) {
          return (com.google.containeranalysis.v1alpha1.StorageSource) source_;
        }
        return com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource storage_source = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.StorageSource, com.google.containeranalysis.v1alpha1.StorageSource.Builder, com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder> 
        getStorageSourceFieldBuilder() {
      if (storageSourceBuilder_ == null) {
        if (!(sourceCase_ == 1)) {
          source_ = com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance();
        }
        storageSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.containeranalysis.v1alpha1.StorageSource, com.google.containeranalysis.v1alpha1.StorageSource.Builder, com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder>(
                (com.google.containeranalysis.v1alpha1.StorageSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 1;
      onChanged();;
      return storageSourceBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.RepoSource, com.google.containeranalysis.v1alpha1.RepoSource.Builder, com.google.containeranalysis.v1alpha1.RepoSourceOrBuilder> repoSourceBuilder_;
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public boolean hasRepoSource() {
      return sourceCase_ == 2;
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public com.google.containeranalysis.v1alpha1.RepoSource getRepoSource() {
      if (repoSourceBuilder_ == null) {
        if (sourceCase_ == 2) {
          return (com.google.containeranalysis.v1alpha1.RepoSource) source_;
        }
        return com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance();
      } else {
        if (sourceCase_ == 2) {
          return repoSourceBuilder_.getMessage();
        }
        return com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public Builder setRepoSource(com.google.containeranalysis.v1alpha1.RepoSource value) {
      if (repoSourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        source_ = value;
        onChanged();
      } else {
        repoSourceBuilder_.setMessage(value);
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public Builder setRepoSource(
        com.google.containeranalysis.v1alpha1.RepoSource.Builder builderForValue) {
      if (repoSourceBuilder_ == null) {
        source_ = builderForValue.build();
        onChanged();
      } else {
        repoSourceBuilder_.setMessage(builderForValue.build());
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public Builder mergeRepoSource(com.google.containeranalysis.v1alpha1.RepoSource value) {
      if (repoSourceBuilder_ == null) {
        if (sourceCase_ == 2 &&
            source_ != com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance()) {
          source_ = com.google.containeranalysis.v1alpha1.RepoSource.newBuilder((com.google.containeranalysis.v1alpha1.RepoSource) source_)
              .mergeFrom(value).buildPartial();
        } else {
          source_ = value;
        }
        onChanged();
      } else {
        if (sourceCase_ == 2) {
          repoSourceBuilder_.mergeFrom(value);
        }
        repoSourceBuilder_.setMessage(value);
      }
      sourceCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public Builder clearRepoSource() {
      if (repoSourceBuilder_ == null) {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
          onChanged();
        }
      } else {
        if (sourceCase_ == 2) {
          sourceCase_ = 0;
          source_ = null;
        }
        repoSourceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public com.google.containeranalysis.v1alpha1.RepoSource.Builder getRepoSourceBuilder() {
      return getRepoSourceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    public com.google.containeranalysis.v1alpha1.RepoSourceOrBuilder getRepoSourceOrBuilder() {
      if ((sourceCase_ == 2) && (repoSourceBuilder_ != null)) {
        return repoSourceBuilder_.getMessageOrBuilder();
      } else {
        if (sourceCase_ == 2) {
          return (com.google.containeranalysis.v1alpha1.RepoSource) source_;
        }
        return com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.RepoSource repo_source = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.RepoSource, com.google.containeranalysis.v1alpha1.RepoSource.Builder, com.google.containeranalysis.v1alpha1.RepoSourceOrBuilder> 
        getRepoSourceFieldBuilder() {
      if (repoSourceBuilder_ == null) {
        if (!(sourceCase_ == 2)) {
          source_ = com.google.containeranalysis.v1alpha1.RepoSource.getDefaultInstance();
        }
        repoSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.containeranalysis.v1alpha1.RepoSource, com.google.containeranalysis.v1alpha1.RepoSource.Builder, com.google.containeranalysis.v1alpha1.RepoSourceOrBuilder>(
                (com.google.containeranalysis.v1alpha1.RepoSource) source_,
                getParentForChildren(),
                isClean());
        source_ = null;
      }
      sourceCase_ = 2;
      onChanged();;
      return repoSourceBuilder_;
    }

    private com.google.containeranalysis.v1alpha1.StorageSource artifactStorageSource_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.StorageSource, com.google.containeranalysis.v1alpha1.StorageSource.Builder, com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder> artifactStorageSourceBuilder_;
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public boolean hasArtifactStorageSource() {
      return artifactStorageSourceBuilder_ != null || artifactStorageSource_ != null;
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public com.google.containeranalysis.v1alpha1.StorageSource getArtifactStorageSource() {
      if (artifactStorageSourceBuilder_ == null) {
        return artifactStorageSource_ == null ? com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance() : artifactStorageSource_;
      } else {
        return artifactStorageSourceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public Builder setArtifactStorageSource(com.google.containeranalysis.v1alpha1.StorageSource value) {
      if (artifactStorageSourceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        artifactStorageSource_ = value;
        onChanged();
      } else {
        artifactStorageSourceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public Builder setArtifactStorageSource(
        com.google.containeranalysis.v1alpha1.StorageSource.Builder builderForValue) {
      if (artifactStorageSourceBuilder_ == null) {
        artifactStorageSource_ = builderForValue.build();
        onChanged();
      } else {
        artifactStorageSourceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public Builder mergeArtifactStorageSource(com.google.containeranalysis.v1alpha1.StorageSource value) {
      if (artifactStorageSourceBuilder_ == null) {
        if (artifactStorageSource_ != null) {
          artifactStorageSource_ =
            com.google.containeranalysis.v1alpha1.StorageSource.newBuilder(artifactStorageSource_).mergeFrom(value).buildPartial();
        } else {
          artifactStorageSource_ = value;
        }
        onChanged();
      } else {
        artifactStorageSourceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public Builder clearArtifactStorageSource() {
      if (artifactStorageSourceBuilder_ == null) {
        artifactStorageSource_ = null;
        onChanged();
      } else {
        artifactStorageSource_ = null;
        artifactStorageSourceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public com.google.containeranalysis.v1alpha1.StorageSource.Builder getArtifactStorageSourceBuilder() {
      
      onChanged();
      return getArtifactStorageSourceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    public com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder getArtifactStorageSourceOrBuilder() {
      if (artifactStorageSourceBuilder_ != null) {
        return artifactStorageSourceBuilder_.getMessageOrBuilder();
      } else {
        return artifactStorageSource_ == null ?
            com.google.containeranalysis.v1alpha1.StorageSource.getDefaultInstance() : artifactStorageSource_;
      }
    }
    /**
     * <pre>
     * If provided, the input binary artifacts for the build came from this
     * location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.StorageSource artifact_storage_source = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.StorageSource, com.google.containeranalysis.v1alpha1.StorageSource.Builder, com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder> 
        getArtifactStorageSourceFieldBuilder() {
      if (artifactStorageSourceBuilder_ == null) {
        artifactStorageSourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.containeranalysis.v1alpha1.StorageSource, com.google.containeranalysis.v1alpha1.StorageSource.Builder, com.google.containeranalysis.v1alpha1.StorageSourceOrBuilder>(
                getArtifactStorageSource(),
                getParentForChildren(),
                isClean());
        artifactStorageSource_ = null;
      }
      return artifactStorageSourceBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> fileHashes_;
    private com.google.protobuf.MapField<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>
    internalGetFileHashes() {
      if (fileHashes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FileHashesDefaultEntryHolder.defaultEntry);
      }
      return fileHashes_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>
    internalGetMutableFileHashes() {
      onChanged();;
      if (fileHashes_ == null) {
        fileHashes_ = com.google.protobuf.MapField.newMapField(
            FileHashesDefaultEntryHolder.defaultEntry);
      }
      if (!fileHashes_.isMutable()) {
        fileHashes_ = fileHashes_.copy();
      }
      return fileHashes_;
    }

    public int getFileHashesCount() {
      return internalGetFileHashes().getMap().size();
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */

    public boolean containsFileHashes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetFileHashes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFileHashesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> getFileHashes() {
      return getFileHashesMap();
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */

    public java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> getFileHashesMap() {
      return internalGetFileHashes().getMap();
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */

    public com.google.containeranalysis.v1alpha1.FileHashes getFileHashesOrDefault(
        java.lang.String key,
        com.google.containeranalysis.v1alpha1.FileHashes defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> map =
          internalGetFileHashes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */

    public com.google.containeranalysis.v1alpha1.FileHashes getFileHashesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> map =
          internalGetFileHashes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearFileHashes() {
      internalGetMutableFileHashes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */

    public Builder removeFileHashes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableFileHashes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes>
    getMutableFileHashes() {
      return internalGetMutableFileHashes().getMutableMap();
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */
    public Builder putFileHashes(
        java.lang.String key,
        com.google.containeranalysis.v1alpha1.FileHashes value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableFileHashes().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Hash(es) of the build source, which can be used to verify that the original
     * source integrity was maintained in the build.
     * The keys to this map are file paths used as build source and the values
     * contain the hash values for those files.
     * If the build source came in a single package such as a gzipped tarfile
     * (.tar.gz), the FileHash will be for the single path to that file.
     * </pre>
     *
     * <code>map&lt;string, .google.devtools.containeranalysis.v1alpha1.FileHashes&gt; file_hashes = 3;</code>
     */

    public Builder putAllFileHashes(
        java.util.Map<java.lang.String, com.google.containeranalysis.v1alpha1.FileHashes> values) {
      internalGetMutableFileHashes().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.containeranalysis.v1alpha1.SourceContext context_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.SourceContext, com.google.containeranalysis.v1alpha1.SourceContext.Builder, com.google.containeranalysis.v1alpha1.SourceContextOrBuilder> contextBuilder_;
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public boolean hasContext() {
      return contextBuilder_ != null || context_ != null;
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContext getContext() {
      if (contextBuilder_ == null) {
        return context_ == null ? com.google.containeranalysis.v1alpha1.SourceContext.getDefaultInstance() : context_;
      } else {
        return contextBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public Builder setContext(com.google.containeranalysis.v1alpha1.SourceContext value) {
      if (contextBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        context_ = value;
        onChanged();
      } else {
        contextBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public Builder setContext(
        com.google.containeranalysis.v1alpha1.SourceContext.Builder builderForValue) {
      if (contextBuilder_ == null) {
        context_ = builderForValue.build();
        onChanged();
      } else {
        contextBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public Builder mergeContext(com.google.containeranalysis.v1alpha1.SourceContext value) {
      if (contextBuilder_ == null) {
        if (context_ != null) {
          context_ =
            com.google.containeranalysis.v1alpha1.SourceContext.newBuilder(context_).mergeFrom(value).buildPartial();
        } else {
          context_ = value;
        }
        onChanged();
      } else {
        contextBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public Builder clearContext() {
      if (contextBuilder_ == null) {
        context_ = null;
        onChanged();
      } else {
        context_ = null;
        contextBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContext.Builder getContextBuilder() {
      
      onChanged();
      return getContextFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContextOrBuilder getContextOrBuilder() {
      if (contextBuilder_ != null) {
        return contextBuilder_.getMessageOrBuilder();
      } else {
        return context_ == null ?
            com.google.containeranalysis.v1alpha1.SourceContext.getDefaultInstance() : context_;
      }
    }
    /**
     * <pre>
     * If provided, the source code used for the build came from this location.
     * </pre>
     *
     * <code>.google.devtools.containeranalysis.v1alpha1.SourceContext context = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.SourceContext, com.google.containeranalysis.v1alpha1.SourceContext.Builder, com.google.containeranalysis.v1alpha1.SourceContextOrBuilder> 
        getContextFieldBuilder() {
      if (contextBuilder_ == null) {
        contextBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.containeranalysis.v1alpha1.SourceContext, com.google.containeranalysis.v1alpha1.SourceContext.Builder, com.google.containeranalysis.v1alpha1.SourceContextOrBuilder>(
                getContext(),
                getParentForChildren(),
                isClean());
        context_ = null;
      }
      return contextBuilder_;
    }

    private java.util.List<com.google.containeranalysis.v1alpha1.SourceContext> additionalContexts_ =
      java.util.Collections.emptyList();
    private void ensureAdditionalContextsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        additionalContexts_ = new java.util.ArrayList<com.google.containeranalysis.v1alpha1.SourceContext>(additionalContexts_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.SourceContext, com.google.containeranalysis.v1alpha1.SourceContext.Builder, com.google.containeranalysis.v1alpha1.SourceContextOrBuilder> additionalContextsBuilder_;

    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public java.util.List<com.google.containeranalysis.v1alpha1.SourceContext> getAdditionalContextsList() {
      if (additionalContextsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(additionalContexts_);
      } else {
        return additionalContextsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public int getAdditionalContextsCount() {
      if (additionalContextsBuilder_ == null) {
        return additionalContexts_.size();
      } else {
        return additionalContextsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContext getAdditionalContexts(int index) {
      if (additionalContextsBuilder_ == null) {
        return additionalContexts_.get(index);
      } else {
        return additionalContextsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder setAdditionalContexts(
        int index, com.google.containeranalysis.v1alpha1.SourceContext value) {
      if (additionalContextsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalContextsIsMutable();
        additionalContexts_.set(index, value);
        onChanged();
      } else {
        additionalContextsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder setAdditionalContexts(
        int index, com.google.containeranalysis.v1alpha1.SourceContext.Builder builderForValue) {
      if (additionalContextsBuilder_ == null) {
        ensureAdditionalContextsIsMutable();
        additionalContexts_.set(index, builderForValue.build());
        onChanged();
      } else {
        additionalContextsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder addAdditionalContexts(com.google.containeranalysis.v1alpha1.SourceContext value) {
      if (additionalContextsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalContextsIsMutable();
        additionalContexts_.add(value);
        onChanged();
      } else {
        additionalContextsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder addAdditionalContexts(
        int index, com.google.containeranalysis.v1alpha1.SourceContext value) {
      if (additionalContextsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalContextsIsMutable();
        additionalContexts_.add(index, value);
        onChanged();
      } else {
        additionalContextsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder addAdditionalContexts(
        com.google.containeranalysis.v1alpha1.SourceContext.Builder builderForValue) {
      if (additionalContextsBuilder_ == null) {
        ensureAdditionalContextsIsMutable();
        additionalContexts_.add(builderForValue.build());
        onChanged();
      } else {
        additionalContextsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder addAdditionalContexts(
        int index, com.google.containeranalysis.v1alpha1.SourceContext.Builder builderForValue) {
      if (additionalContextsBuilder_ == null) {
        ensureAdditionalContextsIsMutable();
        additionalContexts_.add(index, builderForValue.build());
        onChanged();
      } else {
        additionalContextsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder addAllAdditionalContexts(
        java.lang.Iterable<? extends com.google.containeranalysis.v1alpha1.SourceContext> values) {
      if (additionalContextsBuilder_ == null) {
        ensureAdditionalContextsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, additionalContexts_);
        onChanged();
      } else {
        additionalContextsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder clearAdditionalContexts() {
      if (additionalContextsBuilder_ == null) {
        additionalContexts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        additionalContextsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public Builder removeAdditionalContexts(int index) {
      if (additionalContextsBuilder_ == null) {
        ensureAdditionalContextsIsMutable();
        additionalContexts_.remove(index);
        onChanged();
      } else {
        additionalContextsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContext.Builder getAdditionalContextsBuilder(
        int index) {
      return getAdditionalContextsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContextOrBuilder getAdditionalContextsOrBuilder(
        int index) {
      if (additionalContextsBuilder_ == null) {
        return additionalContexts_.get(index);  } else {
        return additionalContextsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public java.util.List<? extends com.google.containeranalysis.v1alpha1.SourceContextOrBuilder> 
         getAdditionalContextsOrBuilderList() {
      if (additionalContextsBuilder_ != null) {
        return additionalContextsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(additionalContexts_);
      }
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContext.Builder addAdditionalContextsBuilder() {
      return getAdditionalContextsFieldBuilder().addBuilder(
          com.google.containeranalysis.v1alpha1.SourceContext.getDefaultInstance());
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public com.google.containeranalysis.v1alpha1.SourceContext.Builder addAdditionalContextsBuilder(
        int index) {
      return getAdditionalContextsFieldBuilder().addBuilder(
          index, com.google.containeranalysis.v1alpha1.SourceContext.getDefaultInstance());
    }
    /**
     * <pre>
     * If provided, some of the source code used for the build may be found in
     * these locations, in the case where the source repository had multiple
     * remotes or submodules. This list will not include the context specified in
     * the context field.
     * </pre>
     *
     * <code>repeated .google.devtools.containeranalysis.v1alpha1.SourceContext additional_contexts = 8;</code>
     */
    public java.util.List<com.google.containeranalysis.v1alpha1.SourceContext.Builder> 
         getAdditionalContextsBuilderList() {
      return getAdditionalContextsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.containeranalysis.v1alpha1.SourceContext, com.google.containeranalysis.v1alpha1.SourceContext.Builder, com.google.containeranalysis.v1alpha1.SourceContextOrBuilder> 
        getAdditionalContextsFieldBuilder() {
      if (additionalContextsBuilder_ == null) {
        additionalContextsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.containeranalysis.v1alpha1.SourceContext, com.google.containeranalysis.v1alpha1.SourceContext.Builder, com.google.containeranalysis.v1alpha1.SourceContextOrBuilder>(
                additionalContexts_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        additionalContexts_ = null;
      }
      return additionalContextsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.devtools.containeranalysis.v1alpha1.Source)
  }

  // @@protoc_insertion_point(class_scope:google.devtools.containeranalysis.v1alpha1.Source)
  private static final com.google.containeranalysis.v1alpha1.Source DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.containeranalysis.v1alpha1.Source();
  }

  public static com.google.containeranalysis.v1alpha1.Source getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Source>
      PARSER = new com.google.protobuf.AbstractParser<Source>() {
    @java.lang.Override
    public Source parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Source(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Source> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Source> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.containeranalysis.v1alpha1.Source getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

