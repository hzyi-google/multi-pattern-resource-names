// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Note: this file is purely for documentation. Any contents are not expected
// to be loaded as the JS file.

/**
 * VulnerabilityType provides metadata about a security vulnerability.
 *
 * @property {number} cvssScore
 *   The CVSS score for this Vulnerability.
 *
 * @property {number} severity
 *   Note provider assigned impact of the vulnerability
 *
 *   The number should be among the values of [Severity]{@link google.devtools.containeranalysis.v1alpha1.Severity}
 *
 * @property {Object[]} details
 *   All information about the package to specifically identify this
 *   vulnerability. One entry per (version range and cpe_uri) the
 *   package vulnerability has manifested in.
 *
 *   This object should have the same structure as [Detail]{@link google.devtools.containeranalysis.v1alpha1.Detail}
 *
 * @typedef VulnerabilityType
 * @memberof google.devtools.containeranalysis.v1alpha1
 * @see [google.devtools.containeranalysis.v1alpha1.VulnerabilityType definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto}
 */
const VulnerabilityType = {
  // This is for documentation. Actual contents will be loaded by gRPC.

  /**
   * Version contains structured information about the version of the package.
   * For a discussion of this in Debian/Ubuntu:
   * http://serverfault.com/questions/604541/debian-packages-version-convention
   * For a discussion of this in Redhat/Fedora/Centos:
   * http://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/
   *
   * @property {number} epoch
   *   Used to correct mistakes in the version numbering scheme.
   *
   * @property {string} name
   *   The main part of the version name.
   *
   * @property {string} revision
   *   The iteration of the package build from the above version.
   *
   * @property {number} kind
   *   Distinguish between sentinel MIN/MAX versions and normal versions.
   *   If kind is not NORMAL, then the other fields are ignored.
   *
   *   The number should be among the values of [VersionKind]{@link google.devtools.containeranalysis.v1alpha1.VersionKind}
   *
   * @typedef Version
   * @memberof google.devtools.containeranalysis.v1alpha1
   * @see [google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Version definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto}
   */
  Version: {
    // This is for documentation. Actual contents will be loaded by gRPC.

    /**
     * Whether this is an ordinary package version or a
     * sentinel MIN/MAX version.
     *
     * @enum {number}
     * @memberof google.devtools.containeranalysis.v1alpha1
     */
    VersionKind: {

      /**
       * A standard package version, defined by the other fields.
       */
      NORMAL: 0,

      /**
       * A special version representing negative infinity,
       * other fields are ignored.
       */
      MINIMUM: 1,

      /**
       * A special version representing positive infinity,
       * other fields are ignored.
       */
      MAXIMUM: 2
    }
  },

  /**
   * Identifies all occurrences of this vulnerability in the package for a
   * specific distro/location
   * For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2
   *
   * @property {string} cpeUri
   *   The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in
   *   which the vulnerability manifests.  Examples include distro or storage
   *   location for vulnerable jar.
   *   This field can be used as a filter in list requests.
   *
   * @property {string} package
   *   The name of the package where the vulnerability was found.
   *   This field can be used as a filter in list requests.
   *
   * @property {Object} minAffectedVersion
   *   The min version of the package in which the vulnerability exists.
   *
   *   This object should have the same structure as [Version]{@link google.devtools.containeranalysis.v1alpha1.Version}
   *
   * @property {Object} maxAffectedVersion
   *   The max version of the package in which the vulnerability exists.
   *   This field can be used as a filter in list requests.
   *
   *   This object should have the same structure as [Version]{@link google.devtools.containeranalysis.v1alpha1.Version}
   *
   * @property {string} severityName
   *   The severity (eg: distro assigned severity) for this vulnerability.
   *
   * @property {string} description
   *   A vendor-specific description of this note.
   *
   * @property {Object} fixedLocation
   *   The fix for this specific package version.
   *
   *   This object should have the same structure as [VulnerabilityLocation]{@link google.devtools.containeranalysis.v1alpha1.VulnerabilityLocation}
   *
   * @property {string} packageType
   *   The type of package; whether native or non native(ruby gems,
   *   node.js packages etc)
   *
   * @property {boolean} isObsolete
   *   Whether this Detail is obsolete. Occurrences are expected not to point to
   *   obsolete details.
   *
   * @typedef Detail
   * @memberof google.devtools.containeranalysis.v1alpha1
   * @see [google.devtools.containeranalysis.v1alpha1.VulnerabilityType.Detail definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto}
   */
  Detail: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  },

  /**
   * Used by Occurrence to point to where the vulnerability exists and how
   * to fix it.
   *
   * @property {string} type
   *   The type of package; whether native or non native(ruby gems,
   *   node.js packages etc)
   *
   * @property {number} severity
   *   Output only. The note provider assigned Severity of the vulnerability.
   *
   *   The number should be among the values of [Severity]{@link google.devtools.containeranalysis.v1alpha1.Severity}
   *
   * @property {number} cvssScore
   *   Output only. The CVSS score of this vulnerability. CVSS score is on a
   *   scale of 0-10 where 0 indicates low severity and 10 indicates high
   *   severity.
   *
   * @property {Object[]} packageIssue
   *   The set of affected locations and their fixes (if available) within
   *   the associated resource.
   *
   *   This object should have the same structure as [PackageIssue]{@link google.devtools.containeranalysis.v1alpha1.PackageIssue}
   *
   * @typedef VulnerabilityDetails
   * @memberof google.devtools.containeranalysis.v1alpha1
   * @see [google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityDetails definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto}
   */
  VulnerabilityDetails: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  },

  /**
   * This message wraps a location affected by a vulnerability and its
   * associated fix (if one is available).
   *
   * @property {Object} affectedLocation
   *   The location of the vulnerability.
   *
   *   This object should have the same structure as [VulnerabilityLocation]{@link google.devtools.containeranalysis.v1alpha1.VulnerabilityLocation}
   *
   * @property {Object} fixedLocation
   *   The location of the available fix for vulnerability.
   *
   *   This object should have the same structure as [VulnerabilityLocation]{@link google.devtools.containeranalysis.v1alpha1.VulnerabilityLocation}
   *
   * @property {string} severityName
   *   The severity (eg: distro assigned severity) for this vulnerability.
   *
   * @typedef PackageIssue
   * @memberof google.devtools.containeranalysis.v1alpha1
   * @see [google.devtools.containeranalysis.v1alpha1.VulnerabilityType.PackageIssue definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto}
   */
  PackageIssue: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  },

  /**
   * The location of the vulnerability
   *
   * @property {string} cpeUri
   *   The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)
   *   format. Examples include distro or storage location for vulnerable jar.
   *   This field can be used as a filter in list requests.
   *
   * @property {string} package
   *   The package being described.
   *
   * @property {Object} version
   *   The version of the package being described.
   *   This field can be used as a filter in list requests.
   *
   *   This object should have the same structure as [Version]{@link google.devtools.containeranalysis.v1alpha1.Version}
   *
   * @typedef VulnerabilityLocation
   * @memberof google.devtools.containeranalysis.v1alpha1
   * @see [google.devtools.containeranalysis.v1alpha1.VulnerabilityType.VulnerabilityLocation definition in proto format]{@link https://github.com/googleapis/googleapis/blob/master/google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto}
   */
  VulnerabilityLocation: {
    // This is for documentation. Actual contents will be loaded by gRPC.
  },

  /**
   * Note provider-assigned severity/impact ranking
   *
   * @enum {number}
   * @memberof google.devtools.containeranalysis.v1alpha1
   */
  Severity: {

    /**
     * Unknown Impact
     */
    SEVERITY_UNSPECIFIED: 0,

    /**
     * Minimal Impact
     */
    MINIMAL: 1,

    /**
     * Low Impact
     */
    LOW: 2,

    /**
     * Medium Impact
     */
    MEDIUM: 3,

    /**
     * High Impact
     */
    HIGH: 4,

    /**
     * Critical Impact
     */
    CRITICAL: 5
  }
};