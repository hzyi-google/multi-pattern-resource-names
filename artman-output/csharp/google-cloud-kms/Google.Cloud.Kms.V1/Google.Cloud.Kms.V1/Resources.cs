// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/cloud/kms/v1/resources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Kms.V1 {

  /// <summary>Holder for reflection information generated from google/cloud/kms/v1/resources.proto</summary>
  public static partial class ResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for google/cloud/kms/v1/resources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNnb29nbGUvY2xvdWQva21zL3YxL3Jlc291cmNlcy5wcm90bxITZ29vZ2xl",
            "LmNsb3VkLmttcy52MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxof",
            "Z29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90bxoZZ29vZ2xlL2FwaS9y",
            "ZXNvdXJjZS5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3Rv",
            "Gh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIrUBCgdLZXlSaW5n",
            "EhEKBG5hbWUYASABKAlCA+BBAxI0CgtjcmVhdGVfdGltZRgCIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAzph6kFeCh9jbG91ZGttcy5n",
            "b29nbGVhcGlzLmNvbS9LZXlSaW5nEjtwcm9qZWN0cy97cHJvamVjdH0vbG9j",
            "YXRpb25zL3tsb2NhdGlvbn0va2V5UmluZ3Mve2tleV9yaW5nfSKGBgoJQ3J5",
            "cHRvS2V5EhEKBG5hbWUYASABKAlCA+BBAxI7CgdwcmltYXJ5GAIgASgLMiUu",
            "Z29vZ2xlLmNsb3VkLmttcy52MS5DcnlwdG9LZXlWZXJzaW9uQgPgQQMSRQoH",
            "cHVycG9zZRgDIAEoDjIvLmdvb2dsZS5jbG91ZC5rbXMudjEuQ3J5cHRvS2V5",
            "LkNyeXB0b0tleVB1cnBvc2VCA+BBBRI0CgtjcmVhdGVfdGltZRgFIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI2ChJuZXh0X3JvdGF0",
            "aW9uX3RpbWUYByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjQK",
            "D3JvdGF0aW9uX3BlcmlvZBgIIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJh",
            "dGlvbkgAEkcKEHZlcnNpb25fdGVtcGxhdGUYCyABKAsyLS5nb29nbGUuY2xv",
            "dWQua21zLnYxLkNyeXB0b0tleVZlcnNpb25UZW1wbGF0ZRI6CgZsYWJlbHMY",
            "CiADKAsyKi5nb29nbGUuY2xvdWQua21zLnYxLkNyeXB0b0tleS5MYWJlbHNF",
            "bnRyeRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBIngKEENyeXB0b0tleVB1cnBvc2USIgoeQ1JZUFRPX0tFWV9QVVJQ",
            "T1NFX1VOU1BFQ0lGSUVEEAASEwoPRU5DUllQVF9ERUNSWVBUEAESEwoPQVNZ",
            "TU1FVFJJQ19TSUdOEAUSFgoSQVNZTU1FVFJJQ19ERUNSWVBUEAY6e+pBeAoh",
            "Y2xvdWRrbXMuZ29vZ2xlYXBpcy5jb20vQ3J5cHRvS2V5ElNwcm9qZWN0cy97",
            "cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0va2V5UmluZ3Mve2tleV9y",
            "aW5nfS9jcnlwdG9LZXlzL3tjcnlwdG9fa2V5fUITChFyb3RhdGlvbl9zY2hl",
            "ZHVsZSKzAQoYQ3J5cHRvS2V5VmVyc2lvblRlbXBsYXRlEj4KEHByb3RlY3Rp",
            "b25fbGV2ZWwYASABKA4yJC5nb29nbGUuY2xvdWQua21zLnYxLlByb3RlY3Rp",
            "b25MZXZlbBJXCglhbGdvcml0aG0YAyABKA4yPy5nb29nbGUuY2xvdWQua21z",
            "LnYxLkNyeXB0b0tleVZlcnNpb24uQ3J5cHRvS2V5VmVyc2lvbkFsZ29yaXRo",
            "bUID4EECIvEBChdLZXlPcGVyYXRpb25BdHRlc3RhdGlvbhJTCgZmb3JtYXQY",
            "BCABKA4yPi5nb29nbGUuY2xvdWQua21zLnYxLktleU9wZXJhdGlvbkF0dGVz",
            "dGF0aW9uLkF0dGVzdGF0aW9uRm9ybWF0QgPgQQMSFAoHY29udGVudBgFIAEo",
            "DEID4EEDImsKEUF0dGVzdGF0aW9uRm9ybWF0EiIKHkFUVEVTVEFUSU9OX0ZP",
            "Uk1BVF9VTlNQRUNJRklFRBAAEhgKFENBVklVTV9WMV9DT01QUkVTU0VEEAMS",
            "GAoUQ0FWSVVNX1YyX0NPTVBSRVNTRUQQBCKHDQoQQ3J5cHRvS2V5VmVyc2lv",
            "bhIRCgRuYW1lGAEgASgJQgPgQQMSSgoFc3RhdGUYAyABKA4yOy5nb29nbGUu",
            "Y2xvdWQua21zLnYxLkNyeXB0b0tleVZlcnNpb24uQ3J5cHRvS2V5VmVyc2lv",
            "blN0YXRlEkMKEHByb3RlY3Rpb25fbGV2ZWwYByABKA4yJC5nb29nbGUuY2xv",
            "dWQua21zLnYxLlByb3RlY3Rpb25MZXZlbEID4EEDElcKCWFsZ29yaXRobRgK",
            "IAEoDjI/Lmdvb2dsZS5jbG91ZC5rbXMudjEuQ3J5cHRvS2V5VmVyc2lvbi5D",
            "cnlwdG9LZXlWZXJzaW9uQWxnb3JpdGhtQgPgQQMSRgoLYXR0ZXN0YXRpb24Y",
            "CCABKAsyLC5nb29nbGUuY2xvdWQua21zLnYxLktleU9wZXJhdGlvbkF0dGVz",
            "dGF0aW9uQgPgQQMSNAoLY3JlYXRlX3RpbWUYBCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgPgQQMSNgoNZ2VuZXJhdGVfdGltZRgLIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BBAxI1CgxkZXN0cm95X3Rp",
            "bWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgPgQQMSOwoS",
            "ZGVzdHJveV9ldmVudF90aW1lGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcEID4EEDEhcKCmltcG9ydF9qb2IYDiABKAlCA+BBAxI0CgtpbXBv",
            "cnRfdGltZRgPIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCA+BB",
            "AxIiChVpbXBvcnRfZmFpbHVyZV9yZWFzb24YECABKAlCA+BBAyKcBAoZQ3J5",
            "cHRvS2V5VmVyc2lvbkFsZ29yaXRobRIsCihDUllQVE9fS0VZX1ZFUlNJT05f",
            "QUxHT1JJVEhNX1VOU1BFQ0lGSUVEEAASHwobR09PR0xFX1NZTU1FVFJJQ19F",
            "TkNSWVBUSU9OEAESHAoYUlNBX1NJR05fUFNTXzIwNDhfU0hBMjU2EAISHAoY",
            "UlNBX1NJR05fUFNTXzMwNzJfU0hBMjU2EAMSHAoYUlNBX1NJR05fUFNTXzQw",
            "OTZfU0hBMjU2EAQSHAoYUlNBX1NJR05fUFNTXzQwOTZfU0hBNTEyEA8SHgoa",
            "UlNBX1NJR05fUEtDUzFfMjA0OF9TSEEyNTYQBRIeChpSU0FfU0lHTl9QS0NT",
            "MV8zMDcyX1NIQTI1NhAGEh4KGlJTQV9TSUdOX1BLQ1MxXzQwOTZfU0hBMjU2",
            "EAcSHgoaUlNBX1NJR05fUEtDUzFfNDA5Nl9TSEE1MTIQEBIgChxSU0FfREVD",
            "UllQVF9PQUVQXzIwNDhfU0hBMjU2EAgSIAocUlNBX0RFQ1JZUFRfT0FFUF8z",
            "MDcyX1NIQTI1NhAJEiAKHFJTQV9ERUNSWVBUX09BRVBfNDA5Nl9TSEEyNTYQ",
            "ChIgChxSU0FfREVDUllQVF9PQUVQXzQwOTZfU0hBNTEyEBESFwoTRUNfU0lH",
            "Tl9QMjU2X1NIQTI1NhAMEhcKE0VDX1NJR05fUDM4NF9TSEEzODQQDSLBAQoV",
            "Q3J5cHRvS2V5VmVyc2lvblN0YXRlEigKJENSWVBUT19LRVlfVkVSU0lPTl9T",
            "VEFURV9VTlNQRUNJRklFRBAAEhYKElBFTkRJTkdfR0VORVJBVElPThAFEgsK",
            "B0VOQUJMRUQQARIMCghESVNBQkxFRBACEg0KCURFU1RST1lFRBADEhUKEURF",
            "U1RST1lfU0NIRURVTEVEEAQSEgoOUEVORElOR19JTVBPUlQQBhIRCg1JTVBP",
            "UlRfRkFJTEVEEAciSQoUQ3J5cHRvS2V5VmVyc2lvblZpZXcSJwojQ1JZUFRP",
            "X0tFWV9WRVJTSU9OX1ZJRVdfVU5TUEVDSUZJRUQQABIICgRGVUxMEAE6qgHq",
            "QaYBCihjbG91ZGttcy5nb29nbGVhcGlzLmNvbS9DcnlwdG9LZXlWZXJzaW9u",
            "Enpwcm9qZWN0cy97cHJvamVjdH0vbG9jYXRpb25zL3tsb2NhdGlvbn0va2V5",
            "UmluZ3Mve2tleV9yaW5nfS9jcnlwdG9LZXlzL3tjcnlwdG9fa2V5fS9jcnlw",
            "dG9LZXlWZXJzaW9ucy97Y3J5cHRvX2tleV92ZXJzaW9ufSJsCglQdWJsaWNL",
            "ZXkSCwoDcGVtGAEgASgJElIKCWFsZ29yaXRobRgCIAEoDjI/Lmdvb2dsZS5j",
            "bG91ZC5rbXMudjEuQ3J5cHRvS2V5VmVyc2lvbi5DcnlwdG9LZXlWZXJzaW9u",
            "QWxnb3JpdGhtItsHCglJbXBvcnRKb2ISEQoEbmFtZRgBIAEoCUID4EEDEkoK",
            "DWltcG9ydF9tZXRob2QYAiABKA4yKy5nb29nbGUuY2xvdWQua21zLnYxLklt",
            "cG9ydEpvYi5JbXBvcnRNZXRob2RCBuBBAuBBBRJGChBwcm90ZWN0aW9uX2xl",
            "dmVsGAkgASgOMiQuZ29vZ2xlLmNsb3VkLmttcy52MS5Qcm90ZWN0aW9uTGV2",
            "ZWxCBuBBAuBBBRI0CgtjcmVhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXBCA+BBAxI2Cg1nZW5lcmF0ZV90aW1lGAQgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjQKC2V4cGlyZV90aW1l",
            "GAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEjoKEWV4",
            "cGlyZV9ldmVudF90aW1lGAogASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcEID4EEDEkEKBXN0YXRlGAYgASgOMi0uZ29vZ2xlLmNsb3VkLmttcy52",
            "MS5JbXBvcnRKb2IuSW1wb3J0Sm9iU3RhdGVCA+BBAxJJCgpwdWJsaWNfa2V5",
            "GAcgASgLMjAuZ29vZ2xlLmNsb3VkLmttcy52MS5JbXBvcnRKb2IuV3JhcHBp",
            "bmdQdWJsaWNLZXlCA+BBAxJGCgthdHRlc3RhdGlvbhgIIAEoCzIsLmdvb2ds",
            "ZS5jbG91ZC5rbXMudjEuS2V5T3BlcmF0aW9uQXR0ZXN0YXRpb25CA+BBAxog",
            "ChFXcmFwcGluZ1B1YmxpY0tleRILCgNwZW0YASABKAkibQoMSW1wb3J0TWV0",
            "aG9kEh0KGUlNUE9SVF9NRVRIT0RfVU5TUEVDSUZJRUQQABIeChpSU0FfT0FF",
            "UF8zMDcyX1NIQTFfQUVTXzI1NhABEh4KGlJTQV9PQUVQXzQwOTZfU0hBMV9B",
            "RVNfMjU2EAIiYwoOSW1wb3J0Sm9iU3RhdGUSIAocSU1QT1JUX0pPQl9TVEFU",
            "RV9VTlNQRUNJRklFRBAAEhYKElBFTkRJTkdfR0VORVJBVElPThABEgoKBkFD",
            "VElWRRACEgsKB0VYUElSRUQQAzp76kF4CiFjbG91ZGttcy5nb29nbGVhcGlz",
            "LmNvbS9JbXBvcnRKb2ISU3Byb2plY3RzL3twcm9qZWN0fS9sb2NhdGlvbnMv",
            "e2xvY2F0aW9ufS9rZXlSaW5ncy97a2V5X3Jpbmd9L2ltcG9ydEpvYnMve2lt",
            "cG9ydF9qb2J9KlgKD1Byb3RlY3Rpb25MZXZlbBIgChxQUk9URUNUSU9OX0xF",
            "VkVMX1VOU1BFQ0lGSUVEEAASDAoIU09GVFdBUkUQARIHCgNIU00QAhIMCghF",
            "WFRFUk5BTBADQpUBChdjb20uZ29vZ2xlLmNsb3VkLmttcy52MUIRS21zUmVz",
            "b3VyY2VzUHJvdG9QAVo2Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29v",
            "Z2xlYXBpcy9jbG91ZC9rbXMvdjE7a21z+AEBqgITR29vZ2xlLkNsb3VkLktt",
            "cy5WMcoCE0dvb2dsZVxDbG91ZFxLbXNcVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Kms.V1.ProtectionLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.KeyRing), global::Google.Cloud.Kms.V1.KeyRing.Parser, new[]{ "Name", "CreateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.CryptoKey), global::Google.Cloud.Kms.V1.CryptoKey.Parser, new[]{ "Name", "Primary", "Purpose", "CreateTime", "NextRotationTime", "RotationPeriod", "VersionTemplate", "Labels" }, new[]{ "RotationSchedule" }, new[]{ typeof(global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.CryptoKeyVersionTemplate), global::Google.Cloud.Kms.V1.CryptoKeyVersionTemplate.Parser, new[]{ "ProtectionLevel", "Algorithm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.KeyOperationAttestation), global::Google.Cloud.Kms.V1.KeyOperationAttestation.Parser, new[]{ "Format", "Content" }, null, new[]{ typeof(global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.CryptoKeyVersion), global::Google.Cloud.Kms.V1.CryptoKeyVersion.Parser, new[]{ "Name", "State", "ProtectionLevel", "Algorithm", "Attestation", "CreateTime", "GenerateTime", "DestroyTime", "DestroyEventTime", "ImportJob", "ImportTime", "ImportFailureReason" }, null, new[]{ typeof(global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm), typeof(global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState), typeof(global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionView) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.PublicKey), global::Google.Cloud.Kms.V1.PublicKey.Parser, new[]{ "Pem", "Algorithm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.ImportJob), global::Google.Cloud.Kms.V1.ImportJob.Parser, new[]{ "Name", "ImportMethod", "ProtectionLevel", "CreateTime", "GenerateTime", "ExpireTime", "ExpireEventTime", "State", "PublicKey", "Attestation" }, null, new[]{ typeof(global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod), typeof(global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Kms.V1.ImportJob.Types.WrappingPublicKey), global::Google.Cloud.Kms.V1.ImportJob.Types.WrappingPublicKey.Parser, new[]{ "Pem" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] specifies how cryptographic operations are performed.
  /// For more information, see [Protection levels]
  /// (https://cloud.google.com/kms/docs/algorithms#protection_levels).
  /// </summary>
  public enum ProtectionLevel {
    /// <summary>
    /// Not specified.
    /// </summary>
    [pbr::OriginalName("PROTECTION_LEVEL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Crypto operations are performed in software.
    /// </summary>
    [pbr::OriginalName("SOFTWARE")] Software = 1,
    /// <summary>
    /// Crypto operations are performed in a Hardware Security Module.
    /// </summary>
    [pbr::OriginalName("HSM")] Hsm = 2,
    /// <summary>
    /// Crypto operations are performed by an external key manager.
    /// </summary>
    [pbr::OriginalName("EXTERNAL")] External = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A [KeyRing][google.cloud.kms.v1.KeyRing] is a toplevel logical grouping of [CryptoKeys][google.cloud.kms.v1.CryptoKey].
  /// </summary>
  public sealed partial class KeyRing : pb::IMessage<KeyRing> {
    private static readonly pb::MessageParser<KeyRing> _parser = new pb::MessageParser<KeyRing>(() => new KeyRing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyRing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyRing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyRing(KeyRing other) : this() {
      name_ = other.name_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyRing Clone() {
      return new KeyRing(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The resource name for the [KeyRing][google.cloud.kms.v1.KeyRing] in the format
    /// `projects/*/locations/*/keyRings/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time at which this [KeyRing][google.cloud.kms.v1.KeyRing] was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyRing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyRing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (createTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyRing other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A [CryptoKey][google.cloud.kms.v1.CryptoKey] represents a logical key that can be used for cryptographic
  /// operations.
  ///
  /// A [CryptoKey][google.cloud.kms.v1.CryptoKey] is made up of one or more [versions][google.cloud.kms.v1.CryptoKeyVersion], which
  /// represent the actual key material used in cryptographic operations.
  /// </summary>
  public sealed partial class CryptoKey : pb::IMessage<CryptoKey> {
    private static readonly pb::MessageParser<CryptoKey> _parser = new pb::MessageParser<CryptoKey>(() => new CryptoKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKey(CryptoKey other) : this() {
      name_ = other.name_;
      primary_ = other.primary_ != null ? other.primary_.Clone() : null;
      purpose_ = other.purpose_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      nextRotationTime_ = other.nextRotationTime_ != null ? other.nextRotationTime_.Clone() : null;
      versionTemplate_ = other.versionTemplate_ != null ? other.versionTemplate_.Clone() : null;
      labels_ = other.labels_.Clone();
      switch (other.RotationScheduleCase) {
        case RotationScheduleOneofCase.RotationPeriod:
          RotationPeriod = other.RotationPeriod.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKey Clone() {
      return new CryptoKey(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The resource name for this [CryptoKey][google.cloud.kms.v1.CryptoKey] in the format
    /// `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary" field.</summary>
    public const int PrimaryFieldNumber = 2;
    private global::Google.Cloud.Kms.V1.CryptoKeyVersion primary_;
    /// <summary>
    /// Output only. A copy of the "primary" [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] that will be used
    /// by [Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt] when this [CryptoKey][google.cloud.kms.v1.CryptoKey] is given
    /// in [EncryptRequest.name][google.cloud.kms.v1.EncryptRequest.name].
    ///
    /// The [CryptoKey][google.cloud.kms.v1.CryptoKey]'s primary version can be updated via
    /// [UpdateCryptoKeyPrimaryVersion][google.cloud.kms.v1.KeyManagementService.UpdateCryptoKeyPrimaryVersion].
    ///
    /// Keys with [purpose][google.cloud.kms.v1.CryptoKey.purpose]
    /// [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT] may have a
    /// primary. For other keys, this field will be omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKeyVersion Primary {
      get { return primary_; }
      set {
        primary_ = value;
      }
    }

    /// <summary>Field number for the "purpose" field.</summary>
    public const int PurposeFieldNumber = 3;
    private global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose purpose_ = global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose.Unspecified;
    /// <summary>
    /// Immutable. The immutable purpose of this [CryptoKey][google.cloud.kms.v1.CryptoKey].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose Purpose {
      get { return purpose_; }
      set {
        purpose_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time at which this [CryptoKey][google.cloud.kms.v1.CryptoKey] was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "next_rotation_time" field.</summary>
    public const int NextRotationTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextRotationTime_;
    /// <summary>
    /// At [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time], the Key Management Service will automatically:
    ///
    /// 1. Create a new version of this [CryptoKey][google.cloud.kms.v1.CryptoKey].
    /// 2. Mark the new version as primary.
    ///
    /// Key rotations performed manually via
    /// [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion] and
    /// [UpdateCryptoKeyPrimaryVersion][google.cloud.kms.v1.KeyManagementService.UpdateCryptoKeyPrimaryVersion]
    /// do not affect [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time].
    ///
    /// Keys with [purpose][google.cloud.kms.v1.CryptoKey.purpose]
    /// [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT] support
    /// automatic rotation. For other keys, this field must be omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextRotationTime {
      get { return nextRotationTime_; }
      set {
        nextRotationTime_ = value;
      }
    }

    /// <summary>Field number for the "rotation_period" field.</summary>
    public const int RotationPeriodFieldNumber = 8;
    /// <summary>
    /// [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time] will be advanced by this period when the service
    /// automatically rotates a key. Must be at least 24 hours and at most
    /// 876,000 hours.
    ///
    /// If [rotation_period][google.cloud.kms.v1.CryptoKey.rotation_period] is set, [next_rotation_time][google.cloud.kms.v1.CryptoKey.next_rotation_time] must also be set.
    ///
    /// Keys with [purpose][google.cloud.kms.v1.CryptoKey.purpose]
    /// [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT] support
    /// automatic rotation. For other keys, this field must be omitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration RotationPeriod {
      get { return rotationScheduleCase_ == RotationScheduleOneofCase.RotationPeriod ? (global::Google.Protobuf.WellKnownTypes.Duration) rotationSchedule_ : null; }
      set {
        rotationSchedule_ = value;
        rotationScheduleCase_ = value == null ? RotationScheduleOneofCase.None : RotationScheduleOneofCase.RotationPeriod;
      }
    }

    /// <summary>Field number for the "version_template" field.</summary>
    public const int VersionTemplateFieldNumber = 11;
    private global::Google.Cloud.Kms.V1.CryptoKeyVersionTemplate versionTemplate_;
    /// <summary>
    /// A template describing settings for new [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] instances.
    /// The properties of new [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] instances created by either
    /// [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion] or
    /// auto-rotation are controlled by this template.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKeyVersionTemplate VersionTemplate {
      get { return versionTemplate_; }
      set {
        versionTemplate_ = value;
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 10;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 82);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Labels with user-defined metadata. For more information, see
    /// [Labeling Keys](/kms/docs/labeling-keys).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    private object rotationSchedule_;
    /// <summary>Enum of possible cases for the "rotation_schedule" oneof.</summary>
    public enum RotationScheduleOneofCase {
      None = 0,
      RotationPeriod = 8,
    }
    private RotationScheduleOneofCase rotationScheduleCase_ = RotationScheduleOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationScheduleOneofCase RotationScheduleCase {
      get { return rotationScheduleCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRotationSchedule() {
      rotationScheduleCase_ = RotationScheduleOneofCase.None;
      rotationSchedule_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Primary, other.Primary)) return false;
      if (Purpose != other.Purpose) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(NextRotationTime, other.NextRotationTime)) return false;
      if (!object.Equals(RotationPeriod, other.RotationPeriod)) return false;
      if (!object.Equals(VersionTemplate, other.VersionTemplate)) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (RotationScheduleCase != other.RotationScheduleCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (primary_ != null) hash ^= Primary.GetHashCode();
      if (Purpose != global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose.Unspecified) hash ^= Purpose.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (nextRotationTime_ != null) hash ^= NextRotationTime.GetHashCode();
      if (rotationScheduleCase_ == RotationScheduleOneofCase.RotationPeriod) hash ^= RotationPeriod.GetHashCode();
      if (versionTemplate_ != null) hash ^= VersionTemplate.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= (int) rotationScheduleCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (primary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Primary);
      }
      if (Purpose != global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Purpose);
      }
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (nextRotationTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NextRotationTime);
      }
      if (rotationScheduleCase_ == RotationScheduleOneofCase.RotationPeriod) {
        output.WriteRawTag(66);
        output.WriteMessage(RotationPeriod);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (versionTemplate_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VersionTemplate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (primary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Primary);
      }
      if (Purpose != global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Purpose);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (nextRotationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextRotationTime);
      }
      if (rotationScheduleCase_ == RotationScheduleOneofCase.RotationPeriod) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RotationPeriod);
      }
      if (versionTemplate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VersionTemplate);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoKey other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.primary_ != null) {
        if (primary_ == null) {
          Primary = new global::Google.Cloud.Kms.V1.CryptoKeyVersion();
        }
        Primary.MergeFrom(other.Primary);
      }
      if (other.Purpose != global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose.Unspecified) {
        Purpose = other.Purpose;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.nextRotationTime_ != null) {
        if (nextRotationTime_ == null) {
          NextRotationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextRotationTime.MergeFrom(other.NextRotationTime);
      }
      if (other.versionTemplate_ != null) {
        if (versionTemplate_ == null) {
          VersionTemplate = new global::Google.Cloud.Kms.V1.CryptoKeyVersionTemplate();
        }
        VersionTemplate.MergeFrom(other.VersionTemplate);
      }
      labels_.Add(other.labels_);
      switch (other.RotationScheduleCase) {
        case RotationScheduleOneofCase.RotationPeriod:
          if (RotationPeriod == null) {
            RotationPeriod = new global::Google.Protobuf.WellKnownTypes.Duration();
          }
          RotationPeriod.MergeFrom(other.RotationPeriod);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (primary_ == null) {
              Primary = new global::Google.Cloud.Kms.V1.CryptoKeyVersion();
            }
            input.ReadMessage(Primary);
            break;
          }
          case 24: {
            Purpose = (global::Google.Cloud.Kms.V1.CryptoKey.Types.CryptoKeyPurpose) input.ReadEnum();
            break;
          }
          case 42: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 58: {
            if (nextRotationTime_ == null) {
              NextRotationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextRotationTime);
            break;
          }
          case 66: {
            global::Google.Protobuf.WellKnownTypes.Duration subBuilder = new global::Google.Protobuf.WellKnownTypes.Duration();
            if (rotationScheduleCase_ == RotationScheduleOneofCase.RotationPeriod) {
              subBuilder.MergeFrom(RotationPeriod);
            }
            input.ReadMessage(subBuilder);
            RotationPeriod = subBuilder;
            break;
          }
          case 82: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 90: {
            if (versionTemplate_ == null) {
              VersionTemplate = new global::Google.Cloud.Kms.V1.CryptoKeyVersionTemplate();
            }
            input.ReadMessage(VersionTemplate);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CryptoKey message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// [CryptoKeyPurpose][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose] describes the cryptographic capabilities of a
      /// [CryptoKey][google.cloud.kms.v1.CryptoKey]. A given key can only be used for the operations allowed by
      /// its purpose. For more information, see
      /// [Key purposes](https://cloud.google.com/kms/docs/algorithms#key_purposes).
      /// </summary>
      public enum CryptoKeyPurpose {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("CRYPTO_KEY_PURPOSE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used with
        /// [Encrypt][google.cloud.kms.v1.KeyManagementService.Encrypt] and
        /// [Decrypt][google.cloud.kms.v1.KeyManagementService.Decrypt].
        /// </summary>
        [pbr::OriginalName("ENCRYPT_DECRYPT")] EncryptDecrypt = 1,
        /// <summary>
        /// [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used with
        /// [AsymmetricSign][google.cloud.kms.v1.KeyManagementService.AsymmetricSign] and
        /// [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].
        /// </summary>
        [pbr::OriginalName("ASYMMETRIC_SIGN")] AsymmetricSign = 5,
        /// <summary>
        /// [CryptoKeys][google.cloud.kms.v1.CryptoKey] with this purpose may be used with
        /// [AsymmetricDecrypt][google.cloud.kms.v1.KeyManagementService.AsymmetricDecrypt] and
        /// [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].
        /// </summary>
        [pbr::OriginalName("ASYMMETRIC_DECRYPT")] AsymmetricDecrypt = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// A [CryptoKeyVersionTemplate][google.cloud.kms.v1.CryptoKeyVersionTemplate] specifies the properties to use when creating
  /// a new [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], either manually with
  /// [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion] or
  /// automatically as a result of auto-rotation.
  /// </summary>
  public sealed partial class CryptoKeyVersionTemplate : pb::IMessage<CryptoKeyVersionTemplate> {
    private static readonly pb::MessageParser<CryptoKeyVersionTemplate> _parser = new pb::MessageParser<CryptoKeyVersionTemplate>(() => new CryptoKeyVersionTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoKeyVersionTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKeyVersionTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKeyVersionTemplate(CryptoKeyVersionTemplate other) : this() {
      protectionLevel_ = other.protectionLevel_;
      algorithm_ = other.algorithm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKeyVersionTemplate Clone() {
      return new CryptoKeyVersionTemplate(this);
    }

    /// <summary>Field number for the "protection_level" field.</summary>
    public const int ProtectionLevelFieldNumber = 1;
    private global::Google.Cloud.Kms.V1.ProtectionLevel protectionLevel_ = global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified;
    /// <summary>
    /// [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] to use when creating a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] based on
    /// this template. Immutable. Defaults to [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.ProtectionLevel ProtectionLevel {
      get { return protectionLevel_; }
      set {
        protectionLevel_ = value;
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 3;
    private global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm algorithm_ = global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified;
    /// <summary>
    /// Required. [Algorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm] to use
    /// when creating a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] based on this template.
    ///
    /// For backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both
    /// this field is omitted and [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose] is
    /// [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoKeyVersionTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoKeyVersionTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtectionLevel != other.ProtectionLevel) return false;
      if (Algorithm != other.Algorithm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) hash ^= ProtectionLevel.GetHashCode();
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) hash ^= Algorithm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ProtectionLevel);
      }
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Algorithm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtectionLevel);
      }
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoKeyVersionTemplate other) {
      if (other == null) {
        return;
      }
      if (other.ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        ProtectionLevel = other.ProtectionLevel;
      }
      if (other.Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        Algorithm = other.Algorithm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtectionLevel = (global::Google.Cloud.Kms.V1.ProtectionLevel) input.ReadEnum();
            break;
          }
          case 24: {
            Algorithm = (global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains an HSM-generated attestation about a key operation. For more
  /// information, see [Verifying attestations]
  /// (https://cloud.google.com/kms/docs/attest-key).
  /// </summary>
  public sealed partial class KeyOperationAttestation : pb::IMessage<KeyOperationAttestation> {
    private static readonly pb::MessageParser<KeyOperationAttestation> _parser = new pb::MessageParser<KeyOperationAttestation>(() => new KeyOperationAttestation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyOperationAttestation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyOperationAttestation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyOperationAttestation(KeyOperationAttestation other) : this() {
      format_ = other.format_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyOperationAttestation Clone() {
      return new KeyOperationAttestation(this);
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 4;
    private global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat format_ = global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat.Unspecified;
    /// <summary>
    /// Output only. The format of the attestation data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private pb::ByteString content_ = pb::ByteString.Empty;
    /// <summary>
    /// Output only. The attestation data provided by the HSM when the key
    /// operation was performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyOperationAttestation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyOperationAttestation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Format != other.Format) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Format != global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat.Unspecified) hash ^= Format.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Format != global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Format);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Format != global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyOperationAttestation other) {
      if (other == null) {
        return;
      }
      if (other.Format != global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat.Unspecified) {
        Format = other.Format;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 32: {
            Format = (global::Google.Cloud.Kms.V1.KeyOperationAttestation.Types.AttestationFormat) input.ReadEnum();
            break;
          }
          case 42: {
            Content = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the KeyOperationAttestation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Attestation formats provided by the HSM.
      /// </summary>
      public enum AttestationFormat {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("ATTESTATION_FORMAT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Cavium HSM attestation compressed with gzip. Note that this format is
        /// defined by Cavium and subject to change at any time.
        /// </summary>
        [pbr::OriginalName("CAVIUM_V1_COMPRESSED")] CaviumV1Compressed = 3,
        /// <summary>
        /// Cavium HSM attestation V2 compressed with gzip. This is a new format
        /// introduced in Cavium's version 3.2-08.
        /// </summary>
        [pbr::OriginalName("CAVIUM_V2_COMPRESSED")] CaviumV2Compressed = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// A [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] represents an individual cryptographic key, and the
  /// associated key material.
  ///
  /// An [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] version can be
  /// used for cryptographic operations.
  ///
  /// For security reasons, the raw cryptographic key material represented by a
  /// [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] can never be viewed or exported. It can only be used to
  /// encrypt, decrypt, or sign data when an authorized user or application invokes
  /// Cloud KMS.
  /// </summary>
  public sealed partial class CryptoKeyVersion : pb::IMessage<CryptoKeyVersion> {
    private static readonly pb::MessageParser<CryptoKeyVersion> _parser = new pb::MessageParser<CryptoKeyVersion>(() => new CryptoKeyVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CryptoKeyVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKeyVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKeyVersion(CryptoKeyVersion other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      protectionLevel_ = other.protectionLevel_;
      algorithm_ = other.algorithm_;
      attestation_ = other.attestation_ != null ? other.attestation_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      generateTime_ = other.generateTime_ != null ? other.generateTime_.Clone() : null;
      destroyTime_ = other.destroyTime_ != null ? other.destroyTime_.Clone() : null;
      destroyEventTime_ = other.destroyEventTime_ != null ? other.destroyEventTime_.Clone() : null;
      importJob_ = other.importJob_;
      importTime_ = other.importTime_ != null ? other.importTime_.Clone() : null;
      importFailureReason_ = other.importFailureReason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CryptoKeyVersion Clone() {
      return new CryptoKeyVersion(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The resource name for this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in the format
    /// `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState state_ = global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState.Unspecified;
    /// <summary>
    /// The current state of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "protection_level" field.</summary>
    public const int ProtectionLevelFieldNumber = 7;
    private global::Google.Cloud.Kms.V1.ProtectionLevel protectionLevel_ = global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified;
    /// <summary>
    /// Output only. The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] describing how crypto operations are
    /// performed with this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.ProtectionLevel ProtectionLevel {
      get { return protectionLevel_; }
      set {
        protectionLevel_ = value;
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 10;
    private global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm algorithm_ = global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified;
    /// <summary>
    /// Output only. The [CryptoKeyVersionAlgorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm] that this
    /// [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] supports.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    /// <summary>Field number for the "attestation" field.</summary>
    public const int AttestationFieldNumber = 8;
    private global::Google.Cloud.Kms.V1.KeyOperationAttestation attestation_;
    /// <summary>
    /// Output only. Statement that was generated and signed by the HSM at key
    /// creation time. Use this statement to verify attributes of the key as stored
    /// on the HSM, independently of Google. Only provided for key versions with
    /// [protection_level][google.cloud.kms.v1.CryptoKeyVersion.protection_level] [HSM][google.cloud.kms.v1.ProtectionLevel.HSM].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.KeyOperationAttestation Attestation {
      get { return attestation_; }
      set {
        attestation_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time at which this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "generate_time" field.</summary>
    public const int GenerateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp generateTime_;
    /// <summary>
    /// Output only. The time this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s key material was
    /// generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp GenerateTime {
      get { return generateTime_; }
      set {
        generateTime_ = value;
      }
    }

    /// <summary>Field number for the "destroy_time" field.</summary>
    public const int DestroyTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp destroyTime_;
    /// <summary>
    /// Output only. The time this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s key material is scheduled
    /// for destruction. Only present if [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
    /// [DESTROY_SCHEDULED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROY_SCHEDULED].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DestroyTime {
      get { return destroyTime_; }
      set {
        destroyTime_ = value;
      }
    }

    /// <summary>Field number for the "destroy_event_time" field.</summary>
    public const int DestroyEventTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp destroyEventTime_;
    /// <summary>
    /// Output only. The time this CryptoKeyVersion's key material was
    /// destroyed. Only present if [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
    /// [DESTROYED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DESTROYED].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DestroyEventTime {
      get { return destroyEventTime_; }
      set {
        destroyEventTime_ = value;
      }
    }

    /// <summary>Field number for the "import_job" field.</summary>
    public const int ImportJobFieldNumber = 14;
    private string importJob_ = "";
    /// <summary>
    /// Output only. The name of the [ImportJob][google.cloud.kms.v1.ImportJob] used to import this
    /// [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Only present if the underlying key material was
    /// imported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImportJob {
      get { return importJob_; }
      set {
        importJob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "import_time" field.</summary>
    public const int ImportTimeFieldNumber = 15;
    private global::Google.Protobuf.WellKnownTypes.Timestamp importTime_;
    /// <summary>
    /// Output only. The time at which this [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]'s key material
    /// was imported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ImportTime {
      get { return importTime_; }
      set {
        importTime_ = value;
      }
    }

    /// <summary>Field number for the "import_failure_reason" field.</summary>
    public const int ImportFailureReasonFieldNumber = 16;
    private string importFailureReason_ = "";
    /// <summary>
    /// Output only. The root cause of an import failure. Only present if
    /// [state][google.cloud.kms.v1.CryptoKeyVersion.state] is
    /// [IMPORT_FAILED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.IMPORT_FAILED].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImportFailureReason {
      get { return importFailureReason_; }
      set {
        importFailureReason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CryptoKeyVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CryptoKeyVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (ProtectionLevel != other.ProtectionLevel) return false;
      if (Algorithm != other.Algorithm) return false;
      if (!object.Equals(Attestation, other.Attestation)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(GenerateTime, other.GenerateTime)) return false;
      if (!object.Equals(DestroyTime, other.DestroyTime)) return false;
      if (!object.Equals(DestroyEventTime, other.DestroyEventTime)) return false;
      if (ImportJob != other.ImportJob) return false;
      if (!object.Equals(ImportTime, other.ImportTime)) return false;
      if (ImportFailureReason != other.ImportFailureReason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState.Unspecified) hash ^= State.GetHashCode();
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) hash ^= ProtectionLevel.GetHashCode();
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) hash ^= Algorithm.GetHashCode();
      if (attestation_ != null) hash ^= Attestation.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (generateTime_ != null) hash ^= GenerateTime.GetHashCode();
      if (destroyTime_ != null) hash ^= DestroyTime.GetHashCode();
      if (destroyEventTime_ != null) hash ^= DestroyEventTime.GetHashCode();
      if (ImportJob.Length != 0) hash ^= ImportJob.GetHashCode();
      if (importTime_ != null) hash ^= ImportTime.GetHashCode();
      if (ImportFailureReason.Length != 0) hash ^= ImportFailureReason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (destroyTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DestroyTime);
      }
      if (destroyEventTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DestroyEventTime);
      }
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ProtectionLevel);
      }
      if (attestation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Attestation);
      }
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Algorithm);
      }
      if (generateTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(GenerateTime);
      }
      if (ImportJob.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ImportJob);
      }
      if (importTime_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ImportTime);
      }
      if (ImportFailureReason.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ImportFailureReason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtectionLevel);
      }
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
      }
      if (attestation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attestation);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (generateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenerateTime);
      }
      if (destroyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyTime);
      }
      if (destroyEventTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyEventTime);
      }
      if (ImportJob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImportJob);
      }
      if (importTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImportTime);
      }
      if (ImportFailureReason.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ImportFailureReason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CryptoKeyVersion other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState.Unspecified) {
        State = other.State;
      }
      if (other.ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        ProtectionLevel = other.ProtectionLevel;
      }
      if (other.Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        Algorithm = other.Algorithm;
      }
      if (other.attestation_ != null) {
        if (attestation_ == null) {
          Attestation = new global::Google.Cloud.Kms.V1.KeyOperationAttestation();
        }
        Attestation.MergeFrom(other.Attestation);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.generateTime_ != null) {
        if (generateTime_ == null) {
          GenerateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        GenerateTime.MergeFrom(other.GenerateTime);
      }
      if (other.destroyTime_ != null) {
        if (destroyTime_ == null) {
          DestroyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DestroyTime.MergeFrom(other.DestroyTime);
      }
      if (other.destroyEventTime_ != null) {
        if (destroyEventTime_ == null) {
          DestroyEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DestroyEventTime.MergeFrom(other.DestroyEventTime);
      }
      if (other.ImportJob.Length != 0) {
        ImportJob = other.ImportJob;
      }
      if (other.importTime_ != null) {
        if (importTime_ == null) {
          ImportTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ImportTime.MergeFrom(other.ImportTime);
      }
      if (other.ImportFailureReason.Length != 0) {
        ImportFailureReason = other.ImportFailureReason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            State = (global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionState) input.ReadEnum();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (destroyTime_ == null) {
              DestroyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DestroyTime);
            break;
          }
          case 50: {
            if (destroyEventTime_ == null) {
              DestroyEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DestroyEventTime);
            break;
          }
          case 56: {
            ProtectionLevel = (global::Google.Cloud.Kms.V1.ProtectionLevel) input.ReadEnum();
            break;
          }
          case 66: {
            if (attestation_ == null) {
              Attestation = new global::Google.Cloud.Kms.V1.KeyOperationAttestation();
            }
            input.ReadMessage(Attestation);
            break;
          }
          case 80: {
            Algorithm = (global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm) input.ReadEnum();
            break;
          }
          case 90: {
            if (generateTime_ == null) {
              GenerateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(GenerateTime);
            break;
          }
          case 114: {
            ImportJob = input.ReadString();
            break;
          }
          case 122: {
            if (importTime_ == null) {
              ImportTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ImportTime);
            break;
          }
          case 130: {
            ImportFailureReason = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CryptoKeyVersion message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The algorithm of the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], indicating what
      /// parameters must be used for each cryptographic operation.
      ///
      /// The
      /// [GOOGLE_SYMMETRIC_ENCRYPTION][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm.GOOGLE_SYMMETRIC_ENCRYPTION]
      /// algorithm is usable with [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
      /// [ENCRYPT_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ENCRYPT_DECRYPT].
      ///
      /// Algorithms beginning with "RSA_SIGN_" are usable with [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
      /// [ASYMMETRIC_SIGN][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN].
      ///
      /// The fields in the name after "RSA_SIGN_" correspond to the following
      /// parameters: padding algorithm, modulus bit length, and digest algorithm.
      ///
      /// For PSS, the salt length used is equal to the length of digest
      /// algorithm. For example,
      /// [RSA_SIGN_PSS_2048_SHA256][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256]
      /// will use PSS with a salt length of 256 bits or 32 bytes.
      ///
      /// Algorithms beginning with "RSA_DECRYPT_" are usable with
      /// [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
      /// [ASYMMETRIC_DECRYPT][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_DECRYPT].
      ///
      /// The fields in the name after "RSA_DECRYPT_" correspond to the following
      /// parameters: padding algorithm, modulus bit length, and digest algorithm.
      ///
      /// Algorithms beginning with "EC_SIGN_" are usable with [CryptoKey.purpose][google.cloud.kms.v1.CryptoKey.purpose]
      /// [ASYMMETRIC_SIGN][google.cloud.kms.v1.CryptoKey.CryptoKeyPurpose.ASYMMETRIC_SIGN].
      ///
      /// The fields in the name after "EC_SIGN_" correspond to the following
      /// parameters: elliptic curve, digest algorithm.
      ///
      /// For more information, see [Key purposes and algorithms]
      /// (https://cloud.google.com/kms/docs/algorithms).
      /// </summary>
      public enum CryptoKeyVersionAlgorithm {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Creates symmetric encryption keys.
        /// </summary>
        [pbr::OriginalName("GOOGLE_SYMMETRIC_ENCRYPTION")] GoogleSymmetricEncryption = 1,
        /// <summary>
        /// RSASSA-PSS 2048 bit key with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PSS_2048_SHA256")] RsaSignPss2048Sha256 = 2,
        /// <summary>
        /// RSASSA-PSS 3072 bit key with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PSS_3072_SHA256")] RsaSignPss3072Sha256 = 3,
        /// <summary>
        /// RSASSA-PSS 4096 bit key with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PSS_4096_SHA256")] RsaSignPss4096Sha256 = 4,
        /// <summary>
        /// RSASSA-PSS 4096 bit key with a SHA512 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PSS_4096_SHA512")] RsaSignPss4096Sha512 = 15,
        /// <summary>
        /// RSASSA-PKCS1-v1_5 with a 2048 bit key and a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PKCS1_2048_SHA256")] RsaSignPkcs12048Sha256 = 5,
        /// <summary>
        /// RSASSA-PKCS1-v1_5 with a 3072 bit key and a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PKCS1_3072_SHA256")] RsaSignPkcs13072Sha256 = 6,
        /// <summary>
        /// RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PKCS1_4096_SHA256")] RsaSignPkcs14096Sha256 = 7,
        /// <summary>
        /// RSASSA-PKCS1-v1_5 with a 4096 bit key and a SHA512 digest.
        /// </summary>
        [pbr::OriginalName("RSA_SIGN_PKCS1_4096_SHA512")] RsaSignPkcs14096Sha512 = 16,
        /// <summary>
        /// RSAES-OAEP 2048 bit key with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_DECRYPT_OAEP_2048_SHA256")] RsaDecryptOaep2048Sha256 = 8,
        /// <summary>
        /// RSAES-OAEP 3072 bit key with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_DECRYPT_OAEP_3072_SHA256")] RsaDecryptOaep3072Sha256 = 9,
        /// <summary>
        /// RSAES-OAEP 4096 bit key with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("RSA_DECRYPT_OAEP_4096_SHA256")] RsaDecryptOaep4096Sha256 = 10,
        /// <summary>
        /// RSAES-OAEP 4096 bit key with a SHA512 digest.
        /// </summary>
        [pbr::OriginalName("RSA_DECRYPT_OAEP_4096_SHA512")] RsaDecryptOaep4096Sha512 = 17,
        /// <summary>
        /// ECDSA on the NIST P-256 curve with a SHA256 digest.
        /// </summary>
        [pbr::OriginalName("EC_SIGN_P256_SHA256")] EcSignP256Sha256 = 12,
        /// <summary>
        /// ECDSA on the NIST P-384 curve with a SHA384 digest.
        /// </summary>
        [pbr::OriginalName("EC_SIGN_P384_SHA384")] EcSignP384Sha384 = 13,
      }

      /// <summary>
      /// The state of a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], indicating if it can be used.
      /// </summary>
      public enum CryptoKeyVersionState {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("CRYPTO_KEY_VERSION_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// This version is still being generated. It may not be used, enabled,
        /// disabled, or destroyed yet. Cloud KMS will automatically mark this
        /// version [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] as soon as the version is ready.
        /// </summary>
        [pbr::OriginalName("PENDING_GENERATION")] PendingGeneration = 5,
        /// <summary>
        /// This version may be used for cryptographic operations.
        /// </summary>
        [pbr::OriginalName("ENABLED")] Enabled = 1,
        /// <summary>
        /// This version may not be used, but the key material is still available,
        /// and the version can be placed back into the [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] state.
        /// </summary>
        [pbr::OriginalName("DISABLED")] Disabled = 2,
        /// <summary>
        /// This version is destroyed, and the key material is no longer stored.
        /// A version may not leave this state once entered.
        /// </summary>
        [pbr::OriginalName("DESTROYED")] Destroyed = 3,
        /// <summary>
        /// This version is scheduled for destruction, and will be destroyed soon.
        /// Call
        /// [RestoreCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.RestoreCryptoKeyVersion]
        /// to put it back into the [DISABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.DISABLED] state.
        /// </summary>
        [pbr::OriginalName("DESTROY_SCHEDULED")] DestroyScheduled = 4,
        /// <summary>
        /// This version is still being imported. It may not be used, enabled,
        /// disabled, or destroyed yet. Cloud KMS will automatically mark this
        /// version [ENABLED][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionState.ENABLED] as soon as the version is ready.
        /// </summary>
        [pbr::OriginalName("PENDING_IMPORT")] PendingImport = 6,
        /// <summary>
        /// This version was not imported successfully. It may not be used, enabled,
        /// disabled, or destroyed. The submitted key material has been discarded.
        /// Additional details can be found in
        /// [CryptoKeyVersion.import_failure_reason][google.cloud.kms.v1.CryptoKeyVersion.import_failure_reason].
        /// </summary>
        [pbr::OriginalName("IMPORT_FAILED")] ImportFailed = 7,
      }

      /// <summary>
      /// A view for [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]s. Controls the level of detail returned
      /// for [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] in
      /// [KeyManagementService.ListCryptoKeyVersions][google.cloud.kms.v1.KeyManagementService.ListCryptoKeyVersions] and
      /// [KeyManagementService.ListCryptoKeys][google.cloud.kms.v1.KeyManagementService.ListCryptoKeys].
      /// </summary>
      public enum CryptoKeyVersionView {
        /// <summary>
        /// Default view for each [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Does not include
        /// the [attestation][google.cloud.kms.v1.CryptoKeyVersion.attestation] field.
        /// </summary>
        [pbr::OriginalName("CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Provides all fields in each [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion], including the
        /// [attestation][google.cloud.kms.v1.CryptoKeyVersion.attestation].
        /// </summary>
        [pbr::OriginalName("FULL")] Full = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// The public key for a given [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]. Obtained via
  /// [GetPublicKey][google.cloud.kms.v1.KeyManagementService.GetPublicKey].
  /// </summary>
  public sealed partial class PublicKey : pb::IMessage<PublicKey> {
    private static readonly pb::MessageParser<PublicKey> _parser = new pb::MessageParser<PublicKey>(() => new PublicKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKey(PublicKey other) : this() {
      pem_ = other.pem_;
      algorithm_ = other.algorithm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicKey Clone() {
      return new PublicKey(this);
    }

    /// <summary>Field number for the "pem" field.</summary>
    public const int PemFieldNumber = 1;
    private string pem_ = "";
    /// <summary>
    /// The public key, encoded in PEM format. For more information, see the
    /// [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for
    /// [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and
    /// [Textual Encoding of Subject Public Key Info]
    /// (https://tools.ietf.org/html/rfc7468#section-13).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pem {
      get { return pem_; }
      set {
        pem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 2;
    private global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm algorithm_ = global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified;
    /// <summary>
    /// The [Algorithm][google.cloud.kms.v1.CryptoKeyVersion.CryptoKeyVersionAlgorithm] associated
    /// with this key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pem != other.Pem) return false;
      if (Algorithm != other.Algorithm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pem.Length != 0) hash ^= Pem.GetHashCode();
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) hash ^= Algorithm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pem.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pem);
      }
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Algorithm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pem);
      }
      if (Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Algorithm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicKey other) {
      if (other == null) {
        return;
      }
      if (other.Pem.Length != 0) {
        Pem = other.Pem;
      }
      if (other.Algorithm != global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm.Unspecified) {
        Algorithm = other.Algorithm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pem = input.ReadString();
            break;
          }
          case 16: {
            Algorithm = (global::Google.Cloud.Kms.V1.CryptoKeyVersion.Types.CryptoKeyVersionAlgorithm) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An [ImportJob][google.cloud.kms.v1.ImportJob] can be used to create [CryptoKeys][google.cloud.kms.v1.CryptoKey] and
  /// [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] using pre-existing key material,
  /// generated outside of Cloud KMS.
  ///
  /// When an [ImportJob][google.cloud.kms.v1.ImportJob] is created, Cloud KMS will generate a "wrapping key",
  /// which is a public/private key pair. You use the wrapping key to encrypt (also
  /// known as wrap) the pre-existing key material to protect it during the import
  /// process. The nature of the wrapping key depends on the choice of
  /// [import_method][google.cloud.kms.v1.ImportJob.import_method]. When the wrapping key generation
  /// is complete, the [state][google.cloud.kms.v1.ImportJob.state] will be set to
  /// [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE] and the [public_key][google.cloud.kms.v1.ImportJob.public_key]
  /// can be fetched. The fetched public key can then be used to wrap your
  /// pre-existing key material.
  ///
  /// Once the key material is wrapped, it can be imported into a new
  /// [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] in an existing [CryptoKey][google.cloud.kms.v1.CryptoKey] by calling
  /// [ImportCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.ImportCryptoKeyVersion].
  /// Multiple [CryptoKeyVersions][google.cloud.kms.v1.CryptoKeyVersion] can be imported with a single
  /// [ImportJob][google.cloud.kms.v1.ImportJob]. Cloud KMS uses the private key portion of the wrapping key to
  /// unwrap the key material. Only Cloud KMS has access to the private key.
  ///
  /// An [ImportJob][google.cloud.kms.v1.ImportJob] expires 3 days after it is created. Once expired, Cloud KMS
  /// will no longer be able to import or unwrap any key material that was wrapped
  /// with the [ImportJob][google.cloud.kms.v1.ImportJob]'s public key.
  ///
  /// For more information, see
  /// [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).
  /// </summary>
  public sealed partial class ImportJob : pb::IMessage<ImportJob> {
    private static readonly pb::MessageParser<ImportJob> _parser = new pb::MessageParser<ImportJob>(() => new ImportJob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ImportJob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Kms.V1.ResourcesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportJob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportJob(ImportJob other) : this() {
      name_ = other.name_;
      importMethod_ = other.importMethod_;
      protectionLevel_ = other.protectionLevel_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      generateTime_ = other.generateTime_ != null ? other.generateTime_.Clone() : null;
      expireTime_ = other.expireTime_ != null ? other.expireTime_.Clone() : null;
      expireEventTime_ = other.expireEventTime_ != null ? other.expireEventTime_.Clone() : null;
      state_ = other.state_;
      publicKey_ = other.publicKey_ != null ? other.publicKey_.Clone() : null;
      attestation_ = other.attestation_ != null ? other.attestation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ImportJob Clone() {
      return new ImportJob(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The resource name for this [ImportJob][google.cloud.kms.v1.ImportJob] in the format
    /// `projects/*/locations/*/keyRings/*/importJobs/*`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "import_method" field.</summary>
    public const int ImportMethodFieldNumber = 2;
    private global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod importMethod_ = global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod.Unspecified;
    /// <summary>
    /// Required. Immutable. The wrapping method to be used for incoming key material.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod ImportMethod {
      get { return importMethod_; }
      set {
        importMethod_ = value;
      }
    }

    /// <summary>Field number for the "protection_level" field.</summary>
    public const int ProtectionLevelFieldNumber = 9;
    private global::Google.Cloud.Kms.V1.ProtectionLevel protectionLevel_ = global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified;
    /// <summary>
    /// Required. Immutable. The protection level of the [ImportJob][google.cloud.kms.v1.ImportJob]. This must match the
    /// [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level] of the
    /// [version_template][google.cloud.kms.v1.CryptoKey.version_template] on the [CryptoKey][google.cloud.kms.v1.CryptoKey] you
    /// attempt to import into.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.ProtectionLevel ProtectionLevel {
      get { return protectionLevel_; }
      set {
        protectionLevel_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time at which this [ImportJob][google.cloud.kms.v1.ImportJob] was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "generate_time" field.</summary>
    public const int GenerateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp generateTime_;
    /// <summary>
    /// Output only. The time this [ImportJob][google.cloud.kms.v1.ImportJob]'s key material was generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp GenerateTime {
      get { return generateTime_; }
      set {
        generateTime_ = value;
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireTime_;
    /// <summary>
    /// Output only. The time at which this [ImportJob][google.cloud.kms.v1.ImportJob] is scheduled for
    /// expiration and can no longer be used to import key material.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "expire_event_time" field.</summary>
    public const int ExpireEventTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expireEventTime_;
    /// <summary>
    /// Output only. The time this [ImportJob][google.cloud.kms.v1.ImportJob] expired. Only present if
    /// [state][google.cloud.kms.v1.ImportJob.state] is [EXPIRED][google.cloud.kms.v1.ImportJob.ImportJobState.EXPIRED].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpireEventTime {
      get { return expireEventTime_; }
      set {
        expireEventTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState state_ = global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState.Unspecified;
    /// <summary>
    /// Output only. The current state of the [ImportJob][google.cloud.kms.v1.ImportJob], indicating if it can
    /// be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 7;
    private global::Google.Cloud.Kms.V1.ImportJob.Types.WrappingPublicKey publicKey_;
    /// <summary>
    /// Output only. The public key with which to wrap key material prior to
    /// import. Only returned if [state][google.cloud.kms.v1.ImportJob.state] is
    /// [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.ImportJob.Types.WrappingPublicKey PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = value;
      }
    }

    /// <summary>Field number for the "attestation" field.</summary>
    public const int AttestationFieldNumber = 8;
    private global::Google.Cloud.Kms.V1.KeyOperationAttestation attestation_;
    /// <summary>
    /// Output only. Statement that was generated and signed by the key creator
    /// (for example, an HSM) at key creation time. Use this statement to verify
    /// attributes of the key as stored on the HSM, independently of Google.
    /// Only present if the chosen [ImportMethod][google.cloud.kms.v1.ImportJob.ImportMethod] is one with a protection
    /// level of [HSM][google.cloud.kms.v1.ProtectionLevel.HSM].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Kms.V1.KeyOperationAttestation Attestation {
      get { return attestation_; }
      set {
        attestation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ImportJob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ImportJob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ImportMethod != other.ImportMethod) return false;
      if (ProtectionLevel != other.ProtectionLevel) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(GenerateTime, other.GenerateTime)) return false;
      if (!object.Equals(ExpireTime, other.ExpireTime)) return false;
      if (!object.Equals(ExpireEventTime, other.ExpireEventTime)) return false;
      if (State != other.State) return false;
      if (!object.Equals(PublicKey, other.PublicKey)) return false;
      if (!object.Equals(Attestation, other.Attestation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ImportMethod != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod.Unspecified) hash ^= ImportMethod.GetHashCode();
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) hash ^= ProtectionLevel.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (generateTime_ != null) hash ^= GenerateTime.GetHashCode();
      if (expireTime_ != null) hash ^= ExpireTime.GetHashCode();
      if (expireEventTime_ != null) hash ^= ExpireEventTime.GetHashCode();
      if (State != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState.Unspecified) hash ^= State.GetHashCode();
      if (publicKey_ != null) hash ^= PublicKey.GetHashCode();
      if (attestation_ != null) hash ^= Attestation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ImportMethod != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ImportMethod);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (generateTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GenerateTime);
      }
      if (expireTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExpireTime);
      }
      if (State != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) State);
      }
      if (publicKey_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PublicKey);
      }
      if (attestation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Attestation);
      }
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        output.WriteRawTag(72);
        output.WriteEnum((int) ProtectionLevel);
      }
      if (expireEventTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExpireEventTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ImportMethod != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImportMethod);
      }
      if (ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ProtectionLevel);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (generateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenerateTime);
      }
      if (expireTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireTime);
      }
      if (expireEventTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpireEventTime);
      }
      if (State != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (publicKey_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublicKey);
      }
      if (attestation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attestation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ImportJob other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ImportMethod != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod.Unspecified) {
        ImportMethod = other.ImportMethod;
      }
      if (other.ProtectionLevel != global::Google.Cloud.Kms.V1.ProtectionLevel.Unspecified) {
        ProtectionLevel = other.ProtectionLevel;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.generateTime_ != null) {
        if (generateTime_ == null) {
          GenerateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        GenerateTime.MergeFrom(other.GenerateTime);
      }
      if (other.expireTime_ != null) {
        if (expireTime_ == null) {
          ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireTime.MergeFrom(other.ExpireTime);
      }
      if (other.expireEventTime_ != null) {
        if (expireEventTime_ == null) {
          ExpireEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpireEventTime.MergeFrom(other.ExpireEventTime);
      }
      if (other.State != global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState.Unspecified) {
        State = other.State;
      }
      if (other.publicKey_ != null) {
        if (publicKey_ == null) {
          PublicKey = new global::Google.Cloud.Kms.V1.ImportJob.Types.WrappingPublicKey();
        }
        PublicKey.MergeFrom(other.PublicKey);
      }
      if (other.attestation_ != null) {
        if (attestation_ == null) {
          Attestation = new global::Google.Cloud.Kms.V1.KeyOperationAttestation();
        }
        Attestation.MergeFrom(other.Attestation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ImportMethod = (global::Google.Cloud.Kms.V1.ImportJob.Types.ImportMethod) input.ReadEnum();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (generateTime_ == null) {
              GenerateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(GenerateTime);
            break;
          }
          case 42: {
            if (expireTime_ == null) {
              ExpireTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireTime);
            break;
          }
          case 48: {
            State = (global::Google.Cloud.Kms.V1.ImportJob.Types.ImportJobState) input.ReadEnum();
            break;
          }
          case 58: {
            if (publicKey_ == null) {
              PublicKey = new global::Google.Cloud.Kms.V1.ImportJob.Types.WrappingPublicKey();
            }
            input.ReadMessage(PublicKey);
            break;
          }
          case 66: {
            if (attestation_ == null) {
              Attestation = new global::Google.Cloud.Kms.V1.KeyOperationAttestation();
            }
            input.ReadMessage(Attestation);
            break;
          }
          case 72: {
            ProtectionLevel = (global::Google.Cloud.Kms.V1.ProtectionLevel) input.ReadEnum();
            break;
          }
          case 82: {
            if (expireEventTime_ == null) {
              ExpireEventTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpireEventTime);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ImportJob message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// [ImportMethod][google.cloud.kms.v1.ImportJob.ImportMethod] describes the key wrapping method chosen for this
      /// [ImportJob][google.cloud.kms.v1.ImportJob].
      /// </summary>
      public enum ImportMethod {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("IMPORT_METHOD_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
        /// scheme defined in the PKCS #11 standard. In summary, this involves
        /// wrapping the raw key with an ephemeral AES key, and wrapping the
        /// ephemeral AES key with a 3072 bit RSA key. For more details, see
        /// [RSA AES key wrap
        /// mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
        /// </summary>
        [pbr::OriginalName("RSA_OAEP_3072_SHA1_AES_256")] RsaOaep3072Sha1Aes256 = 1,
        /// <summary>
        /// This ImportMethod represents the CKM_RSA_AES_KEY_WRAP key wrapping
        /// scheme defined in the PKCS #11 standard. In summary, this involves
        /// wrapping the raw key with an ephemeral AES key, and wrapping the
        /// ephemeral AES key with a 4096 bit RSA key. For more details, see
        /// [RSA AES key wrap
        /// mechanism](http://docs.oasis-open.org/pkcs11/pkcs11-curr/v2.40/cos01/pkcs11-curr-v2.40-cos01.html#_Toc408226908).
        /// </summary>
        [pbr::OriginalName("RSA_OAEP_4096_SHA1_AES_256")] RsaOaep4096Sha1Aes256 = 2,
      }

      /// <summary>
      /// The state of the [ImportJob][google.cloud.kms.v1.ImportJob], indicating if it can be used.
      /// </summary>
      public enum ImportJobState {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("IMPORT_JOB_STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The wrapping key for this job is still being generated. It may not be
        /// used. Cloud KMS will automatically mark this job as
        /// [ACTIVE][google.cloud.kms.v1.ImportJob.ImportJobState.ACTIVE] as soon as the wrapping key is generated.
        /// </summary>
        [pbr::OriginalName("PENDING_GENERATION")] PendingGeneration = 1,
        /// <summary>
        /// This job may be used in
        /// [CreateCryptoKey][google.cloud.kms.v1.KeyManagementService.CreateCryptoKey] and
        /// [CreateCryptoKeyVersion][google.cloud.kms.v1.KeyManagementService.CreateCryptoKeyVersion]
        /// requests.
        /// </summary>
        [pbr::OriginalName("ACTIVE")] Active = 2,
        /// <summary>
        /// This job can no longer be used and may not leave this state once entered.
        /// </summary>
        [pbr::OriginalName("EXPIRED")] Expired = 3,
      }

      /// <summary>
      /// The public key component of the wrapping key. For details of the type of
      /// key this public key corresponds to, see the [ImportMethod][google.cloud.kms.v1.ImportJob.ImportMethod].
      /// </summary>
      public sealed partial class WrappingPublicKey : pb::IMessage<WrappingPublicKey> {
        private static readonly pb::MessageParser<WrappingPublicKey> _parser = new pb::MessageParser<WrappingPublicKey>(() => new WrappingPublicKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<WrappingPublicKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Kms.V1.ImportJob.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WrappingPublicKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WrappingPublicKey(WrappingPublicKey other) : this() {
          pem_ = other.pem_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public WrappingPublicKey Clone() {
          return new WrappingPublicKey(this);
        }

        /// <summary>Field number for the "pem" field.</summary>
        public const int PemFieldNumber = 1;
        private string pem_ = "";
        /// <summary>
        /// The public key, encoded in PEM format. For more information, see the [RFC
        /// 7468](https://tools.ietf.org/html/rfc7468) sections for [General
        /// Considerations](https://tools.ietf.org/html/rfc7468#section-2) and
        /// [Textual Encoding of Subject Public Key Info]
        /// (https://tools.ietf.org/html/rfc7468#section-13).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Pem {
          get { return pem_; }
          set {
            pem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as WrappingPublicKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(WrappingPublicKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Pem != other.Pem) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Pem.Length != 0) hash ^= Pem.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Pem.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Pem);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Pem.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Pem);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(WrappingPublicKey other) {
          if (other == null) {
            return;
          }
          if (other.Pem.Length != 0) {
            Pem = other.Pem;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Pem = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
