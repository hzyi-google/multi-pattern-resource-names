// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1beta1/common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grafeas.V1Beta1 {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1beta1/common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1beta1/common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj1nb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFiZXRhMS9j",
            "b21tb24vY29tbW9uLnByb3RvEg9ncmFmZWFzLnYxYmV0YTEiKAoKUmVsYXRl",
            "ZFVybBILCgN1cmwYASABKAkSDQoFbGFiZWwYAiABKAkqiwEKCE5vdGVLaW5k",
            "EhkKFU5PVEVfS0lORF9VTlNQRUNJRklFRBAAEhEKDVZVTE5FUkFCSUxJVFkQ",
            "ARIJCgVCVUlMRBACEgkKBUlNQUdFEAMSCwoHUEFDS0FHRRAEEg4KCkRFUExP",
            "WU1FTlQQBRINCglESVNDT1ZFUlkQBhIPCgtBVFRFU1RBVElPThAHQnsKGWlv",
            "LmdyYWZlYXMudjFiZXRhMS5jb21tb25QAVpWZ29vZ2xlLmdvbGFuZy5vcmcv",
            "Z2VucHJvdG8vZ29vZ2xlYXBpcy9kZXZ0b29scy9jb250YWluZXJhbmFseXNp",
            "cy92MWJldGExL2NvbW1vbjtjb21tb26iAgNHUkFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grafeas.V1Beta1.NoteKind), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.RelatedUrl), global::Grafeas.V1Beta1.RelatedUrl.Parser, new[]{ "Url", "Label" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Kind represents the kinds of notes supported.
  /// </summary>
  public enum NoteKind {
    /// <summary>
    /// Unknown.
    /// </summary>
    [pbr::OriginalName("NOTE_KIND_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The note and occurrence represent a package vulnerability.
    /// </summary>
    [pbr::OriginalName("VULNERABILITY")] Vulnerability = 1,
    /// <summary>
    /// The note and occurrence assert build provenance.
    /// </summary>
    [pbr::OriginalName("BUILD")] Build = 2,
    /// <summary>
    /// This represents an image basis relationship.
    /// </summary>
    [pbr::OriginalName("IMAGE")] Image = 3,
    /// <summary>
    /// This represents a package installed via a package manager.
    /// </summary>
    [pbr::OriginalName("PACKAGE")] Package = 4,
    /// <summary>
    /// The note and occurrence track deployment events.
    /// </summary>
    [pbr::OriginalName("DEPLOYMENT")] Deployment = 5,
    /// <summary>
    /// The note and occurrence track the initial discovery status of a resource.
    /// </summary>
    [pbr::OriginalName("DISCOVERY")] Discovery = 6,
    /// <summary>
    /// This represents a logical "role" that can attest to artifacts.
    /// </summary>
    [pbr::OriginalName("ATTESTATION")] Attestation = 7,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Metadata for any related URL information.
  /// </summary>
  public sealed partial class RelatedUrl : pb::IMessage<RelatedUrl> {
    private static readonly pb::MessageParser<RelatedUrl> _parser = new pb::MessageParser<RelatedUrl>(() => new RelatedUrl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelatedUrl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedUrl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedUrl(RelatedUrl other) : this() {
      url_ = other.url_;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelatedUrl Clone() {
      return new RelatedUrl(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    /// <summary>
    /// Specific URL associated with the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 2;
    private string label_ = "";
    /// <summary>
    /// Label to describe usage of the URL.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelatedUrl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelatedUrl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelatedUrl other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
