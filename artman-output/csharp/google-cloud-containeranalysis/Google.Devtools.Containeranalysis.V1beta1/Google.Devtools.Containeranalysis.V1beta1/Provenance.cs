// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1beta1/provenance/provenance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grafeas.V1Beta1.Provenance {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1beta1/provenance/provenance.proto</summary>
  public static partial class ProvenanceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1beta1/provenance/provenance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProvenanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkVnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFiZXRhMS9w",
            "cm92ZW5hbmNlL3Byb3ZlbmFuY2UucHJvdG8SGmdyYWZlYXMudjFiZXRhMS5w",
            "cm92ZW5hbmNlGj1nb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMv",
            "djFiZXRhMS9zb3VyY2Uvc291cmNlLnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvItAECg9CdWlsZFByb3ZlbmFuY2USCgoCaWQYASAB",
            "KAkSEgoKcHJvamVjdF9pZBgCIAEoCRI1Cghjb21tYW5kcxgDIAMoCzIjLmdy",
            "YWZlYXMudjFiZXRhMS5wcm92ZW5hbmNlLkNvbW1hbmQSPQoPYnVpbHRfYXJ0",
            "aWZhY3RzGAQgAygLMiQuZ3JhZmVhcy52MWJldGExLnByb3ZlbmFuY2UuQXJ0",
            "aWZhY3QSLwoLY3JlYXRlX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEi4KCnN0YXJ0X3RpbWUYBiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEiwKCGVuZF90aW1lGAcgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIPCgdjcmVhdG9yGAggASgJEhAKCGxvZ3NfdXJpGAkg",
            "ASgJEj0KEXNvdXJjZV9wcm92ZW5hbmNlGAogASgLMiIuZ3JhZmVhcy52MWJl",
            "dGExLnByb3ZlbmFuY2UuU291cmNlEhIKCnRyaWdnZXJfaWQYCyABKAkSVAoN",
            "YnVpbGRfb3B0aW9ucxgMIAMoCzI9LmdyYWZlYXMudjFiZXRhMS5wcm92ZW5h",
            "bmNlLkJ1aWxkUHJvdmVuYW5jZS5CdWlsZE9wdGlvbnNFbnRyeRIXCg9idWls",
            "ZGVyX3ZlcnNpb24YDSABKAkaMwoRQnVpbGRPcHRpb25zRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLNAgoGU291cmNlEiMKG2FydGlm",
            "YWN0X3N0b3JhZ2Vfc291cmNlX3VyaRgBIAEoCRJHCgtmaWxlX2hhc2hlcxgC",
            "IAMoCzIyLmdyYWZlYXMudjFiZXRhMS5wcm92ZW5hbmNlLlNvdXJjZS5GaWxl",
            "SGFzaGVzRW50cnkSNgoHY29udGV4dBgDIAEoCzIlLmdyYWZlYXMudjFiZXRh",
            "MS5zb3VyY2UuU291cmNlQ29udGV4dBJCChNhZGRpdGlvbmFsX2NvbnRleHRz",
            "GAQgAygLMiUuZ3JhZmVhcy52MWJldGExLnNvdXJjZS5Tb3VyY2VDb250ZXh0",
            "GlkKD0ZpbGVIYXNoZXNFbnRyeRILCgNrZXkYASABKAkSNQoFdmFsdWUYAiAB",
            "KAsyJi5ncmFmZWFzLnYxYmV0YTEucHJvdmVuYW5jZS5GaWxlSGFzaGVzOgI4",
            "ASJBCgpGaWxlSGFzaGVzEjMKCWZpbGVfaGFzaBgBIAMoCzIgLmdyYWZlYXMu",
            "djFiZXRhMS5wcm92ZW5hbmNlLkhhc2gigQEKBEhhc2gSNwoEdHlwZRgBIAEo",
            "DjIpLmdyYWZlYXMudjFiZXRhMS5wcm92ZW5hbmNlLkhhc2guSGFzaFR5cGUS",
            "DQoFdmFsdWUYAiABKAwiMQoISGFzaFR5cGUSGQoVSEFTSF9UWVBFX1VOU1BF",
            "Q0lGSUVEEAASCgoGU0hBMjU2EAEiXQoHQ29tbWFuZBIMCgRuYW1lGAEgASgJ",
            "EgsKA2VudhgCIAMoCRIMCgRhcmdzGAMgAygJEgsKA2RpchgEIAEoCRIKCgJp",
            "ZBgFIAEoCRIQCgh3YWl0X2ZvchgGIAMoCSI3CghBcnRpZmFjdBIQCghjaGVj",
            "a3N1bRgBIAEoCRIKCgJpZBgCIAEoCRINCgVuYW1lcxgDIAMoCUKHAQodaW8u",
            "Z3JhZmVhcy52MWJldGExLnByb3ZlbmFuY2VQAVpeZ29vZ2xlLmdvbGFuZy5v",
            "cmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9kZXZ0b29scy9jb250YWluZXJhbmFs",
            "eXNpcy92MWJldGExL3Byb3ZlbmFuY2U7cHJvdmVuYW5jZaICA0dSQWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Grafeas.V1Beta1.Source.SourceReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.Provenance.BuildProvenance), global::Grafeas.V1Beta1.Provenance.BuildProvenance.Parser, new[]{ "Id", "ProjectId", "Commands", "BuiltArtifacts", "CreateTime", "StartTime", "EndTime", "Creator", "LogsUri", "SourceProvenance", "TriggerId", "BuildOptions", "BuilderVersion" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.Provenance.Source), global::Grafeas.V1Beta1.Provenance.Source.Parser, new[]{ "ArtifactStorageSourceUri", "FileHashes", "Context", "AdditionalContexts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.Provenance.FileHashes), global::Grafeas.V1Beta1.Provenance.FileHashes.Parser, new[]{ "FileHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.Provenance.Hash), global::Grafeas.V1Beta1.Provenance.Hash.Parser, new[]{ "Type", "Value" }, null, new[]{ typeof(global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.Provenance.Command), global::Grafeas.V1Beta1.Provenance.Command.Parser, new[]{ "Name", "Env", "Args", "Dir", "Id", "WaitFor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grafeas.V1Beta1.Provenance.Artifact), global::Grafeas.V1Beta1.Provenance.Artifact.Parser, new[]{ "Checksum", "Id", "Names" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Provenance of a build. Contains all information needed to verify the full
  /// details about the build from source to completion.
  /// </summary>
  public sealed partial class BuildProvenance : pb::IMessage<BuildProvenance> {
    private static readonly pb::MessageParser<BuildProvenance> _parser = new pb::MessageParser<BuildProvenance>(() => new BuildProvenance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildProvenance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.Provenance.ProvenanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildProvenance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildProvenance(BuildProvenance other) : this() {
      id_ = other.id_;
      projectId_ = other.projectId_;
      commands_ = other.commands_.Clone();
      builtArtifacts_ = other.builtArtifacts_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      creator_ = other.creator_;
      logsUri_ = other.logsUri_;
      sourceProvenance_ = other.sourceProvenance_ != null ? other.sourceProvenance_.Clone() : null;
      triggerId_ = other.triggerId_;
      buildOptions_ = other.buildOptions_.Clone();
      builderVersion_ = other.builderVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildProvenance Clone() {
      return new BuildProvenance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Required. Unique identifier of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    /// ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Grafeas.V1Beta1.Provenance.Command> _repeated_commands_codec
        = pb::FieldCodec.ForMessage(26, global::Grafeas.V1Beta1.Provenance.Command.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Command> commands_ = new pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Command>();
    /// <summary>
    /// Commands requested by the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Command> Commands {
      get { return commands_; }
    }

    /// <summary>Field number for the "built_artifacts" field.</summary>
    public const int BuiltArtifactsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Grafeas.V1Beta1.Provenance.Artifact> _repeated_builtArtifacts_codec
        = pb::FieldCodec.ForMessage(34, global::Grafeas.V1Beta1.Provenance.Artifact.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Artifact> builtArtifacts_ = new pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Artifact>();
    /// <summary>
    /// Output of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Artifact> BuiltArtifacts {
      get { return builtArtifacts_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time at which the build was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time at which execution of the build was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Time at which execution of the build was finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 8;
    private string creator_ = "";
    /// <summary>
    /// E-mail address of the user who initiated this build. Note that this was the
    /// user's e-mail address at the time the build was initiated; this address may
    /// not represent the same end-user for all time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Creator {
      get { return creator_; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logs_uri" field.</summary>
    public const int LogsUriFieldNumber = 9;
    private string logsUri_ = "";
    /// <summary>
    /// URI where any logs for this provenance were written.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogsUri {
      get { return logsUri_; }
      set {
        logsUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_provenance" field.</summary>
    public const int SourceProvenanceFieldNumber = 10;
    private global::Grafeas.V1Beta1.Provenance.Source sourceProvenance_;
    /// <summary>
    /// Details of the Source input to the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grafeas.V1Beta1.Provenance.Source SourceProvenance {
      get { return sourceProvenance_; }
      set {
        sourceProvenance_ = value;
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 11;
    private string triggerId_ = "";
    /// <summary>
    /// Trigger identifier if the build was triggered automatically; empty if not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_options" field.</summary>
    public const int BuildOptionsFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_buildOptions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 98);
    private readonly pbc::MapField<string, string> buildOptions_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Special options applied to this build. This is a catch-all field where
    /// build providers can enter any desired additional details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> BuildOptions {
      get { return buildOptions_; }
    }

    /// <summary>Field number for the "builder_version" field.</summary>
    public const int BuilderVersionFieldNumber = 13;
    private string builderVersion_ = "";
    /// <summary>
    /// Version string of the builder at the time this build was executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuilderVersion {
      get { return builderVersion_; }
      set {
        builderVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildProvenance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildProvenance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProjectId != other.ProjectId) return false;
      if(!commands_.Equals(other.commands_)) return false;
      if(!builtArtifacts_.Equals(other.builtArtifacts_)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (Creator != other.Creator) return false;
      if (LogsUri != other.LogsUri) return false;
      if (!object.Equals(SourceProvenance, other.SourceProvenance)) return false;
      if (TriggerId != other.TriggerId) return false;
      if (!BuildOptions.Equals(other.BuildOptions)) return false;
      if (BuilderVersion != other.BuilderVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      hash ^= commands_.GetHashCode();
      hash ^= builtArtifacts_.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (Creator.Length != 0) hash ^= Creator.GetHashCode();
      if (LogsUri.Length != 0) hash ^= LogsUri.GetHashCode();
      if (sourceProvenance_ != null) hash ^= SourceProvenance.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      hash ^= BuildOptions.GetHashCode();
      if (BuilderVersion.Length != 0) hash ^= BuilderVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      commands_.WriteTo(output, _repeated_commands_codec);
      builtArtifacts_.WriteTo(output, _repeated_builtArtifacts_codec);
      if (createTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EndTime);
      }
      if (Creator.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Creator);
      }
      if (LogsUri.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LogsUri);
      }
      if (sourceProvenance_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SourceProvenance);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TriggerId);
      }
      buildOptions_.WriteTo(output, _map_buildOptions_codec);
      if (BuilderVersion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(BuilderVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      size += commands_.CalculateSize(_repeated_commands_codec);
      size += builtArtifacts_.CalculateSize(_repeated_builtArtifacts_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (Creator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Creator);
      }
      if (LogsUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogsUri);
      }
      if (sourceProvenance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceProvenance);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      size += buildOptions_.CalculateSize(_map_buildOptions_codec);
      if (BuilderVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuilderVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildProvenance other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      commands_.Add(other.commands_);
      builtArtifacts_.Add(other.builtArtifacts_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.Creator.Length != 0) {
        Creator = other.Creator;
      }
      if (other.LogsUri.Length != 0) {
        LogsUri = other.LogsUri;
      }
      if (other.sourceProvenance_ != null) {
        if (sourceProvenance_ == null) {
          SourceProvenance = new global::Grafeas.V1Beta1.Provenance.Source();
        }
        SourceProvenance.MergeFrom(other.SourceProvenance);
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
      buildOptions_.Add(other.buildOptions_);
      if (other.BuilderVersion.Length != 0) {
        BuilderVersion = other.BuilderVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 26: {
            commands_.AddEntriesFrom(input, _repeated_commands_codec);
            break;
          }
          case 34: {
            builtArtifacts_.AddEntriesFrom(input, _repeated_builtArtifacts_codec);
            break;
          }
          case 42: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 50: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 58: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 66: {
            Creator = input.ReadString();
            break;
          }
          case 74: {
            LogsUri = input.ReadString();
            break;
          }
          case 82: {
            if (sourceProvenance_ == null) {
              SourceProvenance = new global::Grafeas.V1Beta1.Provenance.Source();
            }
            input.ReadMessage(SourceProvenance);
            break;
          }
          case 90: {
            TriggerId = input.ReadString();
            break;
          }
          case 98: {
            buildOptions_.AddEntriesFrom(input, _map_buildOptions_codec);
            break;
          }
          case 106: {
            BuilderVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Source describes the location of the source used for the build.
  /// </summary>
  public sealed partial class Source : pb::IMessage<Source> {
    private static readonly pb::MessageParser<Source> _parser = new pb::MessageParser<Source>(() => new Source());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.Provenance.ProvenanceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source(Source other) : this() {
      artifactStorageSourceUri_ = other.artifactStorageSourceUri_;
      fileHashes_ = other.fileHashes_.Clone();
      context_ = other.context_ != null ? other.context_.Clone() : null;
      additionalContexts_ = other.additionalContexts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source Clone() {
      return new Source(this);
    }

    /// <summary>Field number for the "artifact_storage_source_uri" field.</summary>
    public const int ArtifactStorageSourceUriFieldNumber = 1;
    private string artifactStorageSourceUri_ = "";
    /// <summary>
    /// If provided, the input binary artifacts for the build came from this
    /// location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArtifactStorageSourceUri {
      get { return artifactStorageSourceUri_; }
      set {
        artifactStorageSourceUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_hashes" field.</summary>
    public const int FileHashesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Grafeas.V1Beta1.Provenance.FileHashes>.Codec _map_fileHashes_codec
        = new pbc::MapField<string, global::Grafeas.V1Beta1.Provenance.FileHashes>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Grafeas.V1Beta1.Provenance.FileHashes.Parser), 18);
    private readonly pbc::MapField<string, global::Grafeas.V1Beta1.Provenance.FileHashes> fileHashes_ = new pbc::MapField<string, global::Grafeas.V1Beta1.Provenance.FileHashes>();
    /// <summary>
    /// Hash(es) of the build source, which can be used to verify that the original
    /// source integrity was maintained in the build.
    ///
    /// The keys to this map are file paths used as build source and the values
    /// contain the hash values for those files.
    ///
    /// If the build source came in a single package such as a gzipped tarfile
    /// (.tar.gz), the FileHash will be for the single path to that file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Grafeas.V1Beta1.Provenance.FileHashes> FileHashes {
      get { return fileHashes_; }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private global::Grafeas.V1Beta1.Source.SourceContext context_;
    /// <summary>
    /// If provided, the source code used for the build came from this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grafeas.V1Beta1.Source.SourceContext Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "additional_contexts" field.</summary>
    public const int AdditionalContextsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Grafeas.V1Beta1.Source.SourceContext> _repeated_additionalContexts_codec
        = pb::FieldCodec.ForMessage(34, global::Grafeas.V1Beta1.Source.SourceContext.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1Beta1.Source.SourceContext> additionalContexts_ = new pbc::RepeatedField<global::Grafeas.V1Beta1.Source.SourceContext>();
    /// <summary>
    /// If provided, some of the source code used for the build may be found in
    /// these locations, in the case where the source repository had multiple
    /// remotes or submodules. This list will not include the context specified in
    /// the context field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grafeas.V1Beta1.Source.SourceContext> AdditionalContexts {
      get { return additionalContexts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArtifactStorageSourceUri != other.ArtifactStorageSourceUri) return false;
      if (!FileHashes.Equals(other.FileHashes)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      if(!additionalContexts_.Equals(other.additionalContexts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArtifactStorageSourceUri.Length != 0) hash ^= ArtifactStorageSourceUri.GetHashCode();
      hash ^= FileHashes.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      hash ^= additionalContexts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ArtifactStorageSourceUri.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ArtifactStorageSourceUri);
      }
      fileHashes_.WriteTo(output, _map_fileHashes_codec);
      if (context_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Context);
      }
      additionalContexts_.WriteTo(output, _repeated_additionalContexts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArtifactStorageSourceUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtifactStorageSourceUri);
      }
      size += fileHashes_.CalculateSize(_map_fileHashes_codec);
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      size += additionalContexts_.CalculateSize(_repeated_additionalContexts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Source other) {
      if (other == null) {
        return;
      }
      if (other.ArtifactStorageSourceUri.Length != 0) {
        ArtifactStorageSourceUri = other.ArtifactStorageSourceUri;
      }
      fileHashes_.Add(other.fileHashes_);
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Grafeas.V1Beta1.Source.SourceContext();
        }
        Context.MergeFrom(other.Context);
      }
      additionalContexts_.Add(other.additionalContexts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ArtifactStorageSourceUri = input.ReadString();
            break;
          }
          case 18: {
            fileHashes_.AddEntriesFrom(input, _map_fileHashes_codec);
            break;
          }
          case 26: {
            if (context_ == null) {
              Context = new global::Grafeas.V1Beta1.Source.SourceContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 34: {
            additionalContexts_.AddEntriesFrom(input, _repeated_additionalContexts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container message for hashes of byte content of files, used in source
  /// messages to verify integrity of source input to the build.
  /// </summary>
  public sealed partial class FileHashes : pb::IMessage<FileHashes> {
    private static readonly pb::MessageParser<FileHashes> _parser = new pb::MessageParser<FileHashes>(() => new FileHashes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileHashes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.Provenance.ProvenanceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes(FileHashes other) : this() {
      fileHash_ = other.fileHash_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes Clone() {
      return new FileHashes(this);
    }

    /// <summary>Field number for the "file_hash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grafeas.V1Beta1.Provenance.Hash> _repeated_fileHash_codec
        = pb::FieldCodec.ForMessage(10, global::Grafeas.V1Beta1.Provenance.Hash.Parser);
    private readonly pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Hash> fileHash_ = new pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Hash>();
    /// <summary>
    /// Required. Collection of file hashes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grafeas.V1Beta1.Provenance.Hash> FileHash {
      get { return fileHash_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileHashes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileHashes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fileHash_.Equals(other.fileHash_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fileHash_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fileHash_.WriteTo(output, _repeated_fileHash_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fileHash_.CalculateSize(_repeated_fileHash_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileHashes other) {
      if (other == null) {
        return;
      }
      fileHash_.Add(other.fileHash_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fileHash_.AddEntriesFrom(input, _repeated_fileHash_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container message for hash values.
  /// </summary>
  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.Provenance.ProvenanceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType type_ = global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType.Unspecified;
    /// <summary>
    /// Required. The type of hash that was performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// Required. The hash value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType.Unspecified) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType.Unspecified) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Grafeas.V1Beta1.Provenance.Hash.Types.HashType) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Hash message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies the hash algorithm.
      /// </summary>
      public enum HashType {
        /// <summary>
        /// Unknown.
        /// </summary>
        [pbr::OriginalName("HASH_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// A SHA-256 hash.
        /// </summary>
        [pbr::OriginalName("SHA256")] Sha256 = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Command describes a step performed as part of the build pipeline.
  /// </summary>
  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.Provenance.ProvenanceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      name_ = other.name_;
      env_ = other.env_.Clone();
      args_ = other.args_.Clone();
      dir_ = other.dir_;
      id_ = other.id_;
      waitFor_ = other.waitFor_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Name of the command, as presented on the command line, or if the
    /// command is packaged as a Docker container, as presented to `docker pull`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_env_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> env_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Environment variables set before running this command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Command-line arguments used when executing this command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private string dir_ = "";
    /// <summary>
    /// Working directory (relative to project source root) used when running this
    /// command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private string id_ = "";
    /// <summary>
    /// Optional unique identifier for this command, used in wait_for to reference
    /// this command as a dependency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wait_for" field.</summary>
    public const int WaitForFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_waitFor_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> waitFor_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The ID(s) of the command(s) that this command depends on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WaitFor {
      get { return waitFor_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!env_.Equals(other.env_)) return false;
      if(!args_.Equals(other.args_)) return false;
      if (Dir != other.Dir) return false;
      if (Id != other.Id) return false;
      if(!waitFor_.Equals(other.waitFor_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= env_.GetHashCode();
      hash ^= args_.GetHashCode();
      if (Dir.Length != 0) hash ^= Dir.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= waitFor_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      env_.WriteTo(output, _repeated_env_codec);
      args_.WriteTo(output, _repeated_args_codec);
      if (Dir.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Dir);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      waitFor_.WriteTo(output, _repeated_waitFor_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += env_.CalculateSize(_repeated_env_codec);
      size += args_.CalculateSize(_repeated_args_codec);
      if (Dir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dir);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += waitFor_.CalculateSize(_repeated_waitFor_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      env_.Add(other.env_);
      args_.Add(other.args_);
      if (other.Dir.Length != 0) {
        Dir = other.Dir;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      waitFor_.Add(other.waitFor_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            env_.AddEntriesFrom(input, _repeated_env_codec);
            break;
          }
          case 26: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 34: {
            Dir = input.ReadString();
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 50: {
            waitFor_.AddEntriesFrom(input, _repeated_waitFor_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Artifact describes a build product.
  /// </summary>
  public sealed partial class Artifact : pb::IMessage<Artifact> {
    private static readonly pb::MessageParser<Artifact> _parser = new pb::MessageParser<Artifact>(() => new Artifact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Artifact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grafeas.V1Beta1.Provenance.ProvenanceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact(Artifact other) : this() {
      checksum_ = other.checksum_;
      id_ = other.id_;
      names_ = other.names_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact Clone() {
      return new Artifact(this);
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 1;
    private string checksum_ = "";
    /// <summary>
    /// Hash or checksum value of a binary, or Docker Registry 2.0 digest of a
    /// container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Checksum {
      get { return checksum_; }
      set {
        checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// Artifact ID, if any; for container images, this will be a URL by digest
    /// like `gcr.io/projectID/imagename@sha256:123456`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Related artifact names. This may be the path to a binary or jar file, or in
    /// the case of a container build, the name used to push the container image to
    /// Google Container Registry, as presented to `docker push`. Note that a
    /// single Artifact ID can have multiple names, for example if two tags are
    /// applied to one image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Artifact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Artifact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Checksum != other.Checksum) return false;
      if (Id != other.Id) return false;
      if(!names_.Equals(other.names_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= names_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Checksum.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Checksum);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      names_.WriteTo(output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Checksum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += names_.CalculateSize(_repeated_names_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Artifact other) {
      if (other == null) {
        return;
      }
      if (other.Checksum.Length != 0) {
        Checksum = other.Checksum;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      names_.Add(other.names_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Checksum = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
