// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1alpha1/bill_of_materials.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Containeranalysis.V1Alpha1 {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1alpha1/bill_of_materials.proto</summary>
  public static partial class BillOfMaterialsReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1alpha1/bill_of_materials.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BillOfMaterialsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkJnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEv",
            "YmlsbF9vZl9tYXRlcmlhbHMucHJvdG8SKmdvb2dsZS5kZXZ0b29scy5jb250",
            "YWluZXJhbmFseXNpcy52MWFscGhhMRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9u",
            "cy5wcm90bxpGZ29vZ2xlL2RldnRvb2xzL2NvbnRhaW5lcmFuYWx5c2lzL3Yx",
            "YWxwaGExL3BhY2thZ2VfdnVsbmVyYWJpbGl0eS5wcm90byLXBQoOUGFja2Fn",
            "ZU1hbmFnZXIakwIKDERpc3RyaWJ1dGlvbhIPCgdjcGVfdXJpGAEgASgJEl0K",
            "DGFyY2hpdGVjdHVyZRgCIAEoDjJHLmdvb2dsZS5kZXZ0b29scy5jb250YWlu",
            "ZXJhbmFseXNpcy52MWFscGhhMS5QYWNrYWdlTWFuYWdlci5BcmNoaXRlY3R1",
            "cmUSXQoObGF0ZXN0X3ZlcnNpb24YAyABKAsyRS5nb29nbGUuZGV2dG9vbHMu",
            "Y29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuVnVsbmVyYWJpbGl0eVR5cGUu",
            "VmVyc2lvbhISCgptYWludGFpbmVyGAQgASgJEgsKA3VybBgGIAEoCRITCgtk",
            "ZXNjcmlwdGlvbhgHIAEoCRqBAQoITG9jYXRpb24SDwoHY3BlX3VyaRgBIAEo",
            "CRJWCgd2ZXJzaW9uGAIgASgLMkUuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5l",
            "cmFuYWx5c2lzLnYxYWxwaGExLlZ1bG5lcmFiaWxpdHlUeXBlLlZlcnNpb24S",
            "DAoEcGF0aBgDIAEoCRp2CgdQYWNrYWdlEgwKBG5hbWUYASABKAkSXQoMZGlz",
            "dHJpYnV0aW9uGAogAygLMkcuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFu",
            "YWx5c2lzLnYxYWxwaGExLlBhY2thZ2VNYW5hZ2VyLkRpc3RyaWJ1dGlvbhpz",
            "CgxJbnN0YWxsYXRpb24SDAoEbmFtZRgBIAEoCRJVCghsb2NhdGlvbhgCIAMo",
            "CzJDLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhh",
            "MS5QYWNrYWdlTWFuYWdlci5Mb2NhdGlvbiI+CgxBcmNoaXRlY3R1cmUSHAoY",
            "QVJDSElURUNUVVJFX1VOU1BFQ0lGSUVEEAASBwoDWDg2EAESBwoDWDY0EAJC",
            "jAEKJWNvbS5nb29nbGUuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTFQAVpb",
            "Z29vZ2xlLmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9kZXZ0b29s",
            "cy9jb250YWluZXJhbmFseXNpcy92MWFscGhhMTtjb250YWluZXJhbmFseXNp",
            "c6ICA0dDQWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Devtools.Containeranalysis.V1Alpha1.PackageVulnerabilityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager), global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Parser, null, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Architecture) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution), global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution.Parser, new[]{ "CpeUri", "Architecture", "LatestVersion", "Maintainer", "Url", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location), global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location.Parser, new[]{ "CpeUri", "Version", "Path" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package), global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package.Parser, new[]{ "Name", "Distribution" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation), global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation.Parser, new[]{ "Name", "Location" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// PackageManager provides metadata about available / installed packages.
  /// </summary>
  public sealed partial class PackageManager : pb::IMessage<PackageManager> {
    private static readonly pb::MessageParser<PackageManager> _parser = new pb::MessageParser<PackageManager>(() => new PackageManager());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageManager> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.BillOfMaterialsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageManager() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageManager(PackageManager other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageManager Clone() {
      return new PackageManager(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageManager);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageManager other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageManager other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PackageManager message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Instruction set architectures supported by various package managers.
      /// </summary>
      public enum Architecture {
        /// <summary>
        /// Unknown architecture
        /// </summary>
        [pbr::OriginalName("ARCHITECTURE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// X86 architecture
        /// </summary>
        [pbr::OriginalName("X86")] X86 = 1,
        /// <summary>
        /// X64 architecture
        /// </summary>
        [pbr::OriginalName("X64")] X64 = 2,
      }

      /// <summary>
      /// This represents a particular channel of distribution for a given package.
      /// e.g. Debian's jessie-backports dpkg mirror
      /// </summary>
      public sealed partial class Distribution : pb::IMessage<Distribution> {
        private static readonly pb::MessageParser<Distribution> _parser = new pb::MessageParser<Distribution>(() => new Distribution());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Distribution> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Distribution() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Distribution(Distribution other) : this() {
          cpeUri_ = other.cpeUri_;
          architecture_ = other.architecture_;
          latestVersion_ = other.latestVersion_ != null ? other.latestVersion_.Clone() : null;
          maintainer_ = other.maintainer_;
          url_ = other.url_;
          description_ = other.description_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Distribution Clone() {
          return new Distribution(this);
        }

        /// <summary>Field number for the "cpe_uri" field.</summary>
        public const int CpeUriFieldNumber = 1;
        private string cpeUri_ = "";
        /// <summary>
        /// The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)
        /// denoting the package manager version distributing a package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CpeUri {
          get { return cpeUri_; }
          set {
            cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "architecture" field.</summary>
        public const int ArchitectureFieldNumber = 2;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Architecture architecture_ = 0;
        /// <summary>
        /// The CPU architecture for which packages in this distribution
        /// channel were built
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Architecture Architecture {
          get { return architecture_; }
          set {
            architecture_ = value;
          }
        }

        /// <summary>Field number for the "latest_version" field.</summary>
        public const int LatestVersionFieldNumber = 3;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version latestVersion_;
        /// <summary>
        /// The latest available version of this package in
        /// this distribution channel.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version LatestVersion {
          get { return latestVersion_; }
          set {
            latestVersion_ = value;
          }
        }

        /// <summary>Field number for the "maintainer" field.</summary>
        public const int MaintainerFieldNumber = 4;
        private string maintainer_ = "";
        /// <summary>
        /// A freeform string denoting the maintainer of this package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Maintainer {
          get { return maintainer_; }
          set {
            maintainer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 6;
        private string url_ = "";
        /// <summary>
        /// The distribution channel-specific homepage for this package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 7;
        private string description_ = "";
        /// <summary>
        /// The distribution channel-specific description of this package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Distribution);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Distribution other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpeUri != other.CpeUri) return false;
          if (Architecture != other.Architecture) return false;
          if (!object.Equals(LatestVersion, other.LatestVersion)) return false;
          if (Maintainer != other.Maintainer) return false;
          if (Url != other.Url) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
          if (Architecture != 0) hash ^= Architecture.GetHashCode();
          if (latestVersion_ != null) hash ^= LatestVersion.GetHashCode();
          if (Maintainer.Length != 0) hash ^= Maintainer.GetHashCode();
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CpeUri);
          }
          if (Architecture != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Architecture);
          }
          if (latestVersion_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(LatestVersion);
          }
          if (Maintainer.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Maintainer);
          }
          if (Url.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Url);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
          }
          if (Architecture != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Architecture);
          }
          if (latestVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestVersion);
          }
          if (Maintainer.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Maintainer);
          }
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Distribution other) {
          if (other == null) {
            return;
          }
          if (other.CpeUri.Length != 0) {
            CpeUri = other.CpeUri;
          }
          if (other.Architecture != 0) {
            Architecture = other.Architecture;
          }
          if (other.latestVersion_ != null) {
            if (latestVersion_ == null) {
              LatestVersion = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
            }
            LatestVersion.MergeFrom(other.LatestVersion);
          }
          if (other.Maintainer.Length != 0) {
            Maintainer = other.Maintainer;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CpeUri = input.ReadString();
                break;
              }
              case 16: {
                Architecture = (global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Architecture) input.ReadEnum();
                break;
              }
              case 26: {
                if (latestVersion_ == null) {
                  LatestVersion = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
                }
                input.ReadMessage(LatestVersion);
                break;
              }
              case 34: {
                Maintainer = input.ReadString();
                break;
              }
              case 50: {
                Url = input.ReadString();
                break;
              }
              case 58: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// An occurrence of a particular package installation found within a
      /// system's filesystem.
      /// e.g. glibc was found in /var/lib/dpkg/status
      /// </summary>
      public sealed partial class Location : pb::IMessage<Location> {
        private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Location> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Location() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Location(Location other) : this() {
          cpeUri_ = other.cpeUri_;
          version_ = other.version_ != null ? other.version_.Clone() : null;
          path_ = other.path_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Location Clone() {
          return new Location(this);
        }

        /// <summary>Field number for the "cpe_uri" field.</summary>
        public const int CpeUriFieldNumber = 1;
        private string cpeUri_ = "";
        /// <summary>
        /// The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)
        /// denoting the package manager version distributing a package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CpeUri {
          get { return cpeUri_; }
          set {
            cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 2;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version version_;
        /// <summary>
        /// The version installed at this location.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        /// <summary>Field number for the "path" field.</summary>
        public const int PathFieldNumber = 3;
        private string path_ = "";
        /// <summary>
        /// The path from which we gathered that this package/version is installed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Path {
          get { return path_; }
          set {
            path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Location);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Location other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpeUri != other.CpeUri) return false;
          if (!object.Equals(Version, other.Version)) return false;
          if (Path != other.Path) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
          if (version_ != null) hash ^= Version.GetHashCode();
          if (Path.Length != 0) hash ^= Path.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CpeUri);
          }
          if (version_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Version);
          }
          if (Path.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Path);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
          }
          if (version_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
          }
          if (Path.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Location other) {
          if (other == null) {
            return;
          }
          if (other.CpeUri.Length != 0) {
            CpeUri = other.CpeUri;
          }
          if (other.version_ != null) {
            if (version_ == null) {
              Version = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
            }
            Version.MergeFrom(other.Version);
          }
          if (other.Path.Length != 0) {
            Path = other.Path;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CpeUri = input.ReadString();
                break;
              }
              case 18: {
                if (version_ == null) {
                  Version = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
                }
                input.ReadMessage(Version);
                break;
              }
              case 26: {
                Path = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// This represents a particular package that is distributed over
      /// various channels.
      /// e.g. glibc (aka libc6) is distributed by many, at various versions.
      /// </summary>
      public sealed partial class Package : pb::IMessage<Package> {
        private static readonly pb::MessageParser<Package> _parser = new pb::MessageParser<Package>(() => new Package());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Package> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Package() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Package(Package other) : this() {
          name_ = other.name_;
          distribution_ = other.distribution_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Package Clone() {
          return new Package(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// The name of the package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "distribution" field.</summary>
        public const int DistributionFieldNumber = 10;
        private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution> _repeated_distribution_codec
            = pb::FieldCodec.ForMessage(82, global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution.Parser);
        private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution> distribution_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution>();
        /// <summary>
        /// The various channels by which a package is distributed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Distribution> Distribution {
          get { return distribution_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Package);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Package other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if(!distribution_.Equals(other.distribution_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= distribution_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          distribution_.WriteTo(output, _repeated_distribution_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += distribution_.CalculateSize(_repeated_distribution_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Package other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          distribution_.Add(other.distribution_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 82: {
                distribution_.AddEntriesFrom(input, _repeated_distribution_codec);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// This represents how a particular software package may be installed on
      /// a system.
      /// </summary>
      public sealed partial class Installation : pb::IMessage<Installation> {
        private static readonly pb::MessageParser<Installation> _parser = new pb::MessageParser<Installation>(() => new Installation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Installation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Installation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Installation(Installation other) : this() {
          name_ = other.name_;
          location_ = other.location_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Installation Clone() {
          return new Installation(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        /// <summary>
        /// Output only. The name of the installed package.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "location" field.</summary>
        public const int LocationFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location> _repeated_location_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location.Parser);
        private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location> location_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location>();
        /// <summary>
        /// All of the places within the filesystem versions of this package
        /// have been found.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Location> Location {
          get { return location_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Installation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Installation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if(!location_.Equals(other.location_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          hash ^= location_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          location_.WriteTo(output, _repeated_location_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          size += location_.CalculateSize(_repeated_location_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Installation other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          location_.Add(other.location_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                location_.AddEntriesFrom(input, _repeated_location_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
