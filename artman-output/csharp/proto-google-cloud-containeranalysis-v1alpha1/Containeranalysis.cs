// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1alpha1/containeranalysis.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Containeranalysis.V1Alpha1 {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1alpha1/containeranalysis.proto</summary>
  public static partial class ContaineranalysisReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1alpha1/containeranalysis.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContaineranalysisReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkJnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEv",
            "Y29udGFpbmVyYW5hbHlzaXMucHJvdG8SKmdvb2dsZS5kZXZ0b29scy5jb250",
            "YWluZXJhbmFseXNpcy52MWFscGhhMRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9u",
            "cy5wcm90bxpCZ29vZ2xlL2RldnRvb2xzL2NvbnRhaW5lcmFuYWx5c2lzL3Yx",
            "YWxwaGExL2JpbGxfb2ZfbWF0ZXJpYWxzLnByb3RvGjxnb29nbGUvZGV2dG9v",
            "bHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEvaW1hZ2VfYmFzaXMucHJv",
            "dG8aRmdvb2dsZS9kZXZ0b29scy9jb250YWluZXJhbmFseXNpcy92MWFscGhh",
            "MS9wYWNrYWdlX3Z1bG5lcmFiaWxpdHkucHJvdG8aO2dvb2dsZS9kZXZ0b29s",
            "cy9jb250YWluZXJhbmFseXNpcy92MWFscGhhMS9wcm92ZW5hbmNlLnByb3Rv",
            "Gh5nb29nbGUvaWFtL3YxL2lhbV9wb2xpY3kucHJvdG8aGmdvb2dsZS9pYW0v",
            "djEvcG9saWN5LnByb3RvGiNnb29nbGUvbG9uZ3J1bm5pbmcvb3BlcmF0aW9u",
            "cy5wcm90bxoZZ29vZ2xlL3Byb3RvYnVmL2FueS5wcm90bxobZ29vZ2xlL3By",
            "b3RvYnVmL2VtcHR5LnByb3RvGiBnb29nbGUvcHJvdG9idWYvZmllbGRfbWFz",
            "ay5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoXZ29v",
            "Z2xlL3JwYy9zdGF0dXMucHJvdG8i6wcKCk9jY3VycmVuY2USDAoEbmFtZRgB",
            "IAEoCRIUCgxyZXNvdXJjZV91cmwYAiABKAkSRgoIcmVzb3VyY2UYESABKAsy",
            "NC5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEu",
            "UmVzb3VyY2USEQoJbm90ZV9uYW1lGAMgASgJEkMKBGtpbmQYBiABKA4yNS5n",
            "b29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuTm90",
            "ZS5LaW5kEnMKFXZ1bG5lcmFiaWxpdHlfZGV0YWlscxgIIAEoCzJSLmdvb2ds",
            "ZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5WdWxuZXJh",
            "YmlsaXR5VHlwZS5WdWxuZXJhYmlsaXR5RGV0YWlsc0gAElEKDWJ1aWxkX2Rl",
            "dGFpbHMYByABKAsyOC5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlz",
            "aXMudjFhbHBoYTEuQnVpbGREZXRhaWxzSAASWAoNZGVyaXZlZF9pbWFnZRgL",
            "IAEoCzI/Lmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFs",
            "cGhhMS5Eb2NrZXJJbWFnZS5EZXJpdmVkSAASXwoMaW5zdGFsbGF0aW9uGAwg",
            "ASgLMkcuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxw",
            "aGExLlBhY2thZ2VNYW5hZ2VyLkluc3RhbGxhdGlvbkgAElcKCmRlcGxveW1l",
            "bnQYDiABKAsyQS5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMu",
            "djFhbHBoYTEuRGVwbG95YWJsZS5EZXBsb3ltZW50SAASVgoKZGlzY292ZXJl",
            "ZBgPIAEoCzJALmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52",
            "MWFscGhhMS5EaXNjb3ZlcnkuRGlzY292ZXJlZEgAEmMKC2F0dGVzdGF0aW9u",
            "GBAgASgLMkwuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYx",
            "YWxwaGExLkF0dGVzdGF0aW9uQXV0aG9yaXR5LkF0dGVzdGF0aW9uSAASEwoL",
            "cmVtZWRpYXRpb24YBSABKAkSLwoLY3JlYXRlX3RpbWUYCSABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3VwZGF0ZV90aW1lGAogASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIJCgdkZXRhaWxzIm0KCFJlc291",
            "cmNlEgwKBG5hbWUYASABKAkSCwoDdXJpGAIgASgJEkYKDGNvbnRlbnRfaGFz",
            "aBgDIAEoCzIwLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52",
            "MWFscGhhMS5IYXNoIq4JCgROb3RlEgwKBG5hbWUYASABKAkSGQoRc2hvcnRf",
            "ZGVzY3JpcHRpb24YAyABKAkSGAoQbG9uZ19kZXNjcmlwdGlvbhgEIAEoCRJD",
            "CgRraW5kGAkgASgOMjUuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5",
            "c2lzLnYxYWxwaGExLk5vdGUuS2luZBJbChJ2dWxuZXJhYmlsaXR5X3R5cGUY",
            "BiABKAsyPS5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFh",
            "bHBoYTEuVnVsbmVyYWJpbGl0eVR5cGVIABJLCgpidWlsZF90eXBlGAggASgL",
            "MjUuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGEx",
            "LkJ1aWxkVHlwZUgAElMKCmJhc2VfaW1hZ2UYDSABKAsyPS5nb29nbGUuZGV2",
            "dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuRG9ja2VySW1hZ2Uu",
            "QmFzaXNIABJVCgdwYWNrYWdlGA4gASgLMkIuZ29vZ2xlLmRldnRvb2xzLmNv",
            "bnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLlBhY2thZ2VNYW5hZ2VyLlBhY2th",
            "Z2VIABJMCgpkZXBsb3lhYmxlGBEgASgLMjYuZ29vZ2xlLmRldnRvb2xzLmNv",
            "bnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkRlcGxveWFibGVIABJKCglkaXNj",
            "b3ZlcnkYEiABKAsyNS5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlz",
            "aXMudjFhbHBoYTEuRGlzY292ZXJ5SAASYQoVYXR0ZXN0YXRpb25fYXV0aG9y",
            "aXR5GBMgASgLMkAuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lz",
            "LnYxYWxwaGExLkF0dGVzdGF0aW9uQXV0aG9yaXR5SAASUAoLcmVsYXRlZF91",
            "cmwYByADKAsyOy5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMu",
            "djFhbHBoYTEuTm90ZS5SZWxhdGVkVXJsEjMKD2V4cGlyYXRpb25fdGltZRgK",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLY3JlYXRlX3Rp",
            "bWUYCyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC3VwZGF0",
            "ZV90aW1lGAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBooCgpS",
            "ZWxhdGVkVXJsEgsKA3VybBgBIAEoCRINCgVsYWJlbBgCIAEoCSKqAQoES2lu",
            "ZBIUChBLSU5EX1VOU1BFQ0lGSUVEEAASGQoVUEFDS0FHRV9WVUxORVJBQklM",
            "SVRZEAISEQoNQlVJTERfREVUQUlMUxADEg8KC0lNQUdFX0JBU0lTEAQSEwoP",
            "UEFDS0FHRV9NQU5BR0VSEAUSDgoKREVQTE9ZQUJMRRAGEg0KCURJU0NPVkVS",
            "WRAHEhkKFUFUVEVTVEFUSU9OX0FVVEhPUklUWRAIQgsKCW5vdGVfdHlwZSKD",
            "AwoKRGVwbG95YWJsZRIUCgxyZXNvdXJjZV91cmkYASADKAka3gIKCkRlcGxv",
            "eW1lbnQSEgoKdXNlcl9lbWFpbBgBIAEoCRIvCgtkZXBsb3lfdGltZRgCIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoNdW5kZXBsb3lfdGlt",
            "ZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDgoGY29uZmln",
            "GAggASgJEg8KB2FkZHJlc3MYBSABKAkSFAoMcmVzb3VyY2VfdXJpGAYgAygJ",
            "ElwKCHBsYXRmb3JtGAcgASgOMkouZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5l",
            "cmFuYWx5c2lzLnYxYWxwaGExLkRlcGxveWFibGUuRGVwbG95bWVudC5QbGF0",
            "Zm9ybSJDCghQbGF0Zm9ybRIYChRQTEFURk9STV9VTlNQRUNJRklFRBAAEgcK",
            "A0dLRRABEggKBEZMRVgQAhIKCgZDVVNUT00QAyLLAwoJRGlzY292ZXJ5EkwK",
            "DWFuYWx5c2lzX2tpbmQYASABKA4yNS5nb29nbGUuZGV2dG9vbHMuY29udGFp",
            "bmVyYW5hbHlzaXMudjFhbHBoYTEuTm90ZS5LaW5kGu8CCgpEaXNjb3ZlcmVk",
            "EjAKCW9wZXJhdGlvbhgBIAEoCzIdLmdvb2dsZS5sb25ncnVubmluZy5PcGVy",
            "YXRpb24SaAoPYW5hbHlzaXNfc3RhdHVzGAUgASgOMk8uZ29vZ2xlLmRldnRv",
            "b2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkRpc2NvdmVyeS5EaXNj",
            "b3ZlcmVkLkFuYWx5c2lzU3RhdHVzEjEKFWFuYWx5c2lzX3N0YXR1c19lcnJv",
            "chgGIAEoCzISLmdvb2dsZS5ycGMuU3RhdHVzIpEBCg5BbmFseXNpc1N0YXR1",
            "cxIfChtBTkFMWVNJU19TVEFUVVNfVU5TUEVDSUZJRUQQABILCgdQRU5ESU5H",
            "EAESDAoIU0NBTk5JTkcQAhIUChBGSU5JU0hFRF9TVUNDRVNTEAMSEwoPRklO",
            "SVNIRURfRkFJTEVEEAQSGAoUVU5TVVBQT1JURURfUkVTT1VSQ0UQBSJzCglC",
            "dWlsZFR5cGUSFwoPYnVpbGRlcl92ZXJzaW9uGAEgASgJEk0KCXNpZ25hdHVy",
            "ZRgCIAEoCzI6Lmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52",
            "MWFscGhhMS5CdWlsZFNpZ25hdHVyZSLnAQoOQnVpbGRTaWduYXR1cmUSEgoK",
            "cHVibGljX2tleRgBIAEoCRIRCglzaWduYXR1cmUYAiABKAkSDgoGa2V5X2lk",
            "GAMgASgJElQKCGtleV90eXBlGAQgASgOMkIuZ29vZ2xlLmRldnRvb2xzLmNv",
            "bnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkJ1aWxkU2lnbmF0dXJlLktleVR5",
            "cGUiSAoHS2V5VHlwZRIYChRLRVlfVFlQRV9VTlNQRUNJRklFRBAAEhUKEVBH",
            "UF9BU0NJSV9BUk1PUkVEEAESDAoIUEtJWF9QRU0QAiLzAQoUUGdwU2lnbmVk",
            "QXR0ZXN0YXRpb24SEQoJc2lnbmF0dXJlGAEgASgJEmIKDGNvbnRlbnRfdHlw",
            "ZRgDIAEoDjJMLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52",
            "MWFscGhhMS5QZ3BTaWduZWRBdHRlc3RhdGlvbi5Db250ZW50VHlwZRIUCgpw",
            "Z3Bfa2V5X2lkGAIgASgJSAAiRAoLQ29udGVudFR5cGUSHAoYQ09OVEVOVF9U",
            "WVBFX1VOU1BFQ0lGSUVEEAASFwoTU0lNUExFX1NJR05JTkdfSlNPThABQggK",
            "BmtleV9pZCK4AgoUQXR0ZXN0YXRpb25BdXRob3JpdHkSZwoEaGludBgBIAEo",
            "CzJZLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhh",
            "MS5BdHRlc3RhdGlvbkF1dGhvcml0eS5BdHRlc3RhdGlvbkF1dGhvcml0eUhp",
            "bnQaNwoYQXR0ZXN0YXRpb25BdXRob3JpdHlIaW50EhsKE2h1bWFuX3JlYWRh",
            "YmxlX25hbWUYASABKAkafgoLQXR0ZXN0YXRpb24SYgoWcGdwX3NpZ25lZF9h",
            "dHRlc3RhdGlvbhgBIAEoCzJALmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMS5QZ3BTaWduZWRBdHRlc3RhdGlvbkgAQgsKCXNp",
            "Z25hdHVyZSJ5CgxCdWlsZERldGFpbHMSTwoKcHJvdmVuYW5jZRgBIAEoCzI7",
            "Lmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5C",
            "dWlsZFByb3ZlbmFuY2USGAoQcHJvdmVuYW5jZV9ieXRlcxgCIAEoCSJACgpT",
            "Y2FuQ29uZmlnEgwKBG5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkS",
            "DwoHZW5hYmxlZBgDIAEoCCIkChRHZXRPY2N1cnJlbmNlUmVxdWVzdBIMCgRu",
            "YW1lGAEgASgJIrIBChZMaXN0T2NjdXJyZW5jZXNSZXF1ZXN0EgwKBG5hbWUY",
            "ASABKAkSDgoGcGFyZW50GAUgASgJEg4KBmZpbHRlchgCIAEoCRIRCglwYWdl",
            "X3NpemUYAyABKAUSEgoKcGFnZV90b2tlbhgEIAEoCRJDCgRraW5kGAYgASgO",
            "MjUuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGEx",
            "Lk5vdGUuS2luZCJ/ChdMaXN0T2NjdXJyZW5jZXNSZXNwb25zZRJLCgtvY2N1",
            "cnJlbmNlcxgBIAMoCzI2Lmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFs",
            "eXNpcy52MWFscGhhMS5PY2N1cnJlbmNlEhcKD25leHRfcGFnZV90b2tlbhgC",
            "IAEoCSInChdEZWxldGVPY2N1cnJlbmNlUmVxdWVzdBIMCgRuYW1lGAEgASgJ",
            "IoMBChdDcmVhdGVPY2N1cnJlbmNlUmVxdWVzdBIMCgRuYW1lGAEgASgJEg4K",
            "BnBhcmVudBgDIAEoCRJKCgpvY2N1cnJlbmNlGAIgASgLMjYuZ29vZ2xlLmRl",
            "dnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLk9jY3VycmVuY2Ui",
            "pAEKF1VwZGF0ZU9jY3VycmVuY2VSZXF1ZXN0EgwKBG5hbWUYASABKAkSSgoK",
            "b2NjdXJyZW5jZRgCIAEoCzI2Lmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMS5PY2N1cnJlbmNlEi8KC3VwZGF0ZV9tYXNrGAMg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzayIeCg5HZXROb3RlUmVx",
            "dWVzdBIMCgRuYW1lGAEgASgJIigKGEdldE9jY3VycmVuY2VOb3RlUmVxdWVz",
            "dBIMCgRuYW1lGAEgASgJImcKEExpc3ROb3Rlc1JlcXVlc3QSDAoEbmFtZRgB",
            "IAEoCRIOCgZwYXJlbnQYBSABKAkSDgoGZmlsdGVyGAIgASgJEhEKCXBhZ2Vf",
            "c2l6ZRgDIAEoBRISCgpwYWdlX3Rva2VuGAQgASgJIm0KEUxpc3ROb3Rlc1Jl",
            "c3BvbnNlEj8KBW5vdGVzGAEgAygLMjAuZ29vZ2xlLmRldnRvb2xzLmNvbnRh",
            "aW5lcmFuYWx5c2lzLnYxYWxwaGExLk5vdGUSFwoPbmV4dF9wYWdlX3Rva2Vu",
            "GAIgASgJIiEKEURlbGV0ZU5vdGVSZXF1ZXN0EgwKBG5hbWUYASABKAkiggEK",
            "EUNyZWF0ZU5vdGVSZXF1ZXN0EgwKBG5hbWUYASABKAkSDgoGcGFyZW50GAQg",
            "ASgJEg8KB25vdGVfaWQYAiABKAkSPgoEbm90ZRgDIAEoCzIwLmdvb2dsZS5k",
            "ZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5Ob3RlIpIBChFV",
            "cGRhdGVOb3RlUmVxdWVzdBIMCgRuYW1lGAEgASgJEj4KBG5vdGUYAiABKAsy",
            "MC5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEu",
            "Tm90ZRIvCgt1cGRhdGVfbWFzaxgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5G",
            "aWVsZE1hc2siYQoaTGlzdE5vdGVPY2N1cnJlbmNlc1JlcXVlc3QSDAoEbmFt",
            "ZRgBIAEoCRIOCgZmaWx0ZXIYAiABKAkSEQoJcGFnZV9zaXplGAMgASgFEhIK",
            "CnBhZ2VfdG9rZW4YBCABKAkigwEKG0xpc3ROb3RlT2NjdXJyZW5jZXNSZXNw",
            "b25zZRJLCgtvY2N1cnJlbmNlcxgBIAMoCzI2Lmdvb2dsZS5kZXZ0b29scy5j",
            "b250YWluZXJhbmFseXNpcy52MWFscGhhMS5PY2N1cnJlbmNlEhcKD25leHRf",
            "cGFnZV90b2tlbhgCIAEoCSJwChZDcmVhdGVPcGVyYXRpb25SZXF1ZXN0Eg4K",
            "BnBhcmVudBgBIAEoCRIUCgxvcGVyYXRpb25faWQYAiABKAkSMAoJb3BlcmF0",
            "aW9uGAMgASgLMh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKJAQoW",
            "VXBkYXRlT3BlcmF0aW9uUmVxdWVzdBIMCgRuYW1lGAEgASgJEjAKCW9wZXJh",
            "dGlvbhgDIAEoCzIdLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24SLwoL",
            "dXBkYXRlX21hc2sYBCABKAsyGi5nb29nbGUucHJvdG9idWYuRmllbGRNYXNr",
            "InIKEU9wZXJhdGlvbk1ldGFkYXRhEi8KC2NyZWF0ZV90aW1lGAEgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiQwohR2V0VnVsbnpPY2N1cnJl",
            "bmNlc1N1bW1hcnlSZXF1ZXN0Eg4KBnBhcmVudBgBIAEoCRIOCgZmaWx0ZXIY",
            "AiABKAkijAIKIkdldFZ1bG56T2NjdXJyZW5jZXNTdW1tYXJ5UmVzcG9uc2US",
            "bAoGY291bnRzGAEgAygLMlwuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFu",
            "YWx5c2lzLnYxYWxwaGExLkdldFZ1bG56T2NjdXJyZW5jZXNTdW1tYXJ5UmVz",
            "cG9uc2UuU2V2ZXJpdHlDb3VudBp4Cg1TZXZlcml0eUNvdW50ElgKCHNldmVy",
            "aXR5GAEgASgOMkYuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lz",
            "LnYxYWxwaGExLlZ1bG5lcmFiaWxpdHlUeXBlLlNldmVyaXR5Eg0KBWNvdW50",
            "GAIgASgDIiQKFEdldFNjYW5Db25maWdSZXF1ZXN0EgwKBG5hbWUYASABKAki",
            "XwoWTGlzdFNjYW5Db25maWdzUmVxdWVzdBIOCgZwYXJlbnQYASABKAkSDgoG",
            "ZmlsdGVyGAIgASgJEhEKCXBhZ2Vfc2l6ZRgDIAEoBRISCgpwYWdlX3Rva2Vu",
            "GAQgASgJIoABChdMaXN0U2NhbkNvbmZpZ3NSZXNwb25zZRJMCgxzY2FuX2Nv",
            "bmZpZ3MYASADKAsyNi5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlz",
            "aXMudjFhbHBoYTEuU2NhbkNvbmZpZxIXCg9uZXh0X3BhZ2VfdG9rZW4YAiAB",
            "KAkipQEKF1VwZGF0ZVNjYW5Db25maWdSZXF1ZXN0EgwKBG5hbWUYASABKAkS",
            "SwoLc2Nhbl9jb25maWcYAiABKAsyNi5nb29nbGUuZGV2dG9vbHMuY29udGFp",
            "bmVyYW5hbHlzaXMudjFhbHBoYTEuU2NhbkNvbmZpZxIvCgt1cGRhdGVfbWFz",
            "axgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2syxiAKEUNvbnRh",
            "aW5lckFuYWx5c2lzErwBCg1HZXRPY2N1cnJlbmNlEkAuZ29vZ2xlLmRldnRv",
            "b2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkdldE9jY3VycmVuY2VS",
            "ZXF1ZXN0GjYuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYx",
            "YWxwaGExLk9jY3VycmVuY2UiMYLT5JMCKxIpL3YxYWxwaGExL3tuYW1lPXBy",
            "b2plY3RzLyovb2NjdXJyZW5jZXMvKn0SzQEKD0xpc3RPY2N1cnJlbmNlcxJC",
            "Lmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5M",
            "aXN0T2NjdXJyZW5jZXNSZXF1ZXN0GkMuZ29vZ2xlLmRldnRvb2xzLmNvbnRh",
            "aW5lcmFuYWx5c2lzLnYxYWxwaGExLkxpc3RPY2N1cnJlbmNlc1Jlc3BvbnNl",
            "IjGC0+STAisSKS92MWFscGhhMS97cGFyZW50PXByb2plY3RzLyp9L29jY3Vy",
            "cmVuY2VzEqIBChBEZWxldGVPY2N1cnJlbmNlEkMuZ29vZ2xlLmRldnRvb2xz",
            "LmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkRlbGV0ZU9jY3VycmVuY2VS",
            "ZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IjGC0+STAisqKS92MWFs",
            "cGhhMS97bmFtZT1wcm9qZWN0cy8qL29jY3VycmVuY2VzLyp9Es4BChBDcmVh",
            "dGVPY2N1cnJlbmNlEkMuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5",
            "c2lzLnYxYWxwaGExLkNyZWF0ZU9jY3VycmVuY2VSZXF1ZXN0GjYuZ29vZ2xl",
            "LmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLk9jY3VycmVu",
            "Y2UiPYLT5JMCNyIpL3YxYWxwaGExL3twYXJlbnQ9cHJvamVjdHMvKn0vb2Nj",
            "dXJyZW5jZXM6Cm9jY3VycmVuY2USzgEKEFVwZGF0ZU9jY3VycmVuY2USQy5n",
            "b29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuVXBk",
            "YXRlT2NjdXJyZW5jZVJlcXVlc3QaNi5nb29nbGUuZGV2dG9vbHMuY29udGFp",
            "bmVyYW5hbHlzaXMudjFhbHBoYTEuT2NjdXJyZW5jZSI9gtPkkwI3MikvdjFh",
            "bHBoYTEve25hbWU9cHJvamVjdHMvKi9vY2N1cnJlbmNlcy8qfToKb2NjdXJy",
            "ZW5jZRLEAQoRR2V0T2NjdXJyZW5jZU5vdGUSRC5nb29nbGUuZGV2dG9vbHMu",
            "Y29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuR2V0T2NjdXJyZW5jZU5vdGVS",
            "ZXF1ZXN0GjAuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYx",
            "YWxwaGExLk5vdGUiN4LT5JMCMRIvL3YxYWxwaGExL3tuYW1lPXByb2plY3Rz",
            "Lyovb2NjdXJyZW5jZXMvKn0vbm90ZXMSpAEKB0dldE5vdGUSOi5nb29nbGUu",
            "ZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuR2V0Tm90ZVJl",
            "cXVlc3QaMC5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFh",
            "bHBoYTEuTm90ZSIrgtPkkwIlEiMvdjFhbHBoYTEve25hbWU9cHJvamVjdHMv",
            "Ki9ub3Rlcy8qfRK1AQoJTGlzdE5vdGVzEjwuZ29vZ2xlLmRldnRvb2xzLmNv",
            "bnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkxpc3ROb3Rlc1JlcXVlc3QaPS5n",
            "b29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuTGlz",
            "dE5vdGVzUmVzcG9uc2UiK4LT5JMCJRIjL3YxYWxwaGExL3twYXJlbnQ9cHJv",
            "amVjdHMvKn0vbm90ZXMSkAEKCkRlbGV0ZU5vdGUSPS5nb29nbGUuZGV2dG9v",
            "bHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuRGVsZXRlTm90ZVJlcXVl",
            "c3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiK4LT5JMCJSojL3YxYWxwaGEx",
            "L3tuYW1lPXByb2plY3RzLyovbm90ZXMvKn0SsAEKCkNyZWF0ZU5vdGUSPS5n",
            "b29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuQ3Jl",
            "YXRlTm90ZVJlcXVlc3QaMC5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5h",
            "bHlzaXMudjFhbHBoYTEuTm90ZSIxgtPkkwIrIiMvdjFhbHBoYTEve3BhcmVu",
            "dD1wcm9qZWN0cy8qfS9ub3RlczoEbm90ZRKwAQoKVXBkYXRlTm90ZRI9Lmdv",
            "b2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5VcGRh",
            "dGVOb3RlUmVxdWVzdBowLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFs",
            "eXNpcy52MWFscGhhMS5Ob3RlIjGC0+STAisyIy92MWFscGhhMS97bmFtZT1w",
            "cm9qZWN0cy8qL25vdGVzLyp9OgRub3RlEt8BChNMaXN0Tm90ZU9jY3VycmVu",
            "Y2VzEkYuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxw",
            "aGExLkxpc3ROb3RlT2NjdXJyZW5jZXNSZXF1ZXN0GkcuZ29vZ2xlLmRldnRv",
            "b2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkxpc3ROb3RlT2NjdXJy",
            "ZW5jZXNSZXNwb25zZSI3gtPkkwIxEi8vdjFhbHBoYTEve25hbWU9cHJvamVj",
            "dHMvKi9ub3Rlcy8qfS9vY2N1cnJlbmNlcxKDAgoaR2V0VnVsbnpPY2N1cnJl",
            "bmNlc1N1bW1hcnkSTS5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlz",
            "aXMudjFhbHBoYTEuR2V0VnVsbnpPY2N1cnJlbmNlc1N1bW1hcnlSZXF1ZXN0",
            "Gk4uZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGEx",
            "LkdldFZ1bG56T2NjdXJyZW5jZXNTdW1tYXJ5UmVzcG9uc2UiRoLT5JMCQBI+",
            "L3YxYWxwaGExL3twYXJlbnQ9cHJvamVjdHMvKn0vb2NjdXJyZW5jZXM6dnVs",
            "bmVyYWJpbGl0eVN1bW1hcnkSzAEKDFNldElhbVBvbGljeRIiLmdvb2dsZS5p",
            "YW0udjEuU2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9s",
            "aWN5IoABgtPkkwJ6IjQvdjFhbHBoYTEve3Jlc291cmNlPXByb2plY3RzLyov",
            "bm90ZXMvKn06c2V0SWFtUG9saWN5OgEqWj8iOi92MWFscGhhMS97cmVzb3Vy",
            "Y2U9cHJvamVjdHMvKi9vY2N1cnJlbmNlcy8qfTpzZXRJYW1Qb2xpY3k6ASoS",
            "zAEKDEdldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuR2V0SWFtUG9saWN5",
            "UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IoABgtPkkwJ6IjQvdjFh",
            "bHBoYTEve3Jlc291cmNlPXByb2plY3RzLyovbm90ZXMvKn06Z2V0SWFtUG9s",
            "aWN5OgEqWj8iOi92MWFscGhhMS97cmVzb3VyY2U9cHJvamVjdHMvKi9vY2N1",
            "cnJlbmNlcy8qfTpnZXRJYW1Qb2xpY3k6ASoS+QEKElRlc3RJYW1QZXJtaXNz",
            "aW9ucxIoLmdvb2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25zUmVxdWVz",
            "dBopLmdvb2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25zUmVzcG9uc2Ui",
            "jQGC0+STAoYBIjovdjFhbHBoYTEve3Jlc291cmNlPXByb2plY3RzLyovbm90",
            "ZXMvKn06dGVzdElhbVBlcm1pc3Npb25zOgEqWkUiQC92MWFscGhhMS97cmVz",
            "b3VyY2U9cHJvamVjdHMvKi9vY2N1cnJlbmNlcy8qfTp0ZXN0SWFtUGVybWlz",
            "c2lvbnM6ASoSqQEKD0NyZWF0ZU9wZXJhdGlvbhJCLmdvb2dsZS5kZXZ0b29s",
            "cy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5DcmVhdGVPcGVyYXRpb25S",
            "ZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiIzgtPkkwIt",
            "IigvdjFhbHBoYTEve3BhcmVudD1wcm9qZWN0cy8qfS9vcGVyYXRpb25zOgEq",
            "EqkBCg9VcGRhdGVPcGVyYXRpb24SQi5nb29nbGUuZGV2dG9vbHMuY29udGFp",
            "bmVyYW5hbHlzaXMudjFhbHBoYTEuVXBkYXRlT3BlcmF0aW9uUmVxdWVzdBod",
            "Lmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRpb24iM4LT5JMCLTIoL3YxYWxw",
            "aGExL3tuYW1lPXByb2plY3RzLyovb3BlcmF0aW9ucy8qfToBKhK9AQoNR2V0",
            "U2NhbkNvbmZpZxJALmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNp",
            "cy52MWFscGhhMS5HZXRTY2FuQ29uZmlnUmVxdWVzdBo2Lmdvb2dsZS5kZXZ0",
            "b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5TY2FuQ29uZmlnIjKC",
            "0+STAiwSKi92MWFscGhhMS97bmFtZT1wcm9qZWN0cy8qL3NjYW5fY29uZmln",
            "cy8qfRLOAQoPTGlzdFNjYW5Db25maWdzEkIuZ29vZ2xlLmRldnRvb2xzLmNv",
            "bnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkxpc3RTY2FuQ29uZmlnc1JlcXVl",
            "c3QaQy5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBo",
            "YTEuTGlzdFNjYW5Db25maWdzUmVzcG9uc2UiMoLT5JMCLBIqL3YxYWxwaGEx",
            "L3twYXJlbnQ9cHJvamVjdHMvKn0vc2Nhbl9jb25maWdzEtABChBVcGRhdGVT",
            "Y2FuQ29uZmlnEkMuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lz",
            "LnYxYWxwaGExLlVwZGF0ZVNjYW5Db25maWdSZXF1ZXN0GjYuZ29vZ2xlLmRl",
            "dnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLlNjYW5Db25maWci",
            "P4LT5JMCOTIqL3YxYWxwaGExL3tuYW1lPXByb2plY3RzLyovc2Nhbl9jb25m",
            "aWdzLyp9OgtzY2FuX2NvbmZpZ0KMAQolY29tLmdvb2dsZS5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMVABWltnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90",
            "by9nb29nbGVhcGlzL2RldnRvb2xzL2NvbnRhaW5lcmFuYWx5c2lzL3YxYWxw",
            "aGExO2NvbnRhaW5lcmFuYWx5c2lzogIDR0NBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Devtools.Containeranalysis.V1Alpha1.BillOfMaterialsReflection.Descriptor, global::Google.Devtools.Containeranalysis.V1Alpha1.ImageBasisReflection.Descriptor, global::Google.Devtools.Containeranalysis.V1Alpha1.PackageVulnerabilityReflection.Descriptor, global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor, global::Google.Cloud.Iam.V1.IamPolicyReflection.Descriptor, global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence), global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence.Parser, new[]{ "Name", "ResourceUrl", "Resource", "NoteName", "Kind", "VulnerabilityDetails", "BuildDetails", "DerivedImage", "Installation", "Deployment", "Discovered", "Attestation", "Remediation", "CreateTime", "UpdateTime" }, new[]{ "Details" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Resource), global::Google.Devtools.Containeranalysis.V1Alpha1.Resource.Parser, new[]{ "Name", "Uri", "ContentHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Note), global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Parser, new[]{ "Name", "ShortDescription", "LongDescription", "Kind", "VulnerabilityType", "BuildType", "BaseImage", "Package", "Deployable", "Discovery", "AttestationAuthority", "RelatedUrl", "ExpirationTime", "CreateTime", "UpdateTime" }, new[]{ "NoteType" }, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl), global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl.Parser, new[]{ "Url", "Label" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable), global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Parser, new[]{ "ResourceUri" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment), global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment.Parser, new[]{ "UserEmail", "DeployTime", "UndeployTime", "Config", "Address", "ResourceUri", "Platform" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment.Types.Platform) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery), global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Parser, new[]{ "AnalysisKind" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered), global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered.Parser, new[]{ "Operation", "AnalysisStatus", "AnalysisStatusError" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered.Types.AnalysisStatus) }, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType), global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType.Parser, new[]{ "BuilderVersion", "Signature" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature), global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature.Parser, new[]{ "PublicKey", "Signature", "KeyId", "KeyType" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature.Types.KeyType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation), global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation.Parser, new[]{ "Signature", "ContentType", "PgpKeyId" }, new[]{ "KeyId" }, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation.Types.ContentType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority), global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Parser, new[]{ "Hint" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.AttestationAuthorityHint), global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.AttestationAuthorityHint.Parser, new[]{ "HumanReadableName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation), global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation.Parser, new[]{ "PgpSignedAttestation" }, new[]{ "Signature" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails), global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails.Parser, new[]{ "Provenance", "ProvenanceBytes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig), global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig.Parser, new[]{ "Name", "Description", "Enabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetOccurrenceRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.GetOccurrenceRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListOccurrencesRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.ListOccurrencesRequest.Parser, new[]{ "Name", "Parent", "Filter", "PageSize", "PageToken", "Kind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListOccurrencesResponse), global::Google.Devtools.Containeranalysis.V1Alpha1.ListOccurrencesResponse.Parser, new[]{ "Occurrences", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DeleteOccurrenceRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.DeleteOccurrenceRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.CreateOccurrenceRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.CreateOccurrenceRequest.Parser, new[]{ "Name", "Parent", "Occurrence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateOccurrenceRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateOccurrenceRequest.Parser, new[]{ "Name", "Occurrence", "UpdateMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetNoteRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.GetNoteRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetOccurrenceNoteRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.GetOccurrenceNoteRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListNotesRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.ListNotesRequest.Parser, new[]{ "Name", "Parent", "Filter", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListNotesResponse), global::Google.Devtools.Containeranalysis.V1Alpha1.ListNotesResponse.Parser, new[]{ "Notes", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DeleteNoteRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.DeleteNoteRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.CreateNoteRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.CreateNoteRequest.Parser, new[]{ "Name", "Parent", "NoteId", "Note" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateNoteRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateNoteRequest.Parser, new[]{ "Name", "Note", "UpdateMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListNoteOccurrencesRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.ListNoteOccurrencesRequest.Parser, new[]{ "Name", "Filter", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListNoteOccurrencesResponse), global::Google.Devtools.Containeranalysis.V1Alpha1.ListNoteOccurrencesResponse.Parser, new[]{ "Occurrences", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.CreateOperationRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.CreateOperationRequest.Parser, new[]{ "Parent", "OperationId", "Operation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateOperationRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateOperationRequest.Parser, new[]{ "Name", "Operation", "UpdateMask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.OperationMetadata), global::Google.Devtools.Containeranalysis.V1Alpha1.OperationMetadata.Parser, new[]{ "CreateTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryRequest.Parser, new[]{ "Parent", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse), global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Parser, new[]{ "Counts" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount), global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount.Parser, new[]{ "Severity", "Count" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.GetScanConfigRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.GetScanConfigRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListScanConfigsRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.ListScanConfigsRequest.Parser, new[]{ "Parent", "Filter", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.ListScanConfigsResponse), global::Google.Devtools.Containeranalysis.V1Alpha1.ListScanConfigsResponse.Parser, new[]{ "ScanConfigs", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateScanConfigRequest), global::Google.Devtools.Containeranalysis.V1Alpha1.UpdateScanConfigRequest.Parser, new[]{ "Name", "ScanConfig", "UpdateMask" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// `Occurrence` includes information about analysis occurrences for an image.
  /// </summary>
  public sealed partial class Occurrence : pb::IMessage<Occurrence> {
    private static readonly pb::MessageParser<Occurrence> _parser = new pb::MessageParser<Occurrence>(() => new Occurrence());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Occurrence> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Occurrence() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Occurrence(Occurrence other) : this() {
      name_ = other.name_;
      resourceUrl_ = other.resourceUrl_;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      noteName_ = other.noteName_;
      kind_ = other.kind_;
      remediation_ = other.remediation_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      switch (other.DetailsCase) {
        case DetailsOneofCase.VulnerabilityDetails:
          VulnerabilityDetails = other.VulnerabilityDetails.Clone();
          break;
        case DetailsOneofCase.BuildDetails:
          BuildDetails = other.BuildDetails.Clone();
          break;
        case DetailsOneofCase.DerivedImage:
          DerivedImage = other.DerivedImage.Clone();
          break;
        case DetailsOneofCase.Installation:
          Installation = other.Installation.Clone();
          break;
        case DetailsOneofCase.Deployment:
          Deployment = other.Deployment.Clone();
          break;
        case DetailsOneofCase.Discovered:
          Discovered = other.Discovered.Clone();
          break;
        case DetailsOneofCase.Attestation:
          Attestation = other.Attestation.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Occurrence Clone() {
      return new Occurrence(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The name of the `Occurrence` in the form
    /// "projects/{project_id}/occurrences/{OCCURRENCE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_url" field.</summary>
    public const int ResourceUrlFieldNumber = 2;
    private string resourceUrl_ = "";
    /// <summary>
    /// The unique URL of the image or the container for which the `Occurrence`
    /// applies. For example, https://gcr.io/project/image@sha256:foo This field
    /// can be used as a filter in list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceUrl {
      get { return resourceUrl_; }
      set {
        resourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 17;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Resource resource_;
    /// <summary>
    /// The resource for which the `Occurrence` applies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Resource Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "note_name" field.</summary>
    public const int NoteNameFieldNumber = 3;
    private string noteName_ = "";
    /// <summary>
    /// An analysis note associated with this image, in the form
    /// "providers/{provider_id}/notes/{NOTE_ID}"
    /// This field can be used as a filter in list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoteName {
      get { return noteName_; }
      set {
        noteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 6;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind kind_ = 0;
    /// <summary>
    /// Output only. This explicitly denotes which of the `Occurrence` details are
    /// specified. This field can be used as a filter in list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "vulnerability_details" field.</summary>
    public const int VulnerabilityDetailsFieldNumber = 8;
    /// <summary>
    /// Details of a security vulnerability note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails VulnerabilityDetails {
      get { return detailsCase_ == DetailsOneofCase.VulnerabilityDetails ? (global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.VulnerabilityDetails;
      }
    }

    /// <summary>Field number for the "build_details" field.</summary>
    public const int BuildDetailsFieldNumber = 7;
    /// <summary>
    /// Build details for a verifiable build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails BuildDetails {
      get { return detailsCase_ == DetailsOneofCase.BuildDetails ? (global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.BuildDetails;
      }
    }

    /// <summary>Field number for the "derived_image" field.</summary>
    public const int DerivedImageFieldNumber = 11;
    /// <summary>
    /// Describes how this resource derives from the basis
    /// in the associated note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived DerivedImage {
      get { return detailsCase_ == DetailsOneofCase.DerivedImage ? (global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.DerivedImage;
      }
    }

    /// <summary>Field number for the "installation" field.</summary>
    public const int InstallationFieldNumber = 12;
    /// <summary>
    /// Describes the installation of a package on the linked resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation Installation {
      get { return detailsCase_ == DetailsOneofCase.Installation ? (global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.Installation;
      }
    }

    /// <summary>Field number for the "deployment" field.</summary>
    public const int DeploymentFieldNumber = 14;
    /// <summary>
    /// Describes the deployment of an artifact on a runtime.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment Deployment {
      get { return detailsCase_ == DetailsOneofCase.Deployment ? (global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.Deployment;
      }
    }

    /// <summary>Field number for the "discovered" field.</summary>
    public const int DiscoveredFieldNumber = 15;
    /// <summary>
    /// Describes the initial scan status for this resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered Discovered {
      get { return detailsCase_ == DetailsOneofCase.Discovered ? (global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.Discovered;
      }
    }

    /// <summary>Field number for the "attestation" field.</summary>
    public const int AttestationFieldNumber = 16;
    /// <summary>
    /// Describes an attestation of an artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation Attestation {
      get { return detailsCase_ == DetailsOneofCase.Attestation ? (global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation) details_ : null; }
      set {
        details_ = value;
        detailsCase_ = value == null ? DetailsOneofCase.None : DetailsOneofCase.Attestation;
      }
    }

    /// <summary>Field number for the "remediation" field.</summary>
    public const int RemediationFieldNumber = 5;
    private string remediation_ = "";
    /// <summary>
    /// A description of actions that can be taken to remedy the `Note`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remediation {
      get { return remediation_; }
      set {
        remediation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time this `Occurrence` was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time this `Occurrence` was last updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    private object details_;
    /// <summary>Enum of possible cases for the "details" oneof.</summary>
    public enum DetailsOneofCase {
      None = 0,
      VulnerabilityDetails = 8,
      BuildDetails = 7,
      DerivedImage = 11,
      Installation = 12,
      Deployment = 14,
      Discovered = 15,
      Attestation = 16,
    }
    private DetailsOneofCase detailsCase_ = DetailsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetailsOneofCase DetailsCase {
      get { return detailsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDetails() {
      detailsCase_ = DetailsOneofCase.None;
      details_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Occurrence);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Occurrence other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ResourceUrl != other.ResourceUrl) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if (NoteName != other.NoteName) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(VulnerabilityDetails, other.VulnerabilityDetails)) return false;
      if (!object.Equals(BuildDetails, other.BuildDetails)) return false;
      if (!object.Equals(DerivedImage, other.DerivedImage)) return false;
      if (!object.Equals(Installation, other.Installation)) return false;
      if (!object.Equals(Deployment, other.Deployment)) return false;
      if (!object.Equals(Discovered, other.Discovered)) return false;
      if (!object.Equals(Attestation, other.Attestation)) return false;
      if (Remediation != other.Remediation) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (DetailsCase != other.DetailsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ResourceUrl.Length != 0) hash ^= ResourceUrl.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (NoteName.Length != 0) hash ^= NoteName.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.VulnerabilityDetails) hash ^= VulnerabilityDetails.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.BuildDetails) hash ^= BuildDetails.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.DerivedImage) hash ^= DerivedImage.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.Installation) hash ^= Installation.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.Deployment) hash ^= Deployment.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.Discovered) hash ^= Discovered.GetHashCode();
      if (detailsCase_ == DetailsOneofCase.Attestation) hash ^= Attestation.GetHashCode();
      if (Remediation.Length != 0) hash ^= Remediation.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= (int) detailsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ResourceUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ResourceUrl);
      }
      if (NoteName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NoteName);
      }
      if (Remediation.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Remediation);
      }
      if (Kind != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Kind);
      }
      if (detailsCase_ == DetailsOneofCase.BuildDetails) {
        output.WriteRawTag(58);
        output.WriteMessage(BuildDetails);
      }
      if (detailsCase_ == DetailsOneofCase.VulnerabilityDetails) {
        output.WriteRawTag(66);
        output.WriteMessage(VulnerabilityDetails);
      }
      if (createTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateTime);
      }
      if (detailsCase_ == DetailsOneofCase.DerivedImage) {
        output.WriteRawTag(90);
        output.WriteMessage(DerivedImage);
      }
      if (detailsCase_ == DetailsOneofCase.Installation) {
        output.WriteRawTag(98);
        output.WriteMessage(Installation);
      }
      if (detailsCase_ == DetailsOneofCase.Deployment) {
        output.WriteRawTag(114);
        output.WriteMessage(Deployment);
      }
      if (detailsCase_ == DetailsOneofCase.Discovered) {
        output.WriteRawTag(122);
        output.WriteMessage(Discovered);
      }
      if (detailsCase_ == DetailsOneofCase.Attestation) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Attestation);
      }
      if (resource_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ResourceUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceUrl);
      }
      if (resource_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (NoteName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoteName);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (detailsCase_ == DetailsOneofCase.VulnerabilityDetails) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VulnerabilityDetails);
      }
      if (detailsCase_ == DetailsOneofCase.BuildDetails) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildDetails);
      }
      if (detailsCase_ == DetailsOneofCase.DerivedImage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DerivedImage);
      }
      if (detailsCase_ == DetailsOneofCase.Installation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Installation);
      }
      if (detailsCase_ == DetailsOneofCase.Deployment) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deployment);
      }
      if (detailsCase_ == DetailsOneofCase.Discovered) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Discovered);
      }
      if (detailsCase_ == DetailsOneofCase.Attestation) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Attestation);
      }
      if (Remediation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remediation);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Occurrence other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ResourceUrl.Length != 0) {
        ResourceUrl = other.ResourceUrl;
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Google.Devtools.Containeranalysis.V1Alpha1.Resource();
        }
        Resource.MergeFrom(other.Resource);
      }
      if (other.NoteName.Length != 0) {
        NoteName = other.NoteName;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Remediation.Length != 0) {
        Remediation = other.Remediation;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      switch (other.DetailsCase) {
        case DetailsOneofCase.VulnerabilityDetails:
          if (VulnerabilityDetails == null) {
            VulnerabilityDetails = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails();
          }
          VulnerabilityDetails.MergeFrom(other.VulnerabilityDetails);
          break;
        case DetailsOneofCase.BuildDetails:
          if (BuildDetails == null) {
            BuildDetails = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails();
          }
          BuildDetails.MergeFrom(other.BuildDetails);
          break;
        case DetailsOneofCase.DerivedImage:
          if (DerivedImage == null) {
            DerivedImage = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived();
          }
          DerivedImage.MergeFrom(other.DerivedImage);
          break;
        case DetailsOneofCase.Installation:
          if (Installation == null) {
            Installation = new global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation();
          }
          Installation.MergeFrom(other.Installation);
          break;
        case DetailsOneofCase.Deployment:
          if (Deployment == null) {
            Deployment = new global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment();
          }
          Deployment.MergeFrom(other.Deployment);
          break;
        case DetailsOneofCase.Discovered:
          if (Discovered == null) {
            Discovered = new global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered();
          }
          Discovered.MergeFrom(other.Discovered);
          break;
        case DetailsOneofCase.Attestation:
          if (Attestation == null) {
            Attestation = new global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation();
          }
          Attestation.MergeFrom(other.Attestation);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ResourceUrl = input.ReadString();
            break;
          }
          case 26: {
            NoteName = input.ReadString();
            break;
          }
          case 42: {
            Remediation = input.ReadString();
            break;
          }
          case 48: {
            Kind = (global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind) input.ReadEnum();
            break;
          }
          case 58: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildDetails();
            if (detailsCase_ == DetailsOneofCase.BuildDetails) {
              subBuilder.MergeFrom(BuildDetails);
            }
            input.ReadMessage(subBuilder);
            BuildDetails = subBuilder;
            break;
          }
          case 66: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails();
            if (detailsCase_ == DetailsOneofCase.VulnerabilityDetails) {
              subBuilder.MergeFrom(VulnerabilityDetails);
            }
            input.ReadMessage(subBuilder);
            VulnerabilityDetails = subBuilder;
            break;
          }
          case 74: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 82: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 90: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived();
            if (detailsCase_ == DetailsOneofCase.DerivedImage) {
              subBuilder.MergeFrom(DerivedImage);
            }
            input.ReadMessage(subBuilder);
            DerivedImage = subBuilder;
            break;
          }
          case 98: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Installation();
            if (detailsCase_ == DetailsOneofCase.Installation) {
              subBuilder.MergeFrom(Installation);
            }
            input.ReadMessage(subBuilder);
            Installation = subBuilder;
            break;
          }
          case 114: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment();
            if (detailsCase_ == DetailsOneofCase.Deployment) {
              subBuilder.MergeFrom(Deployment);
            }
            input.ReadMessage(subBuilder);
            Deployment = subBuilder;
            break;
          }
          case 122: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered();
            if (detailsCase_ == DetailsOneofCase.Discovered) {
              subBuilder.MergeFrom(Discovered);
            }
            input.ReadMessage(subBuilder);
            Discovered = subBuilder;
            break;
          }
          case 130: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.Attestation();
            if (detailsCase_ == DetailsOneofCase.Attestation) {
              subBuilder.MergeFrom(Attestation);
            }
            input.ReadMessage(subBuilder);
            Attestation = subBuilder;
            break;
          }
          case 138: {
            if (resource_ == null) {
              Resource = new global::Google.Devtools.Containeranalysis.V1Alpha1.Resource();
            }
            input.ReadMessage(Resource);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Resource is an entity that can have metadata. E.g., a Docker image.
  /// </summary>
  public sealed partial class Resource : pb::IMessage<Resource> {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource(Resource other) : this() {
      name_ = other.name_;
      uri_ = other.uri_;
      contentHash_ = other.contentHash_ != null ? other.contentHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the resource. E.g., the name of a Docker image - "Debian".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private string uri_ = "";
    /// <summary>
    /// The unique URI of the resource. E.g.,
    /// "https://gcr.io/project/image@sha256:foo" for a Docker image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_hash" field.</summary>
    public const int ContentHashFieldNumber = 3;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Hash contentHash_;
    /// <summary>
    /// The hash of the resource content. E.g., the Docker digest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Hash ContentHash {
      get { return contentHash_; }
      set {
        contentHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Uri != other.Uri) return false;
      if (!object.Equals(ContentHash, other.ContentHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (contentHash_ != null) hash ^= ContentHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (contentHash_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContentHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (contentHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.contentHash_ != null) {
        if (contentHash_ == null) {
          ContentHash = new global::Google.Devtools.Containeranalysis.V1Alpha1.Hash();
        }
        ContentHash.MergeFrom(other.ContentHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            if (contentHash_ == null) {
              ContentHash = new global::Google.Devtools.Containeranalysis.V1Alpha1.Hash();
            }
            input.ReadMessage(ContentHash);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Provides a detailed description of a `Note`.
  /// </summary>
  public sealed partial class Note : pb::IMessage<Note> {
    private static readonly pb::MessageParser<Note> _parser = new pb::MessageParser<Note>(() => new Note());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Note> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Note() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Note(Note other) : this() {
      name_ = other.name_;
      shortDescription_ = other.shortDescription_;
      longDescription_ = other.longDescription_;
      kind_ = other.kind_;
      relatedUrl_ = other.relatedUrl_.Clone();
      expirationTime_ = other.expirationTime_ != null ? other.expirationTime_.Clone() : null;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      switch (other.NoteTypeCase) {
        case NoteTypeOneofCase.VulnerabilityType:
          VulnerabilityType = other.VulnerabilityType.Clone();
          break;
        case NoteTypeOneofCase.BuildType:
          BuildType = other.BuildType.Clone();
          break;
        case NoteTypeOneofCase.BaseImage:
          BaseImage = other.BaseImage.Clone();
          break;
        case NoteTypeOneofCase.Package:
          Package = other.Package.Clone();
          break;
        case NoteTypeOneofCase.Deployable:
          Deployable = other.Deployable.Clone();
          break;
        case NoteTypeOneofCase.Discovery:
          Discovery = other.Discovery.Clone();
          break;
        case NoteTypeOneofCase.AttestationAuthority:
          AttestationAuthority = other.AttestationAuthority.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Note Clone() {
      return new Note(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the note in the form
    /// "providers/{provider_id}/notes/{NOTE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short_description" field.</summary>
    public const int ShortDescriptionFieldNumber = 3;
    private string shortDescription_ = "";
    /// <summary>
    /// A one sentence description of this `Note`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortDescription {
      get { return shortDescription_; }
      set {
        shortDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "long_description" field.</summary>
    public const int LongDescriptionFieldNumber = 4;
    private string longDescription_ = "";
    /// <summary>
    /// A detailed description of this `Note`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LongDescription {
      get { return longDescription_; }
      set {
        longDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 9;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind kind_ = 0;
    /// <summary>
    /// Output only. This explicitly denotes which kind of note is specified. This
    /// field can be used as a filter in list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "vulnerability_type" field.</summary>
    public const int VulnerabilityTypeFieldNumber = 6;
    /// <summary>
    /// A package vulnerability type of note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType VulnerabilityType {
      get { return noteTypeCase_ == NoteTypeOneofCase.VulnerabilityType ? (global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.VulnerabilityType;
      }
    }

    /// <summary>Field number for the "build_type" field.</summary>
    public const int BuildTypeFieldNumber = 8;
    /// <summary>
    /// Build provenance type for a verifiable build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType BuildType {
      get { return noteTypeCase_ == NoteTypeOneofCase.BuildType ? (global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.BuildType;
      }
    }

    /// <summary>Field number for the "base_image" field.</summary>
    public const int BaseImageFieldNumber = 13;
    /// <summary>
    /// A note describing a base image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis BaseImage {
      get { return noteTypeCase_ == NoteTypeOneofCase.BaseImage ? (global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.BaseImage;
      }
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 14;
    /// <summary>
    /// A note describing a package hosted by various package managers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package Package {
      get { return noteTypeCase_ == NoteTypeOneofCase.Package ? (global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.Package;
      }
    }

    /// <summary>Field number for the "deployable" field.</summary>
    public const int DeployableFieldNumber = 17;
    /// <summary>
    /// A note describing something that can be deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable Deployable {
      get { return noteTypeCase_ == NoteTypeOneofCase.Deployable ? (global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.Deployable;
      }
    }

    /// <summary>Field number for the "discovery" field.</summary>
    public const int DiscoveryFieldNumber = 18;
    /// <summary>
    /// A note describing a provider/analysis type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery Discovery {
      get { return noteTypeCase_ == NoteTypeOneofCase.Discovery ? (global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.Discovery;
      }
    }

    /// <summary>Field number for the "attestation_authority" field.</summary>
    public const int AttestationAuthorityFieldNumber = 19;
    /// <summary>
    /// A note describing an attestation role.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority AttestationAuthority {
      get { return noteTypeCase_ == NoteTypeOneofCase.AttestationAuthority ? (global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority) noteType_ : null; }
      set {
        noteType_ = value;
        noteTypeCase_ = value == null ? NoteTypeOneofCase.None : NoteTypeOneofCase.AttestationAuthority;
      }
    }

    /// <summary>Field number for the "related_url" field.</summary>
    public const int RelatedUrlFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl> _repeated_relatedUrl_codec
        = pb::FieldCodec.ForMessage(58, global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl> relatedUrl_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl>();
    /// <summary>
    /// URLs associated with this note
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.RelatedUrl> RelatedUrl {
      get { return relatedUrl_; }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expirationTime_;
    /// <summary>
    /// Time of expiration for this note, null if note does not expire.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time this note was created. This field can be used as a
    /// filter in list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. The time this note was last updated. This field can be used as
    /// a filter in list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    private object noteType_;
    /// <summary>Enum of possible cases for the "note_type" oneof.</summary>
    public enum NoteTypeOneofCase {
      None = 0,
      VulnerabilityType = 6,
      BuildType = 8,
      BaseImage = 13,
      Package = 14,
      Deployable = 17,
      Discovery = 18,
      AttestationAuthority = 19,
    }
    private NoteTypeOneofCase noteTypeCase_ = NoteTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoteTypeOneofCase NoteTypeCase {
      get { return noteTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNoteType() {
      noteTypeCase_ = NoteTypeOneofCase.None;
      noteType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Note);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Note other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ShortDescription != other.ShortDescription) return false;
      if (LongDescription != other.LongDescription) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(VulnerabilityType, other.VulnerabilityType)) return false;
      if (!object.Equals(BuildType, other.BuildType)) return false;
      if (!object.Equals(BaseImage, other.BaseImage)) return false;
      if (!object.Equals(Package, other.Package)) return false;
      if (!object.Equals(Deployable, other.Deployable)) return false;
      if (!object.Equals(Discovery, other.Discovery)) return false;
      if (!object.Equals(AttestationAuthority, other.AttestationAuthority)) return false;
      if(!relatedUrl_.Equals(other.relatedUrl_)) return false;
      if (!object.Equals(ExpirationTime, other.ExpirationTime)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (NoteTypeCase != other.NoteTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ShortDescription.Length != 0) hash ^= ShortDescription.GetHashCode();
      if (LongDescription.Length != 0) hash ^= LongDescription.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.VulnerabilityType) hash ^= VulnerabilityType.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.BuildType) hash ^= BuildType.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.BaseImage) hash ^= BaseImage.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.Package) hash ^= Package.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.Deployable) hash ^= Deployable.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.Discovery) hash ^= Discovery.GetHashCode();
      if (noteTypeCase_ == NoteTypeOneofCase.AttestationAuthority) hash ^= AttestationAuthority.GetHashCode();
      hash ^= relatedUrl_.GetHashCode();
      if (expirationTime_ != null) hash ^= ExpirationTime.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      hash ^= (int) noteTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ShortDescription.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ShortDescription);
      }
      if (LongDescription.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LongDescription);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.VulnerabilityType) {
        output.WriteRawTag(50);
        output.WriteMessage(VulnerabilityType);
      }
      relatedUrl_.WriteTo(output, _repeated_relatedUrl_codec);
      if (noteTypeCase_ == NoteTypeOneofCase.BuildType) {
        output.WriteRawTag(66);
        output.WriteMessage(BuildType);
      }
      if (Kind != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Kind);
      }
      if (expirationTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExpirationTime);
      }
      if (createTime_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(UpdateTime);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.BaseImage) {
        output.WriteRawTag(106);
        output.WriteMessage(BaseImage);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.Package) {
        output.WriteRawTag(114);
        output.WriteMessage(Package);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.Deployable) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Deployable);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.Discovery) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Discovery);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.AttestationAuthority) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(AttestationAuthority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ShortDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortDescription);
      }
      if (LongDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LongDescription);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.VulnerabilityType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VulnerabilityType);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.BuildType) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildType);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.BaseImage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseImage);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.Package) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.Deployable) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Deployable);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.Discovery) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Discovery);
      }
      if (noteTypeCase_ == NoteTypeOneofCase.AttestationAuthority) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AttestationAuthority);
      }
      size += relatedUrl_.CalculateSize(_repeated_relatedUrl_codec);
      if (expirationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpirationTime);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Note other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ShortDescription.Length != 0) {
        ShortDescription = other.ShortDescription;
      }
      if (other.LongDescription.Length != 0) {
        LongDescription = other.LongDescription;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      relatedUrl_.Add(other.relatedUrl_);
      if (other.expirationTime_ != null) {
        if (expirationTime_ == null) {
          ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpirationTime.MergeFrom(other.ExpirationTime);
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      switch (other.NoteTypeCase) {
        case NoteTypeOneofCase.VulnerabilityType:
          if (VulnerabilityType == null) {
            VulnerabilityType = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType();
          }
          VulnerabilityType.MergeFrom(other.VulnerabilityType);
          break;
        case NoteTypeOneofCase.BuildType:
          if (BuildType == null) {
            BuildType = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType();
          }
          BuildType.MergeFrom(other.BuildType);
          break;
        case NoteTypeOneofCase.BaseImage:
          if (BaseImage == null) {
            BaseImage = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis();
          }
          BaseImage.MergeFrom(other.BaseImage);
          break;
        case NoteTypeOneofCase.Package:
          if (Package == null) {
            Package = new global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package();
          }
          Package.MergeFrom(other.Package);
          break;
        case NoteTypeOneofCase.Deployable:
          if (Deployable == null) {
            Deployable = new global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable();
          }
          Deployable.MergeFrom(other.Deployable);
          break;
        case NoteTypeOneofCase.Discovery:
          if (Discovery == null) {
            Discovery = new global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery();
          }
          Discovery.MergeFrom(other.Discovery);
          break;
        case NoteTypeOneofCase.AttestationAuthority:
          if (AttestationAuthority == null) {
            AttestationAuthority = new global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority();
          }
          AttestationAuthority.MergeFrom(other.AttestationAuthority);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            ShortDescription = input.ReadString();
            break;
          }
          case 34: {
            LongDescription = input.ReadString();
            break;
          }
          case 50: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType();
            if (noteTypeCase_ == NoteTypeOneofCase.VulnerabilityType) {
              subBuilder.MergeFrom(VulnerabilityType);
            }
            input.ReadMessage(subBuilder);
            VulnerabilityType = subBuilder;
            break;
          }
          case 58: {
            relatedUrl_.AddEntriesFrom(input, _repeated_relatedUrl_codec);
            break;
          }
          case 66: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildType();
            if (noteTypeCase_ == NoteTypeOneofCase.BuildType) {
              subBuilder.MergeFrom(BuildType);
            }
            input.ReadMessage(subBuilder);
            BuildType = subBuilder;
            break;
          }
          case 72: {
            Kind = (global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind) input.ReadEnum();
            break;
          }
          case 82: {
            if (expirationTime_ == null) {
              ExpirationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpirationTime);
            break;
          }
          case 90: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 98: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 106: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis();
            if (noteTypeCase_ == NoteTypeOneofCase.BaseImage) {
              subBuilder.MergeFrom(BaseImage);
            }
            input.ReadMessage(subBuilder);
            BaseImage = subBuilder;
            break;
          }
          case 114: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.PackageManager.Types.Package();
            if (noteTypeCase_ == NoteTypeOneofCase.Package) {
              subBuilder.MergeFrom(Package);
            }
            input.ReadMessage(subBuilder);
            Package = subBuilder;
            break;
          }
          case 138: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable();
            if (noteTypeCase_ == NoteTypeOneofCase.Deployable) {
              subBuilder.MergeFrom(Deployable);
            }
            input.ReadMessage(subBuilder);
            Deployable = subBuilder;
            break;
          }
          case 146: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery();
            if (noteTypeCase_ == NoteTypeOneofCase.Discovery) {
              subBuilder.MergeFrom(Discovery);
            }
            input.ReadMessage(subBuilder);
            Discovery = subBuilder;
            break;
          }
          case 154: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority();
            if (noteTypeCase_ == NoteTypeOneofCase.AttestationAuthority) {
              subBuilder.MergeFrom(AttestationAuthority);
            }
            input.ReadMessage(subBuilder);
            AttestationAuthority = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Note message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// This must be 1:1 with members of our oneofs, it can be used for filtering
      /// Note and Occurrence on their kind.
      /// </summary>
      public enum Kind {
        /// <summary>
        /// Unknown
        /// </summary>
        [pbr::OriginalName("KIND_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The note and occurrence represent a package vulnerability.
        /// </summary>
        [pbr::OriginalName("PACKAGE_VULNERABILITY")] PackageVulnerability = 2,
        /// <summary>
        /// The note and occurrence assert build provenance.
        /// </summary>
        [pbr::OriginalName("BUILD_DETAILS")] BuildDetails = 3,
        /// <summary>
        /// This represents an image basis relationship.
        /// </summary>
        [pbr::OriginalName("IMAGE_BASIS")] ImageBasis = 4,
        /// <summary>
        /// This represents a package installed via a package manager.
        /// </summary>
        [pbr::OriginalName("PACKAGE_MANAGER")] PackageManager = 5,
        /// <summary>
        /// The note and occurrence track deployment events.
        /// </summary>
        [pbr::OriginalName("DEPLOYABLE")] Deployable = 6,
        /// <summary>
        /// The note and occurrence track the initial discovery status of a resource.
        /// </summary>
        [pbr::OriginalName("DISCOVERY")] Discovery = 7,
        /// <summary>
        /// This represents a logical "role" that can attest to artifacts.
        /// </summary>
        [pbr::OriginalName("ATTESTATION_AUTHORITY")] AttestationAuthority = 8,
      }

      /// <summary>
      /// Metadata for any related URL information
      /// </summary>
      public sealed partial class RelatedUrl : pb::IMessage<RelatedUrl> {
        private static readonly pb::MessageParser<RelatedUrl> _parser = new pb::MessageParser<RelatedUrl>(() => new RelatedUrl());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RelatedUrl> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RelatedUrl() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RelatedUrl(RelatedUrl other) : this() {
          url_ = other.url_;
          label_ = other.label_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RelatedUrl Clone() {
          return new RelatedUrl(this);
        }

        /// <summary>Field number for the "url" field.</summary>
        public const int UrlFieldNumber = 1;
        private string url_ = "";
        /// <summary>
        /// Specific URL to associate with the note
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Url {
          get { return url_; }
          set {
            url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 2;
        private string label_ = "";
        /// <summary>
        /// Label to describe usage of the URL
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RelatedUrl);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RelatedUrl other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Url != other.Url) return false;
          if (Label != other.Label) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Url.Length != 0) hash ^= Url.GetHashCode();
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Url.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Url);
          }
          if (Label.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Label);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Url.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
          }
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RelatedUrl other) {
          if (other == null) {
            return;
          }
          if (other.Url.Length != 0) {
            Url = other.Url;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Url = input.ReadString();
                break;
              }
              case 18: {
                Label = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// An artifact that can be deployed in some runtime.
  /// </summary>
  public sealed partial class Deployable : pb::IMessage<Deployable> {
    private static readonly pb::MessageParser<Deployable> _parser = new pb::MessageParser<Deployable>(() => new Deployable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Deployable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployable(Deployable other) : this() {
      resourceUri_ = other.resourceUri_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deployable Clone() {
      return new Deployable(this);
    }

    /// <summary>Field number for the "resource_uri" field.</summary>
    public const int ResourceUriFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_resourceUri_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> resourceUri_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Resource URI for the artifact being deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ResourceUri {
      get { return resourceUri_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Deployable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Deployable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resourceUri_.Equals(other.resourceUri_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resourceUri_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resourceUri_.WriteTo(output, _repeated_resourceUri_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resourceUri_.CalculateSize(_repeated_resourceUri_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Deployable other) {
      if (other == null) {
        return;
      }
      resourceUri_.Add(other.resourceUri_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resourceUri_.AddEntriesFrom(input, _repeated_resourceUri_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Deployable message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The period during which some deployable was active in a runtime.
      /// </summary>
      public sealed partial class Deployment : pb::IMessage<Deployment> {
        private static readonly pb::MessageParser<Deployment> _parser = new pb::MessageParser<Deployment>(() => new Deployment());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Deployment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Deployment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Deployment(Deployment other) : this() {
          userEmail_ = other.userEmail_;
          deployTime_ = other.deployTime_ != null ? other.deployTime_.Clone() : null;
          undeployTime_ = other.undeployTime_ != null ? other.undeployTime_.Clone() : null;
          config_ = other.config_;
          address_ = other.address_;
          resourceUri_ = other.resourceUri_.Clone();
          platform_ = other.platform_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Deployment Clone() {
          return new Deployment(this);
        }

        /// <summary>Field number for the "user_email" field.</summary>
        public const int UserEmailFieldNumber = 1;
        private string userEmail_ = "";
        /// <summary>
        /// Identity of the user that triggered this deployment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string UserEmail {
          get { return userEmail_; }
          set {
            userEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "deploy_time" field.</summary>
        public const int DeployTimeFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Timestamp deployTime_;
        /// <summary>
        /// Beginning of the lifetime of this deployment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp DeployTime {
          get { return deployTime_; }
          set {
            deployTime_ = value;
          }
        }

        /// <summary>Field number for the "undeploy_time" field.</summary>
        public const int UndeployTimeFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Timestamp undeployTime_;
        /// <summary>
        /// End of the lifetime of this deployment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp UndeployTime {
          get { return undeployTime_; }
          set {
            undeployTime_ = value;
          }
        }

        /// <summary>Field number for the "config" field.</summary>
        public const int ConfigFieldNumber = 8;
        private string config_ = "";
        /// <summary>
        /// Configuration used to create this deployment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Config {
          get { return config_; }
          set {
            config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 5;
        private string address_ = "";
        /// <summary>
        /// Address of the runtime element hosting this deployment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "resource_uri" field.</summary>
        public const int ResourceUriFieldNumber = 6;
        private static readonly pb::FieldCodec<string> _repeated_resourceUri_codec
            = pb::FieldCodec.ForString(50);
        private readonly pbc::RepeatedField<string> resourceUri_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Output only. Resource URI for the artifact being deployed taken from the
        /// deployable field with the same name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> ResourceUri {
          get { return resourceUri_; }
        }

        /// <summary>Field number for the "platform" field.</summary>
        public const int PlatformFieldNumber = 7;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment.Types.Platform platform_ = 0;
        /// <summary>
        /// Platform hosting this deployment.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment.Types.Platform Platform {
          get { return platform_; }
          set {
            platform_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Deployment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Deployment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserEmail != other.UserEmail) return false;
          if (!object.Equals(DeployTime, other.DeployTime)) return false;
          if (!object.Equals(UndeployTime, other.UndeployTime)) return false;
          if (Config != other.Config) return false;
          if (Address != other.Address) return false;
          if(!resourceUri_.Equals(other.resourceUri_)) return false;
          if (Platform != other.Platform) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (UserEmail.Length != 0) hash ^= UserEmail.GetHashCode();
          if (deployTime_ != null) hash ^= DeployTime.GetHashCode();
          if (undeployTime_ != null) hash ^= UndeployTime.GetHashCode();
          if (Config.Length != 0) hash ^= Config.GetHashCode();
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          hash ^= resourceUri_.GetHashCode();
          if (Platform != 0) hash ^= Platform.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (UserEmail.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserEmail);
          }
          if (deployTime_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DeployTime);
          }
          if (undeployTime_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(UndeployTime);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Address);
          }
          resourceUri_.WriteTo(output, _repeated_resourceUri_codec);
          if (Platform != 0) {
            output.WriteRawTag(56);
            output.WriteEnum((int) Platform);
          }
          if (Config.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Config);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (UserEmail.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserEmail);
          }
          if (deployTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeployTime);
          }
          if (undeployTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UndeployTime);
          }
          if (Config.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Config);
          }
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
          }
          size += resourceUri_.CalculateSize(_repeated_resourceUri_codec);
          if (Platform != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Platform);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Deployment other) {
          if (other == null) {
            return;
          }
          if (other.UserEmail.Length != 0) {
            UserEmail = other.UserEmail;
          }
          if (other.deployTime_ != null) {
            if (deployTime_ == null) {
              DeployTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            DeployTime.MergeFrom(other.DeployTime);
          }
          if (other.undeployTime_ != null) {
            if (undeployTime_ == null) {
              UndeployTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            UndeployTime.MergeFrom(other.UndeployTime);
          }
          if (other.Config.Length != 0) {
            Config = other.Config;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          resourceUri_.Add(other.resourceUri_);
          if (other.Platform != 0) {
            Platform = other.Platform;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserEmail = input.ReadString();
                break;
              }
              case 18: {
                if (deployTime_ == null) {
                  DeployTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(DeployTime);
                break;
              }
              case 26: {
                if (undeployTime_ == null) {
                  UndeployTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(UndeployTime);
                break;
              }
              case 42: {
                Address = input.ReadString();
                break;
              }
              case 50: {
                resourceUri_.AddEntriesFrom(input, _repeated_resourceUri_codec);
                break;
              }
              case 56: {
                Platform = (global::Google.Devtools.Containeranalysis.V1Alpha1.Deployable.Types.Deployment.Types.Platform) input.ReadEnum();
                break;
              }
              case 66: {
                Config = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Deployment message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Types of platforms.
          /// </summary>
          public enum Platform {
            /// <summary>
            /// Unknown
            /// </summary>
            [pbr::OriginalName("PLATFORM_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Google Container Engine
            /// </summary>
            [pbr::OriginalName("GKE")] Gke = 1,
            /// <summary>
            /// Google App Engine: Flexible Environment
            /// </summary>
            [pbr::OriginalName("FLEX")] Flex = 2,
            /// <summary>
            /// Custom user-defined platform
            /// </summary>
            [pbr::OriginalName("CUSTOM")] Custom = 3,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// A note that indicates a type of analysis a provider would perform. This note
  /// exists in a provider's project. A `Discovery` occurrence is created in a
  /// consumer's project at the start of analysis. The occurrence's operation will
  /// indicate the status of the analysis. Absence of an occurrence linked to this
  /// note for a resource indicates that analysis hasn't started.
  /// </summary>
  public sealed partial class Discovery : pb::IMessage<Discovery> {
    private static readonly pb::MessageParser<Discovery> _parser = new pb::MessageParser<Discovery>(() => new Discovery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Discovery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Discovery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Discovery(Discovery other) : this() {
      analysisKind_ = other.analysisKind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Discovery Clone() {
      return new Discovery(this);
    }

    /// <summary>Field number for the "analysis_kind" field.</summary>
    public const int AnalysisKindFieldNumber = 1;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind analysisKind_ = 0;
    /// <summary>
    /// The kind of analysis that is handled by this discovery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind AnalysisKind {
      get { return analysisKind_; }
      set {
        analysisKind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Discovery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Discovery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AnalysisKind != other.AnalysisKind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnalysisKind != 0) hash ^= AnalysisKind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AnalysisKind != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) AnalysisKind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnalysisKind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AnalysisKind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Discovery other) {
      if (other == null) {
        return;
      }
      if (other.AnalysisKind != 0) {
        AnalysisKind = other.AnalysisKind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AnalysisKind = (global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Discovery message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Provides information about the scan status of a discovered resource.
      /// </summary>
      public sealed partial class Discovered : pb::IMessage<Discovered> {
        private static readonly pb::MessageParser<Discovered> _parser = new pb::MessageParser<Discovered>(() => new Discovered());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Discovered> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Discovered() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Discovered(Discovered other) : this() {
          operation_ = other.operation_ != null ? other.operation_.Clone() : null;
          analysisStatus_ = other.analysisStatus_;
          analysisStatusError_ = other.analysisStatusError_ != null ? other.analysisStatusError_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Discovered Clone() {
          return new Discovered(this);
        }

        /// <summary>Field number for the "operation" field.</summary>
        public const int OperationFieldNumber = 1;
        private global::Google.LongRunning.Operation operation_;
        /// <summary>
        /// Output only. An operation that indicates the status of the current scan.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.LongRunning.Operation Operation {
          get { return operation_; }
          set {
            operation_ = value;
          }
        }

        /// <summary>Field number for the "analysis_status" field.</summary>
        public const int AnalysisStatusFieldNumber = 5;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered.Types.AnalysisStatus analysisStatus_ = 0;
        /// <summary>
        /// The status of discovery for the resource.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered.Types.AnalysisStatus AnalysisStatus {
          get { return analysisStatus_; }
          set {
            analysisStatus_ = value;
          }
        }

        /// <summary>Field number for the "analysis_status_error" field.</summary>
        public const int AnalysisStatusErrorFieldNumber = 6;
        private global::Google.Rpc.Status analysisStatusError_;
        /// <summary>
        /// When an error is encountered this will contain a LocalizedMessage under
        /// details to show to the user. The LocalizedMessage output only and
        /// populated by the API.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Rpc.Status AnalysisStatusError {
          get { return analysisStatusError_; }
          set {
            analysisStatusError_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Discovered);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Discovered other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Operation, other.Operation)) return false;
          if (AnalysisStatus != other.AnalysisStatus) return false;
          if (!object.Equals(AnalysisStatusError, other.AnalysisStatusError)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (operation_ != null) hash ^= Operation.GetHashCode();
          if (AnalysisStatus != 0) hash ^= AnalysisStatus.GetHashCode();
          if (analysisStatusError_ != null) hash ^= AnalysisStatusError.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (operation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Operation);
          }
          if (AnalysisStatus != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) AnalysisStatus);
          }
          if (analysisStatusError_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(AnalysisStatusError);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (operation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
          }
          if (AnalysisStatus != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AnalysisStatus);
          }
          if (analysisStatusError_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AnalysisStatusError);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Discovered other) {
          if (other == null) {
            return;
          }
          if (other.operation_ != null) {
            if (operation_ == null) {
              Operation = new global::Google.LongRunning.Operation();
            }
            Operation.MergeFrom(other.Operation);
          }
          if (other.AnalysisStatus != 0) {
            AnalysisStatus = other.AnalysisStatus;
          }
          if (other.analysisStatusError_ != null) {
            if (analysisStatusError_ == null) {
              AnalysisStatusError = new global::Google.Rpc.Status();
            }
            AnalysisStatusError.MergeFrom(other.AnalysisStatusError);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (operation_ == null) {
                  Operation = new global::Google.LongRunning.Operation();
                }
                input.ReadMessage(Operation);
                break;
              }
              case 40: {
                AnalysisStatus = (global::Google.Devtools.Containeranalysis.V1Alpha1.Discovery.Types.Discovered.Types.AnalysisStatus) input.ReadEnum();
                break;
              }
              case 50: {
                if (analysisStatusError_ == null) {
                  AnalysisStatusError = new global::Google.Rpc.Status();
                }
                input.ReadMessage(AnalysisStatusError);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Discovered message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Analysis status for a resource.
          /// </summary>
          public enum AnalysisStatus {
            /// <summary>
            /// Unknown
            /// </summary>
            [pbr::OriginalName("ANALYSIS_STATUS_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// Resource is known but no action has been taken yet.
            /// </summary>
            [pbr::OriginalName("PENDING")] Pending = 1,
            /// <summary>
            /// Resource is being analyzed.
            /// </summary>
            [pbr::OriginalName("SCANNING")] Scanning = 2,
            /// <summary>
            /// Analysis has finished successfully.
            /// </summary>
            [pbr::OriginalName("FINISHED_SUCCESS")] FinishedSuccess = 3,
            /// <summary>
            /// Analysis has finished unsuccessfully, the analysis itself is in a bad
            /// state.
            /// </summary>
            [pbr::OriginalName("FINISHED_FAILED")] FinishedFailed = 4,
            /// <summary>
            /// Analysis will not happen, the resource is not supported.
            /// </summary>
            [pbr::OriginalName("UNSUPPORTED_RESOURCE")] UnsupportedResource = 5,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  /// <summary>
  /// Note holding the version of the provider's builder and the signature of
  /// the provenance message in linked BuildDetails.
  /// </summary>
  public sealed partial class BuildType : pb::IMessage<BuildType> {
    private static readonly pb::MessageParser<BuildType> _parser = new pb::MessageParser<BuildType>(() => new BuildType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildType(BuildType other) : this() {
      builderVersion_ = other.builderVersion_;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildType Clone() {
      return new BuildType(this);
    }

    /// <summary>Field number for the "builder_version" field.</summary>
    public const int BuilderVersionFieldNumber = 1;
    private string builderVersion_ = "";
    /// <summary>
    /// Version of the builder which produced this Note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuilderVersion {
      get { return builderVersion_; }
      set {
        builderVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature signature_;
    /// <summary>
    /// Signature of the build in Occurrences pointing to the Note containing this
    /// `BuilderDetails`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuilderVersion != other.BuilderVersion) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuilderVersion.Length != 0) hash ^= BuilderVersion.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuilderVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BuilderVersion);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuilderVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuilderVersion);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildType other) {
      if (other == null) {
        return;
      }
      if (other.BuilderVersion.Length != 0) {
        BuilderVersion = other.BuilderVersion;
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          Signature = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature();
        }
        Signature.MergeFrom(other.Signature);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BuilderVersion = input.ReadString();
            break;
          }
          case 18: {
            if (signature_ == null) {
              Signature = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature();
            }
            input.ReadMessage(Signature);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message encapsulating the signature of the verified build.
  /// </summary>
  public sealed partial class BuildSignature : pb::IMessage<BuildSignature> {
    private static readonly pb::MessageParser<BuildSignature> _parser = new pb::MessageParser<BuildSignature>(() => new BuildSignature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildSignature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildSignature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildSignature(BuildSignature other) : this() {
      publicKey_ = other.publicKey_;
      signature_ = other.signature_;
      keyId_ = other.keyId_;
      keyType_ = other.keyType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildSignature Clone() {
      return new BuildSignature(this);
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 1;
    private string publicKey_ = "";
    /// <summary>
    /// Public key of the builder which can be used to verify that the related
    /// findings are valid and unchanged. If `key_type` is empty, this defaults
    /// to PEM encoded public keys.
    ///
    /// This field may be empty if `key_id` references an external key.
    ///
    /// For Cloud Build based signatures, this is a PEM encoded public
    /// key. To verify the Cloud Build signature, place the contents of
    /// this field into a file (public.pem). The signature field is base64-decoded
    /// into its binary representation in signature.bin, and the provenance bytes
    /// from `BuildDetails` are base64-decoded into a binary representation in
    /// signed.bin. OpenSSL can then verify the signature:
    /// `openssl sha256 -verify public.pem -signature signature.bin signed.bin`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    /// <summary>
    /// Signature of the related `BuildProvenance`, encoded in a base64 string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key_id" field.</summary>
    public const int KeyIdFieldNumber = 3;
    private string keyId_ = "";
    /// <summary>
    /// An Id for the key used to sign. This could be either an Id for the key
    /// stored in `public_key` (such as the Id or fingerprint for a PGP key, or the
    /// CN for a cert), or a reference to an external key (such as a reference to a
    /// key in Cloud Key Management Service).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyId {
      get { return keyId_; }
      set {
        keyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key_type" field.</summary>
    public const int KeyTypeFieldNumber = 4;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature.Types.KeyType keyType_ = 0;
    /// <summary>
    /// The type of the key, either stored in `public_key` or referenced in
    /// `key_id`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature.Types.KeyType KeyType {
      get { return keyType_; }
      set {
        keyType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildSignature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildSignature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PublicKey != other.PublicKey) return false;
      if (Signature != other.Signature) return false;
      if (KeyId != other.KeyId) return false;
      if (KeyType != other.KeyType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (KeyId.Length != 0) hash ^= KeyId.GetHashCode();
      if (KeyType != 0) hash ^= KeyType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PublicKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PublicKey);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KeyId);
      }
      if (KeyType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) KeyType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicKey);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (KeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyId);
      }
      if (KeyType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeyType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildSignature other) {
      if (other == null) {
        return;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.KeyId.Length != 0) {
        KeyId = other.KeyId;
      }
      if (other.KeyType != 0) {
        KeyType = other.KeyType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PublicKey = input.ReadString();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 26: {
            KeyId = input.ReadString();
            break;
          }
          case 32: {
            KeyType = (global::Google.Devtools.Containeranalysis.V1Alpha1.BuildSignature.Types.KeyType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BuildSignature message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Public key formats
      /// </summary>
      public enum KeyType {
        /// <summary>
        /// `KeyType` is not set.
        /// </summary>
        [pbr::OriginalName("KEY_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// `PGP ASCII Armored` public key.
        /// </summary>
        [pbr::OriginalName("PGP_ASCII_ARMORED")] PgpAsciiArmored = 1,
        /// <summary>
        /// `PKIX PEM` public key.
        /// </summary>
        [pbr::OriginalName("PKIX_PEM")] PkixPem = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// An attestation wrapper with a PGP-compatible signature.
  /// This message only supports `ATTACHED` signatures, where the payload that is
  /// signed is included alongside the signature itself in the same file.
  /// </summary>
  public sealed partial class PgpSignedAttestation : pb::IMessage<PgpSignedAttestation> {
    private static readonly pb::MessageParser<PgpSignedAttestation> _parser = new pb::MessageParser<PgpSignedAttestation>(() => new PgpSignedAttestation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PgpSignedAttestation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PgpSignedAttestation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PgpSignedAttestation(PgpSignedAttestation other) : this() {
      signature_ = other.signature_;
      contentType_ = other.contentType_;
      switch (other.KeyIdCase) {
        case KeyIdOneofCase.PgpKeyId:
          PgpKeyId = other.PgpKeyId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PgpSignedAttestation Clone() {
      return new PgpSignedAttestation(this);
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 1;
    private string signature_ = "";
    /// <summary>
    /// The raw content of the signature, as output by GNU Privacy Guard (GPG) or
    /// equivalent.  Since this message only supports attached signatures, the
    /// payload that was signed must be attached. While the signature format
    /// supported is dependent on the verification implementation, currently only
    /// ASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than
    /// `--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor
    /// --output=signature.gpg payload.json` will create the signature content
    /// expected in this field in `signature.gpg` for the `payload.json`
    /// attestation payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content_type" field.</summary>
    public const int ContentTypeFieldNumber = 3;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation.Types.ContentType contentType_ = 0;
    /// <summary>
    /// Type (for example schema) of the attestation payload that was signed.
    /// The verifier must ensure that the provided type is one that the verifier
    /// supports, and that the attestation payload is a valid instantiation of that
    /// type (for example by validating a JSON schema).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation.Types.ContentType ContentType {
      get { return contentType_; }
      set {
        contentType_ = value;
      }
    }

    /// <summary>Field number for the "pgp_key_id" field.</summary>
    public const int PgpKeyIdFieldNumber = 2;
    /// <summary>
    /// The cryptographic fingerprint of the key used to generate the signature,
    /// as output by, e.g. `gpg --list-keys`. This should be the version 4, full
    /// 160-bit fingerprint, expressed as a 40 character hexadecimal string. See
    /// https://tools.ietf.org/html/rfc4880#section-12.2 for details.
    /// Implementations may choose to acknowledge "LONG", "SHORT", or other
    /// abbreviated key IDs, but only the full fingerprint is guaranteed to work.
    /// In gpg, the full fingerprint can be retrieved from the `fpr` field
    /// returned when calling --list-keys with --with-colons.  For example:
    /// ```
    /// gpg --with-colons --with-fingerprint --force-v4-certs \
    ///     --list-keys attester@example.com
    /// tru::1:1513631572:0:3:1:5
    /// pub:...&lt;SNIP>...
    /// fpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:
    /// ```
    /// Above, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PgpKeyId {
      get { return keyIdCase_ == KeyIdOneofCase.PgpKeyId ? (string) keyId_ : ""; }
      set {
        keyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        keyIdCase_ = KeyIdOneofCase.PgpKeyId;
      }
    }

    private object keyId_;
    /// <summary>Enum of possible cases for the "key_id" oneof.</summary>
    public enum KeyIdOneofCase {
      None = 0,
      PgpKeyId = 2,
    }
    private KeyIdOneofCase keyIdCase_ = KeyIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyIdOneofCase KeyIdCase {
      get { return keyIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyId() {
      keyIdCase_ = KeyIdOneofCase.None;
      keyId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PgpSignedAttestation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PgpSignedAttestation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Signature != other.Signature) return false;
      if (ContentType != other.ContentType) return false;
      if (PgpKeyId != other.PgpKeyId) return false;
      if (KeyIdCase != other.KeyIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (ContentType != 0) hash ^= ContentType.GetHashCode();
      if (keyIdCase_ == KeyIdOneofCase.PgpKeyId) hash ^= PgpKeyId.GetHashCode();
      hash ^= (int) keyIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Signature.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Signature);
      }
      if (keyIdCase_ == KeyIdOneofCase.PgpKeyId) {
        output.WriteRawTag(18);
        output.WriteString(PgpKeyId);
      }
      if (ContentType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ContentType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (ContentType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentType);
      }
      if (keyIdCase_ == KeyIdOneofCase.PgpKeyId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PgpKeyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PgpSignedAttestation other) {
      if (other == null) {
        return;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.ContentType != 0) {
        ContentType = other.ContentType;
      }
      switch (other.KeyIdCase) {
        case KeyIdOneofCase.PgpKeyId:
          PgpKeyId = other.PgpKeyId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Signature = input.ReadString();
            break;
          }
          case 18: {
            PgpKeyId = input.ReadString();
            break;
          }
          case 24: {
            ContentType = (global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation.Types.ContentType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PgpSignedAttestation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Type (for example schema) of the attestation payload that was signed.
      /// </summary>
      public enum ContentType {
        /// <summary>
        /// `ContentType` is not set.
        /// </summary>
        [pbr::OriginalName("CONTENT_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Atomic format attestation signature. See
        /// https://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md
        /// The payload extracted from `signature` is a JSON blob conforming to the
        /// linked schema.
        /// </summary>
        [pbr::OriginalName("SIMPLE_SIGNING_JSON")] SimpleSigningJson = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Note kind that represents a logical attestation "role" or "authority".  For
  /// example, an organization might have one `AttestationAuthority` for "QA" and
  /// one for "build".  This Note is intended to act strictly as a grouping
  /// mechanism for the attached Occurrences (Attestations).  This grouping
  /// mechanism also provides a security boundary, since IAM ACLs gate the ability
  /// for a principle to attach an Occurrence to a given Note.  It also provides a
  /// single point of lookup to find all attached Attestation Occurrences, even if
  /// they don't all live in the same project.
  /// </summary>
  public sealed partial class AttestationAuthority : pb::IMessage<AttestationAuthority> {
    private static readonly pb::MessageParser<AttestationAuthority> _parser = new pb::MessageParser<AttestationAuthority>(() => new AttestationAuthority());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttestationAuthority> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttestationAuthority() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttestationAuthority(AttestationAuthority other) : this() {
      hint_ = other.hint_ != null ? other.hint_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttestationAuthority Clone() {
      return new AttestationAuthority(this);
    }

    /// <summary>Field number for the "hint" field.</summary>
    public const int HintFieldNumber = 1;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.AttestationAuthorityHint hint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.AttestationAuthorityHint Hint {
      get { return hint_; }
      set {
        hint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttestationAuthority);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttestationAuthority other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hint, other.Hint)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hint_ != null) hash ^= Hint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttestationAuthority other) {
      if (other == null) {
        return;
      }
      if (other.hint_ != null) {
        if (hint_ == null) {
          Hint = new global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.AttestationAuthorityHint();
        }
        Hint.MergeFrom(other.Hint);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hint_ == null) {
              Hint = new global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Types.AttestationAuthorityHint();
            }
            input.ReadMessage(Hint);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AttestationAuthority message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// This submessage provides human-readable hints about the purpose of the
      /// AttestationAuthority.  Because the name of a Note acts as its resource
      /// reference, it is important to disambiguate the canonical name of the Note
      /// (which might be a UUID for security purposes) from "readable" names more
      /// suitable for debug output.  Note that these hints should NOT be used to
      /// look up AttestationAuthorities in security sensitive contexts, such as when
      /// looking up Attestations to verify.
      /// </summary>
      public sealed partial class AttestationAuthorityHint : pb::IMessage<AttestationAuthorityHint> {
        private static readonly pb::MessageParser<AttestationAuthorityHint> _parser = new pb::MessageParser<AttestationAuthorityHint>(() => new AttestationAuthorityHint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AttestationAuthorityHint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttestationAuthorityHint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttestationAuthorityHint(AttestationAuthorityHint other) : this() {
          humanReadableName_ = other.humanReadableName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AttestationAuthorityHint Clone() {
          return new AttestationAuthorityHint(this);
        }

        /// <summary>Field number for the "human_readable_name" field.</summary>
        public const int HumanReadableNameFieldNumber = 1;
        private string humanReadableName_ = "";
        /// <summary>
        /// The human readable name of this Attestation Authority, for example "qa".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string HumanReadableName {
          get { return humanReadableName_; }
          set {
            humanReadableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AttestationAuthorityHint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AttestationAuthorityHint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (HumanReadableName != other.HumanReadableName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HumanReadableName.Length != 0) hash ^= HumanReadableName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (HumanReadableName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(HumanReadableName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HumanReadableName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(HumanReadableName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AttestationAuthorityHint other) {
          if (other == null) {
            return;
          }
          if (other.HumanReadableName.Length != 0) {
            HumanReadableName = other.HumanReadableName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                HumanReadableName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Occurrence that represents a single "attestation".  The authenticity of an
      /// Attestation can be verified using the attached signature. If the verifier
      /// trusts the public key of the signer, then verifying the signature is
      /// sufficient to establish trust.  In this circumstance, the
      /// AttestationAuthority to which this Attestation is attached is primarily
      /// useful for look-up (how to find this Attestation if you already know the
      /// Authority and artifact to be verified) and intent (which authority was this
      /// attestation intended to sign for).
      /// </summary>
      public sealed partial class Attestation : pb::IMessage<Attestation> {
        private static readonly pb::MessageParser<Attestation> _parser = new pb::MessageParser<Attestation>(() => new Attestation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Attestation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.AttestationAuthority.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attestation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attestation(Attestation other) : this() {
          switch (other.SignatureCase) {
            case SignatureOneofCase.PgpSignedAttestation:
              PgpSignedAttestation = other.PgpSignedAttestation.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Attestation Clone() {
          return new Attestation(this);
        }

        /// <summary>Field number for the "pgp_signed_attestation" field.</summary>
        public const int PgpSignedAttestationFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation PgpSignedAttestation {
          get { return signatureCase_ == SignatureOneofCase.PgpSignedAttestation ? (global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation) signature_ : null; }
          set {
            signature_ = value;
            signatureCase_ = value == null ? SignatureOneofCase.None : SignatureOneofCase.PgpSignedAttestation;
          }
        }

        private object signature_;
        /// <summary>Enum of possible cases for the "signature" oneof.</summary>
        public enum SignatureOneofCase {
          None = 0,
          PgpSignedAttestation = 1,
        }
        private SignatureOneofCase signatureCase_ = SignatureOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SignatureOneofCase SignatureCase {
          get { return signatureCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSignature() {
          signatureCase_ = SignatureOneofCase.None;
          signature_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Attestation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Attestation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PgpSignedAttestation, other.PgpSignedAttestation)) return false;
          if (SignatureCase != other.SignatureCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (signatureCase_ == SignatureOneofCase.PgpSignedAttestation) hash ^= PgpSignedAttestation.GetHashCode();
          hash ^= (int) signatureCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (signatureCase_ == SignatureOneofCase.PgpSignedAttestation) {
            output.WriteRawTag(10);
            output.WriteMessage(PgpSignedAttestation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (signatureCase_ == SignatureOneofCase.PgpSignedAttestation) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PgpSignedAttestation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Attestation other) {
          if (other == null) {
            return;
          }
          switch (other.SignatureCase) {
            case SignatureOneofCase.PgpSignedAttestation:
              if (PgpSignedAttestation == null) {
                PgpSignedAttestation = new global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation();
              }
              PgpSignedAttestation.MergeFrom(other.PgpSignedAttestation);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.PgpSignedAttestation();
                if (signatureCase_ == SignatureOneofCase.PgpSignedAttestation) {
                  subBuilder.MergeFrom(PgpSignedAttestation);
                }
                input.ReadMessage(subBuilder);
                PgpSignedAttestation = subBuilder;
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Message encapsulating build provenance details.
  /// </summary>
  public sealed partial class BuildDetails : pb::IMessage<BuildDetails> {
    private static readonly pb::MessageParser<BuildDetails> _parser = new pb::MessageParser<BuildDetails>(() => new BuildDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildDetails(BuildDetails other) : this() {
      provenance_ = other.provenance_ != null ? other.provenance_.Clone() : null;
      provenanceBytes_ = other.provenanceBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildDetails Clone() {
      return new BuildDetails(this);
    }

    /// <summary>Field number for the "provenance" field.</summary>
    public const int ProvenanceFieldNumber = 1;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.BuildProvenance provenance_;
    /// <summary>
    /// The actual provenance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.BuildProvenance Provenance {
      get { return provenance_; }
      set {
        provenance_ = value;
      }
    }

    /// <summary>Field number for the "provenance_bytes" field.</summary>
    public const int ProvenanceBytesFieldNumber = 2;
    private string provenanceBytes_ = "";
    /// <summary>
    /// Serialized JSON representation of the provenance, used in generating the
    /// `BuildSignature` in the corresponding Result. After verifying the
    /// signature, `provenance_bytes` can be unmarshalled and compared to the
    /// provenance to confirm that it is unchanged. A base64-encoded string
    /// representation of the provenance bytes is used for the signature in order
    /// to interoperate with openssl which expects this format for signature
    /// verification.
    ///
    /// The serialized form is captured both to avoid ambiguity in how the
    /// provenance is marshalled to json as well to prevent incompatibilities with
    /// future changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProvenanceBytes {
      get { return provenanceBytes_; }
      set {
        provenanceBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Provenance, other.Provenance)) return false;
      if (ProvenanceBytes != other.ProvenanceBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (provenance_ != null) hash ^= Provenance.GetHashCode();
      if (ProvenanceBytes.Length != 0) hash ^= ProvenanceBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (provenance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Provenance);
      }
      if (ProvenanceBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProvenanceBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (provenance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Provenance);
      }
      if (ProvenanceBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProvenanceBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildDetails other) {
      if (other == null) {
        return;
      }
      if (other.provenance_ != null) {
        if (provenance_ == null) {
          Provenance = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildProvenance();
        }
        Provenance.MergeFrom(other.Provenance);
      }
      if (other.ProvenanceBytes.Length != 0) {
        ProvenanceBytes = other.ProvenanceBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (provenance_ == null) {
              Provenance = new global::Google.Devtools.Containeranalysis.V1Alpha1.BuildProvenance();
            }
            input.ReadMessage(Provenance);
            break;
          }
          case 18: {
            ProvenanceBytes = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Indicates various scans and whether they are turned on or off.
  /// </summary>
  public sealed partial class ScanConfig : pb::IMessage<ScanConfig> {
    private static readonly pb::MessageParser<ScanConfig> _parser = new pb::MessageParser<ScanConfig>(() => new ScanConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScanConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScanConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScanConfig(ScanConfig other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScanConfig Clone() {
      return new ScanConfig(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Output only. The name of the ScanConfig in the form
    /// “projects/{project_id}/ScanConfigs/{ScanConfig_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Output only. A human-readable description of what the `ScanConfig` does.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 3;
    private bool enabled_;
    /// <summary>
    /// Indicates whether the Scan is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScanConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScanConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Enabled != false) {
        output.WriteRawTag(24);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScanConfig other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to get a Occurrence.
  /// </summary>
  public sealed partial class GetOccurrenceRequest : pb::IMessage<GetOccurrenceRequest> {
    private static readonly pb::MessageParser<GetOccurrenceRequest> _parser = new pb::MessageParser<GetOccurrenceRequest>(() => new GetOccurrenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOccurrenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOccurrenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOccurrenceRequest(GetOccurrenceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOccurrenceRequest Clone() {
      return new GetOccurrenceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the occurrence of the form
    /// "projects/{project_id}/occurrences/{OCCURRENCE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOccurrenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOccurrenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOccurrenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to list occurrences.
  /// </summary>
  public sealed partial class ListOccurrencesRequest : pb::IMessage<ListOccurrencesRequest> {
    private static readonly pb::MessageParser<ListOccurrencesRequest> _parser = new pb::MessageParser<ListOccurrencesRequest>(() => new ListOccurrencesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOccurrencesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOccurrencesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOccurrencesRequest(ListOccurrencesRequest other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      kind_ = other.kind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOccurrencesRequest Clone() {
      return new ListOccurrencesRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name field contains the project Id. For example:
    /// "projects/{project_id}
    /// @Deprecated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// This contains the project Id for example: projects/{project_id}.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// The filter expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Number of occurrences to return in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Token to provide to skip to a particular spot in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 6;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind kind_ = 0;
    /// <summary>
    /// The kind of occurrences to filter on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOccurrencesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOccurrencesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Kind != other.Kind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      if (Kind != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Kind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOccurrencesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
          case 48: {
            Kind = (global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Types.Kind) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response including listed active occurrences.
  /// </summary>
  public sealed partial class ListOccurrencesResponse : pb::IMessage<ListOccurrencesResponse> {
    private static readonly pb::MessageParser<ListOccurrencesResponse> _parser = new pb::MessageParser<ListOccurrencesResponse>(() => new ListOccurrencesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOccurrencesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOccurrencesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOccurrencesResponse(ListOccurrencesResponse other) : this() {
      occurrences_ = other.occurrences_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOccurrencesResponse Clone() {
      return new ListOccurrencesResponse(this);
    }

    /// <summary>Field number for the "occurrences" field.</summary>
    public const int OccurrencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence> _repeated_occurrences_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence> occurrences_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence>();
    /// <summary>
    /// The occurrences requested.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence> Occurrences {
      get { return occurrences_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// The next pagination token in the list response. It should be used as
    /// `page_token` for the following request. An empty value means no more
    /// results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOccurrencesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOccurrencesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!occurrences_.Equals(other.occurrences_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= occurrences_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      occurrences_.WriteTo(output, _repeated_occurrences_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += occurrences_.CalculateSize(_repeated_occurrences_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOccurrencesResponse other) {
      if (other == null) {
        return;
      }
      occurrences_.Add(other.occurrences_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            occurrences_.AddEntriesFrom(input, _repeated_occurrences_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete a occurrence
  /// </summary>
  public sealed partial class DeleteOccurrenceRequest : pb::IMessage<DeleteOccurrenceRequest> {
    private static readonly pb::MessageParser<DeleteOccurrenceRequest> _parser = new pb::MessageParser<DeleteOccurrenceRequest>(() => new DeleteOccurrenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOccurrenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOccurrenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOccurrenceRequest(DeleteOccurrenceRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOccurrenceRequest Clone() {
      return new DeleteOccurrenceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the occurrence in the form of
    /// "projects/{project_id}/occurrences/{OCCURRENCE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOccurrenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOccurrenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOccurrenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to insert a new occurrence.
  /// </summary>
  public sealed partial class CreateOccurrenceRequest : pb::IMessage<CreateOccurrenceRequest> {
    private static readonly pb::MessageParser<CreateOccurrenceRequest> _parser = new pb::MessageParser<CreateOccurrenceRequest>(() => new CreateOccurrenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOccurrenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOccurrenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOccurrenceRequest(CreateOccurrenceRequest other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      occurrence_ = other.occurrence_ != null ? other.occurrence_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOccurrenceRequest Clone() {
      return new CreateOccurrenceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the project.  Should be of the form "projects/{project_id}".
    /// @Deprecated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 3;
    private string parent_ = "";
    /// <summary>
    /// This field contains the project Id for example: "projects/{project_id}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "occurrence" field.</summary>
    public const int OccurrenceFieldNumber = 2;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence occurrence_;
    /// <summary>
    /// The occurrence to be inserted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence Occurrence {
      get { return occurrence_; }
      set {
        occurrence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOccurrenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOccurrenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (!object.Equals(Occurrence, other.Occurrence)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (occurrence_ != null) hash ^= Occurrence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (occurrence_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Occurrence);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (occurrence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Occurrence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOccurrenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.occurrence_ != null) {
        if (occurrence_ == null) {
          Occurrence = new global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence();
        }
        Occurrence.MergeFrom(other.Occurrence);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (occurrence_ == null) {
              Occurrence = new global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence();
            }
            input.ReadMessage(Occurrence);
            break;
          }
          case 26: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to update an existing occurrence
  /// </summary>
  public sealed partial class UpdateOccurrenceRequest : pb::IMessage<UpdateOccurrenceRequest> {
    private static readonly pb::MessageParser<UpdateOccurrenceRequest> _parser = new pb::MessageParser<UpdateOccurrenceRequest>(() => new UpdateOccurrenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOccurrenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOccurrenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOccurrenceRequest(UpdateOccurrenceRequest other) : this() {
      name_ = other.name_;
      occurrence_ = other.occurrence_ != null ? other.occurrence_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOccurrenceRequest Clone() {
      return new UpdateOccurrenceRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the occurrence.
    /// Should be of the form "projects/{project_id}/occurrences/{OCCURRENCE_ID}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "occurrence" field.</summary>
    public const int OccurrenceFieldNumber = 2;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence occurrence_;
    /// <summary>
    /// The updated occurrence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence Occurrence {
      get { return occurrence_; }
      set {
        occurrence_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// The fields to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOccurrenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOccurrenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Occurrence, other.Occurrence)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (occurrence_ != null) hash ^= Occurrence.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (occurrence_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Occurrence);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (occurrence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Occurrence);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOccurrenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.occurrence_ != null) {
        if (occurrence_ == null) {
          Occurrence = new global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence();
        }
        Occurrence.MergeFrom(other.Occurrence);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (occurrence_ == null) {
              Occurrence = new global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence();
            }
            input.ReadMessage(Occurrence);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to get a Note.
  /// </summary>
  public sealed partial class GetNoteRequest : pb::IMessage<GetNoteRequest> {
    private static readonly pb::MessageParser<GetNoteRequest> _parser = new pb::MessageParser<GetNoteRequest>(() => new GetNoteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNoteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNoteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNoteRequest(GetNoteRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNoteRequest Clone() {
      return new GetNoteRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the note in the form of
    /// "providers/{provider_id}/notes/{NOTE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNoteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNoteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNoteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to get the note to which this occurrence is attached.
  /// </summary>
  public sealed partial class GetOccurrenceNoteRequest : pb::IMessage<GetOccurrenceNoteRequest> {
    private static readonly pb::MessageParser<GetOccurrenceNoteRequest> _parser = new pb::MessageParser<GetOccurrenceNoteRequest>(() => new GetOccurrenceNoteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOccurrenceNoteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOccurrenceNoteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOccurrenceNoteRequest(GetOccurrenceNoteRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOccurrenceNoteRequest Clone() {
      return new GetOccurrenceNoteRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the occurrence in the form
    /// "projects/{project_id}/occurrences/{OCCURRENCE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOccurrenceNoteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOccurrenceNoteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOccurrenceNoteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to list notes.
  /// </summary>
  public sealed partial class ListNotesRequest : pb::IMessage<ListNotesRequest> {
    private static readonly pb::MessageParser<ListNotesRequest> _parser = new pb::MessageParser<ListNotesRequest>(() => new ListNotesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotesRequest(ListNotesRequest other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotesRequest Clone() {
      return new ListNotesRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name field will contain the project Id for example:
    /// "providers/{provider_id}
    /// @Deprecated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// This field contains the project Id for example: "projects/{PROJECT_ID}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// The filter expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Number of notes to return in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Token to provide to skip to a particular spot in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response including listed notes.
  /// </summary>
  public sealed partial class ListNotesResponse : pb::IMessage<ListNotesResponse> {
    private static readonly pb::MessageParser<ListNotesResponse> _parser = new pb::MessageParser<ListNotesResponse>(() => new ListNotesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotesResponse(ListNotesResponse other) : this() {
      notes_ = other.notes_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotesResponse Clone() {
      return new ListNotesResponse(this);
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Note> _repeated_notes_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Containeranalysis.V1Alpha1.Note.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Note> notes_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Note>();
    /// <summary>
    /// The occurrences requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Note> Notes {
      get { return notes_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// The next pagination token in the list response. It should be used as
    /// page_token for the following request. An empty value means no more result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notes_.Equals(other.notes_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notes_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      notes_.WriteTo(output, _repeated_notes_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notes_.CalculateSize(_repeated_notes_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotesResponse other) {
      if (other == null) {
        return;
      }
      notes_.Add(other.notes_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notes_.AddEntriesFrom(input, _repeated_notes_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete a note
  /// </summary>
  public sealed partial class DeleteNoteRequest : pb::IMessage<DeleteNoteRequest> {
    private static readonly pb::MessageParser<DeleteNoteRequest> _parser = new pb::MessageParser<DeleteNoteRequest>(() => new DeleteNoteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNoteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNoteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNoteRequest(DeleteNoteRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNoteRequest Clone() {
      return new DeleteNoteRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the note in the form of
    /// "providers/{provider_id}/notes/{NOTE_ID}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNoteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNoteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNoteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to insert a new note
  /// </summary>
  public sealed partial class CreateNoteRequest : pb::IMessage<CreateNoteRequest> {
    private static readonly pb::MessageParser<CreateNoteRequest> _parser = new pb::MessageParser<CreateNoteRequest>(() => new CreateNoteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNoteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNoteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNoteRequest(CreateNoteRequest other) : this() {
      name_ = other.name_;
      parent_ = other.parent_;
      noteId_ = other.noteId_;
      note_ = other.note_ != null ? other.note_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNoteRequest Clone() {
      return new CreateNoteRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the project.
    /// Should be of the form "providers/{provider_id}".
    /// @Deprecated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// This field contains the project Id for example:
    /// "projects/{project_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "note_id" field.</summary>
    public const int NoteIdFieldNumber = 2;
    private string noteId_ = "";
    /// <summary>
    /// The ID to use for this note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoteId {
      get { return noteId_; }
      set {
        noteId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 3;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Note note_;
    /// <summary>
    /// The Note to be inserted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNoteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNoteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Parent != other.Parent) return false;
      if (NoteId != other.NoteId) return false;
      if (!object.Equals(Note, other.Note)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (NoteId.Length != 0) hash ^= NoteId.GetHashCode();
      if (note_ != null) hash ^= Note.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (NoteId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NoteId);
      }
      if (note_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Note);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (NoteId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoteId);
      }
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNoteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.NoteId.Length != 0) {
        NoteId = other.NoteId;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Google.Devtools.Containeranalysis.V1Alpha1.Note();
        }
        Note.MergeFrom(other.Note);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            NoteId = input.ReadString();
            break;
          }
          case 26: {
            if (note_ == null) {
              Note = new global::Google.Devtools.Containeranalysis.V1Alpha1.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to update an existing note
  /// </summary>
  public sealed partial class UpdateNoteRequest : pb::IMessage<UpdateNoteRequest> {
    private static readonly pb::MessageParser<UpdateNoteRequest> _parser = new pb::MessageParser<UpdateNoteRequest>(() => new UpdateNoteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNoteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNoteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNoteRequest(UpdateNoteRequest other) : this() {
      name_ = other.name_;
      note_ = other.note_ != null ? other.note_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNoteRequest Clone() {
      return new UpdateNoteRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the note.
    /// Should be of the form "projects/{provider_id}/notes/{note_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 2;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Note note_;
    /// <summary>
    /// The updated note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// The fields to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNoteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNoteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Note, other.Note)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (note_ != null) hash ^= Note.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (note_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Note);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNoteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Google.Devtools.Containeranalysis.V1Alpha1.Note();
        }
        Note.MergeFrom(other.Note);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (note_ == null) {
              Note = new global::Google.Devtools.Containeranalysis.V1Alpha1.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to list occurrences.
  /// </summary>
  public sealed partial class ListNoteOccurrencesRequest : pb::IMessage<ListNoteOccurrencesRequest> {
    private static readonly pb::MessageParser<ListNoteOccurrencesRequest> _parser = new pb::MessageParser<ListNoteOccurrencesRequest>(() => new ListNoteOccurrencesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNoteOccurrencesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNoteOccurrencesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNoteOccurrencesRequest(ListNoteOccurrencesRequest other) : this() {
      name_ = other.name_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNoteOccurrencesRequest Clone() {
      return new ListNoteOccurrencesRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name field will contain the note name for example:
    ///   "provider/{provider_id}/notes/{note_id}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// The filter expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Number of notes to return in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Token to provide to skip to a particular spot in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNoteOccurrencesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNoteOccurrencesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNoteOccurrencesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response including listed occurrences for a note.
  /// </summary>
  public sealed partial class ListNoteOccurrencesResponse : pb::IMessage<ListNoteOccurrencesResponse> {
    private static readonly pb::MessageParser<ListNoteOccurrencesResponse> _parser = new pb::MessageParser<ListNoteOccurrencesResponse>(() => new ListNoteOccurrencesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNoteOccurrencesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNoteOccurrencesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNoteOccurrencesResponse(ListNoteOccurrencesResponse other) : this() {
      occurrences_ = other.occurrences_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNoteOccurrencesResponse Clone() {
      return new ListNoteOccurrencesResponse(this);
    }

    /// <summary>Field number for the "occurrences" field.</summary>
    public const int OccurrencesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence> _repeated_occurrences_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence> occurrences_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence>();
    /// <summary>
    /// The occurrences attached to the specified note.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Occurrence> Occurrences {
      get { return occurrences_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Token to receive the next page of notes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNoteOccurrencesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNoteOccurrencesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!occurrences_.Equals(other.occurrences_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= occurrences_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      occurrences_.WriteTo(output, _repeated_occurrences_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += occurrences_.CalculateSize(_repeated_occurrences_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNoteOccurrencesResponse other) {
      if (other == null) {
        return;
      }
      occurrences_.Add(other.occurrences_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            occurrences_.AddEntriesFrom(input, _repeated_occurrences_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request for creating an operation
  /// </summary>
  public sealed partial class CreateOperationRequest : pb::IMessage<CreateOperationRequest> {
    private static readonly pb::MessageParser<CreateOperationRequest> _parser = new pb::MessageParser<CreateOperationRequest>(() => new CreateOperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOperationRequest(CreateOperationRequest other) : this() {
      parent_ = other.parent_;
      operationId_ = other.operationId_;
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOperationRequest Clone() {
      return new CreateOperationRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The project Id that this operation should be created under.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 2;
    private string operationId_ = "";
    /// <summary>
    /// The ID to use for this operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 3;
    private global::Google.LongRunning.Operation operation_;
    /// <summary>
    /// The operation to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.LongRunning.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (OperationId != other.OperationId) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (OperationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OperationId);
      }
      if (operation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Google.LongRunning.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            OperationId = input.ReadString();
            break;
          }
          case 26: {
            if (operation_ == null) {
              Operation = new global::Google.LongRunning.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request for updating an existing operation
  /// </summary>
  public sealed partial class UpdateOperationRequest : pb::IMessage<UpdateOperationRequest> {
    private static readonly pb::MessageParser<UpdateOperationRequest> _parser = new pb::MessageParser<UpdateOperationRequest>(() => new UpdateOperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOperationRequest(UpdateOperationRequest other) : this() {
      name_ = other.name_;
      operation_ = other.operation_ != null ? other.operation_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOperationRequest Clone() {
      return new UpdateOperationRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the Operation.
    /// Should be of the form "projects/{provider_id}/operations/{operation_id}".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 3;
    private global::Google.LongRunning.Operation operation_;
    /// <summary>
    /// The operation to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.LongRunning.Operation Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Operation, other.Operation)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (operation_ != null) hash ^= Operation.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (operation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Operation);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (operation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Operation);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.operation_ != null) {
        if (operation_ == null) {
          Operation = new global::Google.LongRunning.Operation();
        }
        Operation.MergeFrom(other.Operation);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (operation_ == null) {
              Operation = new global::Google.LongRunning.Operation();
            }
            input.ReadMessage(Operation);
            break;
          }
          case 34: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Metadata for all operations used and required for all operations
  /// that created by Container Analysis Providers
  /// </summary>
  public sealed partial class OperationMetadata : pb::IMessage<OperationMetadata> {
    private static readonly pb::MessageParser<OperationMetadata> _parser = new pb::MessageParser<OperationMetadata>(() => new OperationMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata(OperationMetadata other) : this() {
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationMetadata Clone() {
      return new OperationMetadata(this);
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. The time this operation was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// Output only. The time that this operation was marked completed or failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (createTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationMetadata other) {
      if (other == null) {
        return;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to get the vulnz summary for some set of vulnerability Occurrences.
  /// </summary>
  public sealed partial class GetVulnzOccurrencesSummaryRequest : pb::IMessage<GetVulnzOccurrencesSummaryRequest> {
    private static readonly pb::MessageParser<GetVulnzOccurrencesSummaryRequest> _parser = new pb::MessageParser<GetVulnzOccurrencesSummaryRequest>(() => new GetVulnzOccurrencesSummaryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVulnzOccurrencesSummaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVulnzOccurrencesSummaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVulnzOccurrencesSummaryRequest(GetVulnzOccurrencesSummaryRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVulnzOccurrencesSummaryRequest Clone() {
      return new GetVulnzOccurrencesSummaryRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// This contains the project Id for example: projects/{project_id}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// The filter expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVulnzOccurrencesSummaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVulnzOccurrencesSummaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVulnzOccurrencesSummaryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A summary of how many vulnz occurrences there are per severity type.
  /// counts by groups, or if we should have different summary messages
  /// like this.
  /// </summary>
  public sealed partial class GetVulnzOccurrencesSummaryResponse : pb::IMessage<GetVulnzOccurrencesSummaryResponse> {
    private static readonly pb::MessageParser<GetVulnzOccurrencesSummaryResponse> _parser = new pb::MessageParser<GetVulnzOccurrencesSummaryResponse>(() => new GetVulnzOccurrencesSummaryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVulnzOccurrencesSummaryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVulnzOccurrencesSummaryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVulnzOccurrencesSummaryResponse(GetVulnzOccurrencesSummaryResponse other) : this() {
      counts_ = other.counts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVulnzOccurrencesSummaryResponse Clone() {
      return new GetVulnzOccurrencesSummaryResponse(this);
    }

    /// <summary>Field number for the "counts" field.</summary>
    public const int CountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount> _repeated_counts_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount> counts_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount>();
    /// <summary>
    /// A map of how many occurrences were found for each severity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Types.SeverityCount> Counts {
      get { return counts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVulnzOccurrencesSummaryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVulnzOccurrencesSummaryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!counts_.Equals(other.counts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= counts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      counts_.WriteTo(output, _repeated_counts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += counts_.CalculateSize(_repeated_counts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVulnzOccurrencesSummaryResponse other) {
      if (other == null) {
        return;
      }
      counts_.Add(other.counts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            counts_.AddEntriesFrom(input, _repeated_counts_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetVulnzOccurrencesSummaryResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The number of occurrences created for a specific severity.
      /// </summary>
      public sealed partial class SeverityCount : pb::IMessage<SeverityCount> {
        private static readonly pb::MessageParser<SeverityCount> _parser = new pb::MessageParser<SeverityCount>(() => new SeverityCount());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SeverityCount> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.GetVulnzOccurrencesSummaryResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SeverityCount() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SeverityCount(SeverityCount other) : this() {
          severity_ = other.severity_;
          count_ = other.count_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SeverityCount Clone() {
          return new SeverityCount(this);
        }

        /// <summary>Field number for the "severity" field.</summary>
        public const int SeverityFieldNumber = 1;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity severity_ = 0;
        /// <summary>
        /// The severity of the occurrences.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity Severity {
          get { return severity_; }
          set {
            severity_ = value;
          }
        }

        /// <summary>Field number for the "count" field.</summary>
        public const int CountFieldNumber = 2;
        private long count_;
        /// <summary>
        /// The number of occurrences with the severity.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Count {
          get { return count_; }
          set {
            count_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SeverityCount);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SeverityCount other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Severity != other.Severity) return false;
          if (Count != other.Count) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Severity != 0) hash ^= Severity.GetHashCode();
          if (Count != 0L) hash ^= Count.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Severity != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Severity);
          }
          if (Count != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Count);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Severity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
          }
          if (Count != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SeverityCount other) {
          if (other == null) {
            return;
          }
          if (other.Severity != 0) {
            Severity = other.Severity;
          }
          if (other.Count != 0L) {
            Count = other.Count;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Severity = (global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity) input.ReadEnum();
                break;
              }
              case 16: {
                Count = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Request to get a ScanConfig.
  /// </summary>
  public sealed partial class GetScanConfigRequest : pb::IMessage<GetScanConfigRequest> {
    private static readonly pb::MessageParser<GetScanConfigRequest> _parser = new pb::MessageParser<GetScanConfigRequest>(() => new GetScanConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetScanConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScanConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScanConfigRequest(GetScanConfigRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScanConfigRequest Clone() {
      return new GetScanConfigRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the ScanConfig in the form
    /// projects/{project_id}/scan_configs/{ScanConfig_id}
    /// instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetScanConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetScanConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetScanConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to list the available scan configurations.
  /// </summary>
  public sealed partial class ListScanConfigsRequest : pb::IMessage<ListScanConfigsRequest> {
    private static readonly pb::MessageParser<ListScanConfigsRequest> _parser = new pb::MessageParser<ListScanConfigsRequest>(() => new ListScanConfigsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListScanConfigsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScanConfigsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScanConfigsRequest(ListScanConfigsRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScanConfigsRequest Clone() {
      return new ListScanConfigsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// This containers the project Id i.e.: projects/{project_id}
    /// instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// The filter expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// The number of items to return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// The page token to use for the next request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListScanConfigsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListScanConfigsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListScanConfigsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A list of ScanConfigs for the project.
  /// </summary>
  public sealed partial class ListScanConfigsResponse : pb::IMessage<ListScanConfigsResponse> {
    private static readonly pb::MessageParser<ListScanConfigsResponse> _parser = new pb::MessageParser<ListScanConfigsResponse>(() => new ListScanConfigsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListScanConfigsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScanConfigsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScanConfigsResponse(ListScanConfigsResponse other) : this() {
      scanConfigs_ = other.scanConfigs_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScanConfigsResponse Clone() {
      return new ListScanConfigsResponse(this);
    }

    /// <summary>Field number for the "scan_configs" field.</summary>
    public const int ScanConfigsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig> _repeated_scanConfigs_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig> scanConfigs_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig>();
    /// <summary>
    /// The set of scan configs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig> ScanConfigs {
      get { return scanConfigs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// A page token to pass in order to get more scans.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListScanConfigsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListScanConfigsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!scanConfigs_.Equals(other.scanConfigs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= scanConfigs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      scanConfigs_.WriteTo(output, _repeated_scanConfigs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += scanConfigs_.CalculateSize(_repeated_scanConfigs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListScanConfigsResponse other) {
      if (other == null) {
        return;
      }
      scanConfigs_.Add(other.scanConfigs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            scanConfigs_.AddEntriesFrom(input, _repeated_scanConfigs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A request to update a ScanConfig.
  /// </summary>
  public sealed partial class UpdateScanConfigRequest : pb::IMessage<UpdateScanConfigRequest> {
    private static readonly pb::MessageParser<UpdateScanConfigRequest> _parser = new pb::MessageParser<UpdateScanConfigRequest>(() => new UpdateScanConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateScanConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ContaineranalysisReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateScanConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateScanConfigRequest(UpdateScanConfigRequest other) : this() {
      name_ = other.name_;
      scanConfig_ = other.scanConfig_ != null ? other.scanConfig_.Clone() : null;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateScanConfigRequest Clone() {
      return new UpdateScanConfigRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The scan config to update of the form
    /// projects/{project_id}/scan_configs/{ScanConfig_id}
    /// instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scan_config" field.</summary>
    public const int ScanConfigFieldNumber = 2;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig scanConfig_;
    /// <summary>
    /// The new scan configuration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig ScanConfig {
      get { return scanConfig_; }
      set {
        scanConfig_ = value;
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateScanConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateScanConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(ScanConfig, other.ScanConfig)) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (scanConfig_ != null) hash ^= ScanConfig.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (scanConfig_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScanConfig);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (scanConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScanConfig);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateScanConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.scanConfig_ != null) {
        if (scanConfig_ == null) {
          ScanConfig = new global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig();
        }
        ScanConfig.MergeFrom(other.ScanConfig);
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (scanConfig_ == null) {
              ScanConfig = new global::Google.Devtools.Containeranalysis.V1Alpha1.ScanConfig();
            }
            input.ReadMessage(ScanConfig);
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
