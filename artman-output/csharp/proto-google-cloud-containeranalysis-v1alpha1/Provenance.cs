// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1alpha1/provenance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Containeranalysis.V1Alpha1 {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1alpha1/provenance.proto</summary>
  public static partial class ProvenanceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1alpha1/provenance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProvenanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjtnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEv",
            "cHJvdmVuYW5jZS5wcm90bxIqZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFu",
            "YWx5c2lzLnYxYWxwaGExGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3Rv",
            "Gj9nb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEv",
            "c291cmNlX2NvbnRleHQucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8ilgUKD0J1aWxkUHJvdmVuYW5jZRIKCgJpZBgBIAEoCRISCgpw",
            "cm9qZWN0X2lkGAIgASgJEkUKCGNvbW1hbmRzGAUgAygLMjMuZ29vZ2xlLmRl",
            "dnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkNvbW1hbmQSTQoP",
            "YnVpbHRfYXJ0aWZhY3RzGAYgAygLMjQuZ29vZ2xlLmRldnRvb2xzLmNvbnRh",
            "aW5lcmFuYWx5c2lzLnYxYWxwaGExLkFydGlmYWN0Ei8KC2NyZWF0ZV90aW1l",
            "GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgpzdGFydF90",
            "aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgtmaW5p",
            "c2hfdGltZRgJIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDwoH",
            "Y3JlYXRvchgLIAEoCRITCgtsb2dzX2J1Y2tldBgNIAEoCRJNChFzb3VyY2Vf",
            "cHJvdmVuYW5jZRgOIAEoCzIyLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMS5Tb3VyY2USEgoKdHJpZ2dlcl9pZBgPIAEoCRJk",
            "Cg1idWlsZF9vcHRpb25zGBAgAygLMk0uZ29vZ2xlLmRldnRvb2xzLmNvbnRh",
            "aW5lcmFuYWx5c2lzLnYxYWxwaGExLkJ1aWxkUHJvdmVuYW5jZS5CdWlsZE9w",
            "dGlvbnNFbnRyeRIXCg9idWlsZGVyX3ZlcnNpb24YESABKAkaMwoRQnVpbGRP",
            "cHRpb25zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASL6",
            "BAoGU291cmNlElMKDnN0b3JhZ2Vfc291cmNlGAEgASgLMjkuZ29vZ2xlLmRl",
            "dnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLlN0b3JhZ2VTb3Vy",
            "Y2VIABJNCgtyZXBvX3NvdXJjZRgCIAEoCzI2Lmdvb2dsZS5kZXZ0b29scy5j",
            "b250YWluZXJhbmFseXNpcy52MWFscGhhMS5SZXBvU291cmNlSAASWgoXYXJ0",
            "aWZhY3Rfc3RvcmFnZV9zb3VyY2UYBCABKAsyOS5nb29nbGUuZGV2dG9vbHMu",
            "Y29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuU3RvcmFnZVNvdXJjZRJXCgtm",
            "aWxlX2hhc2hlcxgDIAMoCzJCLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMS5Tb3VyY2UuRmlsZUhhc2hlc0VudHJ5EkoKB2Nv",
            "bnRleHQYByABKAsyOS5nb29nbGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlz",
            "aXMudjFhbHBoYTEuU291cmNlQ29udGV4dBJWChNhZGRpdGlvbmFsX2NvbnRl",
            "eHRzGAggAygLMjkuZ29vZ2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lz",
            "LnYxYWxwaGExLlNvdXJjZUNvbnRleHQaaQoPRmlsZUhhc2hlc0VudHJ5EgsK",
            "A2tleRgBIAEoCRJFCgV2YWx1ZRgCIAEoCzI2Lmdvb2dsZS5kZXZ0b29scy5j",
            "b250YWluZXJhbmFseXNpcy52MWFscGhhMS5GaWxlSGFzaGVzOgI4AUIICgZz",
            "b3VyY2UiUQoKRmlsZUhhc2hlcxJDCglmaWxlX2hhc2gYASADKAsyMC5nb29n",
            "bGUuZGV2dG9vbHMuY29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuSGFzaCKA",
            "AQoESGFzaBJHCgR0eXBlGAEgASgOMjkuZ29vZ2xlLmRldnRvb2xzLmNvbnRh",
            "aW5lcmFuYWx5c2lzLnYxYWxwaGExLkhhc2guSGFzaFR5cGUSDQoFdmFsdWUY",
            "AiABKAwiIAoISGFzaFR5cGUSCAoETk9ORRAAEgoKBlNIQTI1NhABIkMKDVN0",
            "b3JhZ2VTb3VyY2USDgoGYnVja2V0GAEgASgJEg4KBm9iamVjdBgCIAEoCRIS",
            "CgpnZW5lcmF0aW9uGAMgASgDIoABCgpSZXBvU291cmNlEhIKCnByb2plY3Rf",
            "aWQYASABKAkSEQoJcmVwb19uYW1lGAIgASgJEhUKC2JyYW5jaF9uYW1lGAMg",
            "ASgJSAASEgoIdGFnX25hbWUYBCABKAlIABIUCgpjb21taXRfc2hhGAUgASgJ",
            "SABCCgoIcmV2aXNpb24iXQoHQ29tbWFuZBIMCgRuYW1lGAEgASgJEgsKA2Vu",
            "dhgCIAMoCRIMCgRhcmdzGAMgAygJEgsKA2RpchgEIAEoCRIKCgJpZBgFIAEo",
            "CRIQCgh3YWl0X2ZvchgGIAMoCSJFCghBcnRpZmFjdBIMCgRuYW1lGAEgASgJ",
            "EhAKCGNoZWNrc3VtGAIgASgJEgoKAmlkGAMgASgJEg0KBW5hbWVzGAQgAygJ",
            "QowBCiVjb20uZ29vZ2xlLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExUAFa",
            "W2dvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvZGV2dG9v",
            "bHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTE7Y29udGFpbmVyYW5hbHlz",
            "aXOiAgNHQ0FiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContextReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.BuildProvenance), global::Google.Devtools.Containeranalysis.V1Alpha1.BuildProvenance.Parser, new[]{ "Id", "ProjectId", "Commands", "BuiltArtifacts", "CreateTime", "StartTime", "FinishTime", "Creator", "LogsBucket", "SourceProvenance", "TriggerId", "BuildOptions", "BuilderVersion" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Source), global::Google.Devtools.Containeranalysis.V1Alpha1.Source.Parser, new[]{ "StorageSource", "RepoSource", "ArtifactStorageSource", "FileHashes", "Context", "AdditionalContexts" }, new[]{ "Source" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes), global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes.Parser, new[]{ "FileHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Hash), global::Google.Devtools.Containeranalysis.V1Alpha1.Hash.Parser, new[]{ "Type", "Value" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Hash.Types.HashType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource), global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource.Parser, new[]{ "Bucket", "Object", "Generation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource), global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource.Parser, new[]{ "ProjectId", "RepoName", "BranchName", "TagName", "CommitSha" }, new[]{ "Revision" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Command), global::Google.Devtools.Containeranalysis.V1Alpha1.Command.Parser, new[]{ "Name", "Env", "Args", "Dir", "Id", "WaitFor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact), global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact.Parser, new[]{ "Name", "Checksum", "Id", "Names" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Provenance of a build. Contains all information needed to verify the full
  /// details about the build from source to completion.
  /// </summary>
  public sealed partial class BuildProvenance : pb::IMessage<BuildProvenance> {
    private static readonly pb::MessageParser<BuildProvenance> _parser = new pb::MessageParser<BuildProvenance>(() => new BuildProvenance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildProvenance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildProvenance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildProvenance(BuildProvenance other) : this() {
      id_ = other.id_;
      projectId_ = other.projectId_;
      commands_ = other.commands_.Clone();
      builtArtifacts_ = other.builtArtifacts_.Clone();
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      finishTime_ = other.finishTime_ != null ? other.finishTime_.Clone() : null;
      creator_ = other.creator_;
      logsBucket_ = other.logsBucket_;
      sourceProvenance_ = other.sourceProvenance_ != null ? other.sourceProvenance_.Clone() : null;
      triggerId_ = other.triggerId_;
      buildOptions_ = other.buildOptions_.Clone();
      builderVersion_ = other.builderVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildProvenance Clone() {
      return new BuildProvenance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Unique identifier of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 2;
    private string projectId_ = "";
    /// <summary>
    /// ID of the project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Command> _repeated_commands_codec
        = pb::FieldCodec.ForMessage(42, global::Google.Devtools.Containeranalysis.V1Alpha1.Command.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Command> commands_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Command>();
    /// <summary>
    /// Commands requested by the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Command> Commands {
      get { return commands_; }
    }

    /// <summary>Field number for the "built_artifacts" field.</summary>
    public const int BuiltArtifactsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact> _repeated_builtArtifacts_codec
        = pb::FieldCodec.ForMessage(50, global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact> builtArtifacts_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact>();
    /// <summary>
    /// Output of the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Artifact> BuiltArtifacts {
      get { return builtArtifacts_; }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Time at which the build was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// Time at which execution of the build was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "finish_time" field.</summary>
    public const int FinishTimeFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finishTime_;
    /// <summary>
    /// Time at which execution of the build was finished.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    /// <summary>Field number for the "creator" field.</summary>
    public const int CreatorFieldNumber = 11;
    private string creator_ = "";
    /// <summary>
    /// E-mail address of the user who initiated this build. Note that this was the
    /// user's e-mail address at the time the build was initiated; this address may
    /// not represent the same end-user for all time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Creator {
      get { return creator_; }
      set {
        creator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logs_bucket" field.</summary>
    public const int LogsBucketFieldNumber = 13;
    private string logsBucket_ = "";
    /// <summary>
    /// Google Cloud Storage bucket where logs were written.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogsBucket {
      get { return logsBucket_; }
      set {
        logsBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_provenance" field.</summary>
    public const int SourceProvenanceFieldNumber = 14;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Source sourceProvenance_;
    /// <summary>
    /// Details of the Source input to the build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Source SourceProvenance {
      get { return sourceProvenance_; }
      set {
        sourceProvenance_ = value;
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 15;
    private string triggerId_ = "";
    /// <summary>
    /// Trigger identifier if the build was triggered automatically; empty if not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "build_options" field.</summary>
    public const int BuildOptionsFieldNumber = 16;
    private static readonly pbc::MapField<string, string>.Codec _map_buildOptions_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 130);
    private readonly pbc::MapField<string, string> buildOptions_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Special options applied to this build. This is a catch-all field where
    /// build providers can enter any desired additional details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> BuildOptions {
      get { return buildOptions_; }
    }

    /// <summary>Field number for the "builder_version" field.</summary>
    public const int BuilderVersionFieldNumber = 17;
    private string builderVersion_ = "";
    /// <summary>
    /// Version string of the builder at the time this build was executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuilderVersion {
      get { return builderVersion_; }
      set {
        builderVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildProvenance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildProvenance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ProjectId != other.ProjectId) return false;
      if(!commands_.Equals(other.commands_)) return false;
      if(!builtArtifacts_.Equals(other.builtArtifacts_)) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      if (Creator != other.Creator) return false;
      if (LogsBucket != other.LogsBucket) return false;
      if (!object.Equals(SourceProvenance, other.SourceProvenance)) return false;
      if (TriggerId != other.TriggerId) return false;
      if (!BuildOptions.Equals(other.BuildOptions)) return false;
      if (BuilderVersion != other.BuilderVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      hash ^= commands_.GetHashCode();
      hash ^= builtArtifacts_.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      if (Creator.Length != 0) hash ^= Creator.GetHashCode();
      if (LogsBucket.Length != 0) hash ^= LogsBucket.GetHashCode();
      if (sourceProvenance_ != null) hash ^= SourceProvenance.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      hash ^= BuildOptions.GetHashCode();
      if (BuilderVersion.Length != 0) hash ^= BuilderVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ProjectId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProjectId);
      }
      commands_.WriteTo(output, _repeated_commands_codec);
      builtArtifacts_.WriteTo(output, _repeated_builtArtifacts_codec);
      if (createTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CreateTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(FinishTime);
      }
      if (Creator.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Creator);
      }
      if (LogsBucket.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(LogsBucket);
      }
      if (sourceProvenance_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(SourceProvenance);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(TriggerId);
      }
      buildOptions_.WriteTo(output, _map_buildOptions_codec);
      if (BuilderVersion.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(BuilderVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      size += commands_.CalculateSize(_repeated_commands_codec);
      size += builtArtifacts_.CalculateSize(_repeated_builtArtifacts_codec);
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      if (Creator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Creator);
      }
      if (LogsBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogsBucket);
      }
      if (sourceProvenance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SourceProvenance);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      size += buildOptions_.CalculateSize(_map_buildOptions_codec);
      if (BuilderVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BuilderVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildProvenance other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      commands_.Add(other.commands_);
      builtArtifacts_.Add(other.builtArtifacts_);
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
      if (other.Creator.Length != 0) {
        Creator = other.Creator;
      }
      if (other.LogsBucket.Length != 0) {
        LogsBucket = other.LogsBucket;
      }
      if (other.sourceProvenance_ != null) {
        if (sourceProvenance_ == null) {
          SourceProvenance = new global::Google.Devtools.Containeranalysis.V1Alpha1.Source();
        }
        SourceProvenance.MergeFrom(other.SourceProvenance);
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
      buildOptions_.Add(other.buildOptions_);
      if (other.BuilderVersion.Length != 0) {
        BuilderVersion = other.BuilderVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ProjectId = input.ReadString();
            break;
          }
          case 42: {
            commands_.AddEntriesFrom(input, _repeated_commands_codec);
            break;
          }
          case 50: {
            builtArtifacts_.AddEntriesFrom(input, _repeated_builtArtifacts_codec);
            break;
          }
          case 58: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 74: {
            if (finishTime_ == null) {
              FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FinishTime);
            break;
          }
          case 90: {
            Creator = input.ReadString();
            break;
          }
          case 106: {
            LogsBucket = input.ReadString();
            break;
          }
          case 114: {
            if (sourceProvenance_ == null) {
              SourceProvenance = new global::Google.Devtools.Containeranalysis.V1Alpha1.Source();
            }
            input.ReadMessage(SourceProvenance);
            break;
          }
          case 122: {
            TriggerId = input.ReadString();
            break;
          }
          case 130: {
            buildOptions_.AddEntriesFrom(input, _map_buildOptions_codec);
            break;
          }
          case 138: {
            BuilderVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Source describes the location of the source used for the build.
  /// </summary>
  public sealed partial class Source : pb::IMessage<Source> {
    private static readonly pb::MessageParser<Source> _parser = new pb::MessageParser<Source>(() => new Source());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Source> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source(Source other) : this() {
      artifactStorageSource_ = other.artifactStorageSource_ != null ? other.artifactStorageSource_.Clone() : null;
      fileHashes_ = other.fileHashes_.Clone();
      context_ = other.context_ != null ? other.context_.Clone() : null;
      additionalContexts_ = other.additionalContexts_.Clone();
      switch (other.SourceCase) {
        case SourceOneofCase.StorageSource:
          StorageSource = other.StorageSource.Clone();
          break;
        case SourceOneofCase.RepoSource:
          RepoSource = other.RepoSource.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Source Clone() {
      return new Source(this);
    }

    /// <summary>Field number for the "storage_source" field.</summary>
    public const int StorageSourceFieldNumber = 1;
    /// <summary>
    /// If provided, get the source from this location in in Google Cloud
    /// Storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource StorageSource {
      get { return sourceCase_ == SourceOneofCase.StorageSource ? (global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.StorageSource;
      }
    }

    /// <summary>Field number for the "repo_source" field.</summary>
    public const int RepoSourceFieldNumber = 2;
    /// <summary>
    /// If provided, get source from this location in a Cloud Repo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource RepoSource {
      get { return sourceCase_ == SourceOneofCase.RepoSource ? (global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.RepoSource;
      }
    }

    /// <summary>Field number for the "artifact_storage_source" field.</summary>
    public const int ArtifactStorageSourceFieldNumber = 4;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource artifactStorageSource_;
    /// <summary>
    /// If provided, the input binary artifacts for the build came from this
    /// location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource ArtifactStorageSource {
      get { return artifactStorageSource_; }
      set {
        artifactStorageSource_ = value;
      }
    }

    /// <summary>Field number for the "file_hashes" field.</summary>
    public const int FileHashesFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes>.Codec _map_fileHashes_codec
        = new pbc::MapField<string, global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes.Parser), 26);
    private readonly pbc::MapField<string, global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes> fileHashes_ = new pbc::MapField<string, global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes>();
    /// <summary>
    /// Hash(es) of the build source, which can be used to verify that the original
    /// source integrity was maintained in the build.
    ///
    /// The keys to this map are file paths used as build source and the values
    /// contain the hash values for those files.
    ///
    /// If the build source came in a single package such as a gzipped tarfile
    /// (.tar.gz), the FileHash will be for the single path to that file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Devtools.Containeranalysis.V1Alpha1.FileHashes> FileHashes {
      get { return fileHashes_; }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 7;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext context_;
    /// <summary>
    /// If provided, the source code used for the build came from this location.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext Context {
      get { return context_; }
      set {
        context_ = value;
      }
    }

    /// <summary>Field number for the "additional_contexts" field.</summary>
    public const int AdditionalContextsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext> _repeated_additionalContexts_codec
        = pb::FieldCodec.ForMessage(66, global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext> additionalContexts_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext>();
    /// <summary>
    /// If provided, some of the source code used for the build may be found in
    /// these locations, in the case where the source repository had multiple
    /// remotes or submodules. This list will not include the context specified in
    /// the context field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext> AdditionalContexts {
      get { return additionalContexts_; }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      StorageSource = 1,
      RepoSource = 2,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Source);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Source other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StorageSource, other.StorageSource)) return false;
      if (!object.Equals(RepoSource, other.RepoSource)) return false;
      if (!object.Equals(ArtifactStorageSource, other.ArtifactStorageSource)) return false;
      if (!FileHashes.Equals(other.FileHashes)) return false;
      if (!object.Equals(Context, other.Context)) return false;
      if(!additionalContexts_.Equals(other.additionalContexts_)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.StorageSource) hash ^= StorageSource.GetHashCode();
      if (sourceCase_ == SourceOneofCase.RepoSource) hash ^= RepoSource.GetHashCode();
      if (artifactStorageSource_ != null) hash ^= ArtifactStorageSource.GetHashCode();
      hash ^= FileHashes.GetHashCode();
      if (context_ != null) hash ^= Context.GetHashCode();
      hash ^= additionalContexts_.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sourceCase_ == SourceOneofCase.StorageSource) {
        output.WriteRawTag(10);
        output.WriteMessage(StorageSource);
      }
      if (sourceCase_ == SourceOneofCase.RepoSource) {
        output.WriteRawTag(18);
        output.WriteMessage(RepoSource);
      }
      fileHashes_.WriteTo(output, _map_fileHashes_codec);
      if (artifactStorageSource_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ArtifactStorageSource);
      }
      if (context_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Context);
      }
      additionalContexts_.WriteTo(output, _repeated_additionalContexts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.StorageSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StorageSource);
      }
      if (sourceCase_ == SourceOneofCase.RepoSource) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RepoSource);
      }
      if (artifactStorageSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArtifactStorageSource);
      }
      size += fileHashes_.CalculateSize(_map_fileHashes_codec);
      if (context_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Context);
      }
      size += additionalContexts_.CalculateSize(_repeated_additionalContexts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Source other) {
      if (other == null) {
        return;
      }
      if (other.artifactStorageSource_ != null) {
        if (artifactStorageSource_ == null) {
          ArtifactStorageSource = new global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource();
        }
        ArtifactStorageSource.MergeFrom(other.ArtifactStorageSource);
      }
      fileHashes_.Add(other.fileHashes_);
      if (other.context_ != null) {
        if (context_ == null) {
          Context = new global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext();
        }
        Context.MergeFrom(other.Context);
      }
      additionalContexts_.Add(other.additionalContexts_);
      switch (other.SourceCase) {
        case SourceOneofCase.StorageSource:
          if (StorageSource == null) {
            StorageSource = new global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource();
          }
          StorageSource.MergeFrom(other.StorageSource);
          break;
        case SourceOneofCase.RepoSource:
          if (RepoSource == null) {
            RepoSource = new global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource();
          }
          RepoSource.MergeFrom(other.RepoSource);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource();
            if (sourceCase_ == SourceOneofCase.StorageSource) {
              subBuilder.MergeFrom(StorageSource);
            }
            input.ReadMessage(subBuilder);
            StorageSource = subBuilder;
            break;
          }
          case 18: {
            global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource subBuilder = new global::Google.Devtools.Containeranalysis.V1Alpha1.RepoSource();
            if (sourceCase_ == SourceOneofCase.RepoSource) {
              subBuilder.MergeFrom(RepoSource);
            }
            input.ReadMessage(subBuilder);
            RepoSource = subBuilder;
            break;
          }
          case 26: {
            fileHashes_.AddEntriesFrom(input, _map_fileHashes_codec);
            break;
          }
          case 34: {
            if (artifactStorageSource_ == null) {
              ArtifactStorageSource = new global::Google.Devtools.Containeranalysis.V1Alpha1.StorageSource();
            }
            input.ReadMessage(ArtifactStorageSource);
            break;
          }
          case 58: {
            if (context_ == null) {
              Context = new global::Google.Devtools.Containeranalysis.V1Alpha1.SourceContext();
            }
            input.ReadMessage(Context);
            break;
          }
          case 66: {
            additionalContexts_.AddEntriesFrom(input, _repeated_additionalContexts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container message for hashes of byte content of files, used in Source
  /// messages to verify integrity of source input to the build.
  /// </summary>
  public sealed partial class FileHashes : pb::IMessage<FileHashes> {
    private static readonly pb::MessageParser<FileHashes> _parser = new pb::MessageParser<FileHashes>(() => new FileHashes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileHashes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes(FileHashes other) : this() {
      fileHash_ = other.fileHash_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileHashes Clone() {
      return new FileHashes(this);
    }

    /// <summary>Field number for the "file_hash" field.</summary>
    public const int FileHashFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.Hash> _repeated_fileHash_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Devtools.Containeranalysis.V1Alpha1.Hash.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Hash> fileHash_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Hash>();
    /// <summary>
    /// Collection of file hashes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.Hash> FileHash {
      get { return fileHash_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileHashes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileHashes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fileHash_.Equals(other.fileHash_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fileHash_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fileHash_.WriteTo(output, _repeated_fileHash_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fileHash_.CalculateSize(_repeated_fileHash_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileHashes other) {
      if (other == null) {
        return;
      }
      fileHash_.Add(other.fileHash_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fileHash_.AddEntriesFrom(input, _repeated_fileHash_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Container message for hash values.
  /// </summary>
  public sealed partial class Hash : pb::IMessage<Hash> {
    private static readonly pb::MessageParser<Hash> _parser = new pb::MessageParser<Hash>(() => new Hash());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Hash> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash(Hash other) : this() {
      type_ = other.type_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Hash Clone() {
      return new Hash(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.Hash.Types.HashType type_ = 0;
    /// <summary>
    /// The type of hash that was performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.Hash.Types.HashType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Hash);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Hash other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Hash other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Google.Devtools.Containeranalysis.V1Alpha1.Hash.Types.HashType) input.ReadEnum();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Hash message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies the hash algorithm, if any.
      /// </summary>
      public enum HashType {
        /// <summary>
        /// No hash requested.
        /// </summary>
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// A sha256 hash.
        /// </summary>
        [pbr::OriginalName("SHA256")] Sha256 = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// StorageSource describes the location of the source in an archive file in
  /// Google Cloud Storage.
  /// </summary>
  public sealed partial class StorageSource : pb::IMessage<StorageSource> {
    private static readonly pb::MessageParser<StorageSource> _parser = new pb::MessageParser<StorageSource>(() => new StorageSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource(StorageSource other) : this() {
      bucket_ = other.bucket_;
      object_ = other.object_;
      generation_ = other.generation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageSource Clone() {
      return new StorageSource(this);
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 1;
    private string bucket_ = "";
    /// <summary>
    /// Google Cloud Storage bucket containing source (see [Bucket Name
    /// Requirements]
    /// (https://cloud.google.com/storage/docs/bucket-naming#requirements)).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 2;
    private string object_ = "";
    /// <summary>
    /// Google Cloud Storage object containing source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Object {
      get { return object_; }
      set {
        object_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "generation" field.</summary>
    public const int GenerationFieldNumber = 3;
    private long generation_;
    /// <summary>
    /// Google Cloud Storage generation for the object.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Generation {
      get { return generation_; }
      set {
        generation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bucket != other.Bucket) return false;
      if (Object != other.Object) return false;
      if (Generation != other.Generation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (Object.Length != 0) hash ^= Object.GetHashCode();
      if (Generation != 0L) hash ^= Generation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bucket.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Bucket);
      }
      if (Object.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Object);
      }
      if (Generation != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Generation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (Object.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Object);
      }
      if (Generation != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Generation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageSource other) {
      if (other == null) {
        return;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      if (other.Object.Length != 0) {
        Object = other.Object;
      }
      if (other.Generation != 0L) {
        Generation = other.Generation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bucket = input.ReadString();
            break;
          }
          case 18: {
            Object = input.ReadString();
            break;
          }
          case 24: {
            Generation = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RepoSource describes the location of the source in a Google Cloud Source
  /// Repository.
  /// </summary>
  public sealed partial class RepoSource : pb::IMessage<RepoSource> {
    private static readonly pb::MessageParser<RepoSource> _parser = new pb::MessageParser<RepoSource>(() => new RepoSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepoSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource(RepoSource other) : this() {
      projectId_ = other.projectId_;
      repoName_ = other.repoName_;
      switch (other.RevisionCase) {
        case RevisionOneofCase.BranchName:
          BranchName = other.BranchName;
          break;
        case RevisionOneofCase.TagName:
          TagName = other.TagName;
          break;
        case RevisionOneofCase.CommitSha:
          CommitSha = other.CommitSha;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepoSource Clone() {
      return new RepoSource(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// ID of the project that owns the repo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "repo_name" field.</summary>
    public const int RepoNameFieldNumber = 2;
    private string repoName_ = "";
    /// <summary>
    /// Name of the repo.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepoName {
      get { return repoName_; }
      set {
        repoName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "branch_name" field.</summary>
    public const int BranchNameFieldNumber = 3;
    /// <summary>
    /// Name of the branch to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BranchName {
      get { return revisionCase_ == RevisionOneofCase.BranchName ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.BranchName;
      }
    }

    /// <summary>Field number for the "tag_name" field.</summary>
    public const int TagNameFieldNumber = 4;
    /// <summary>
    /// Name of the tag to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagName {
      get { return revisionCase_ == RevisionOneofCase.TagName ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.TagName;
      }
    }

    /// <summary>Field number for the "commit_sha" field.</summary>
    public const int CommitShaFieldNumber = 5;
    /// <summary>
    /// Explicit commit SHA to build.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommitSha {
      get { return revisionCase_ == RevisionOneofCase.CommitSha ? (string) revision_ : ""; }
      set {
        revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        revisionCase_ = RevisionOneofCase.CommitSha;
      }
    }

    private object revision_;
    /// <summary>Enum of possible cases for the "revision" oneof.</summary>
    public enum RevisionOneofCase {
      None = 0,
      BranchName = 3,
      TagName = 4,
      CommitSha = 5,
    }
    private RevisionOneofCase revisionCase_ = RevisionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RevisionOneofCase RevisionCase {
      get { return revisionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRevision() {
      revisionCase_ = RevisionOneofCase.None;
      revision_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepoSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepoSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (RepoName != other.RepoName) return false;
      if (BranchName != other.BranchName) return false;
      if (TagName != other.TagName) return false;
      if (CommitSha != other.CommitSha) return false;
      if (RevisionCase != other.RevisionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (RepoName.Length != 0) hash ^= RepoName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.BranchName) hash ^= BranchName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.TagName) hash ^= TagName.GetHashCode();
      if (revisionCase_ == RevisionOneofCase.CommitSha) hash ^= CommitSha.GetHashCode();
      hash ^= (int) revisionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (RepoName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RepoName);
      }
      if (revisionCase_ == RevisionOneofCase.BranchName) {
        output.WriteRawTag(26);
        output.WriteString(BranchName);
      }
      if (revisionCase_ == RevisionOneofCase.TagName) {
        output.WriteRawTag(34);
        output.WriteString(TagName);
      }
      if (revisionCase_ == RevisionOneofCase.CommitSha) {
        output.WriteRawTag(42);
        output.WriteString(CommitSha);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (RepoName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepoName);
      }
      if (revisionCase_ == RevisionOneofCase.BranchName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BranchName);
      }
      if (revisionCase_ == RevisionOneofCase.TagName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagName);
      }
      if (revisionCase_ == RevisionOneofCase.CommitSha) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommitSha);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepoSource other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.RepoName.Length != 0) {
        RepoName = other.RepoName;
      }
      switch (other.RevisionCase) {
        case RevisionOneofCase.BranchName:
          BranchName = other.BranchName;
          break;
        case RevisionOneofCase.TagName:
          TagName = other.TagName;
          break;
        case RevisionOneofCase.CommitSha:
          CommitSha = other.CommitSha;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            RepoName = input.ReadString();
            break;
          }
          case 26: {
            BranchName = input.ReadString();
            break;
          }
          case 34: {
            TagName = input.ReadString();
            break;
          }
          case 42: {
            CommitSha = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Command describes a step performed as part of the build pipeline.
  /// </summary>
  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      name_ = other.name_;
      env_ = other.env_.Clone();
      args_ = other.args_.Clone();
      dir_ = other.dir_;
      id_ = other.id_;
      waitFor_ = other.waitFor_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the command, as presented on the command line, or if the command is
    /// packaged as a Docker container, as presented to `docker pull`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "env" field.</summary>
    public const int EnvFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_env_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> env_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Environment variables set before running this Command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Env {
      get { return env_; }
    }

    /// <summary>Field number for the "args" field.</summary>
    public const int ArgsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_args_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> args_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Command-line arguments used when executing this Command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Args {
      get { return args_; }
    }

    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 4;
    private string dir_ = "";
    /// <summary>
    /// Working directory (relative to project source root) used when running
    /// this Command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private string id_ = "";
    /// <summary>
    /// Optional unique identifier for this Command, used in wait_for to reference
    /// this Command as a dependency.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wait_for" field.</summary>
    public const int WaitForFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_waitFor_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> waitFor_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The ID(s) of the Command(s) that this Command depends on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WaitFor {
      get { return waitFor_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!env_.Equals(other.env_)) return false;
      if(!args_.Equals(other.args_)) return false;
      if (Dir != other.Dir) return false;
      if (Id != other.Id) return false;
      if(!waitFor_.Equals(other.waitFor_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= env_.GetHashCode();
      hash ^= args_.GetHashCode();
      if (Dir.Length != 0) hash ^= Dir.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= waitFor_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      env_.WriteTo(output, _repeated_env_codec);
      args_.WriteTo(output, _repeated_args_codec);
      if (Dir.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Dir);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      waitFor_.WriteTo(output, _repeated_waitFor_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += env_.CalculateSize(_repeated_env_codec);
      size += args_.CalculateSize(_repeated_args_codec);
      if (Dir.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dir);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += waitFor_.CalculateSize(_repeated_waitFor_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      env_.Add(other.env_);
      args_.Add(other.args_);
      if (other.Dir.Length != 0) {
        Dir = other.Dir;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      waitFor_.Add(other.waitFor_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            env_.AddEntriesFrom(input, _repeated_env_codec);
            break;
          }
          case 26: {
            args_.AddEntriesFrom(input, _repeated_args_codec);
            break;
          }
          case 34: {
            Dir = input.ReadString();
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 50: {
            waitFor_.AddEntriesFrom(input, _repeated_waitFor_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Artifact describes a build product.
  /// </summary>
  public sealed partial class Artifact : pb::IMessage<Artifact> {
    private static readonly pb::MessageParser<Artifact> _parser = new pb::MessageParser<Artifact>(() => new Artifact());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Artifact> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ProvenanceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact(Artifact other) : this() {
      name_ = other.name_;
      checksum_ = other.checksum_;
      id_ = other.id_;
      names_ = other.names_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Artifact Clone() {
      return new Artifact(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the artifact. This may be the path to a binary or jar file, or in
    /// the case of a container build, the name used to push the container image to
    /// Google Container Registry, as presented to `docker push`.
    ///
    /// This field is deprecated in favor of the plural `names` field; it continues
    /// to exist here to allow existing BuildProvenance serialized to json in
    /// google.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes to
    /// deserialize back into proto.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 2;
    private string checksum_ = "";
    /// <summary>
    /// Hash or checksum value of a binary, or Docker Registry 2.0 digest of a
    /// container.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Checksum {
      get { return checksum_; }
      set {
        checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// Artifact ID, if any; for container images, this will be a URL by digest
    /// like gcr.io/projectID/imagename@sha256:123456
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Related artifact names. This may be the path to a binary or jar file, or in
    /// the case of a container build, the name used to push the container image to
    /// Google Container Registry, as presented to `docker push`. Note that a
    /// single Artifact ID can have multiple names, for example if two tags are
    /// applied to one image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Artifact);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Artifact other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Checksum != other.Checksum) return false;
      if (Id != other.Id) return false;
      if(!names_.Equals(other.names_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= names_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Checksum.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Checksum);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      names_.WriteTo(output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Checksum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += names_.CalculateSize(_repeated_names_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Artifact other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Checksum.Length != 0) {
        Checksum = other.Checksum;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      names_.Add(other.names_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Checksum = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
