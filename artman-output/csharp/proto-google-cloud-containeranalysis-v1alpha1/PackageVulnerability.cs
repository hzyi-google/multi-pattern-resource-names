// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Containeranalysis.V1Alpha1 {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto</summary>
  public static partial class PackageVulnerabilityReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1alpha1/package_vulnerability.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PackageVulnerabilityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkZnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEv",
            "cGFja2FnZV92dWxuZXJhYmlsaXR5LnByb3RvEipnb29nbGUuZGV2dG9vbHMu",
            "Y29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEaHGdvb2dsZS9hcGkvYW5ub3Rh",
            "dGlvbnMucHJvdG8i1QwKEVZ1bG5lcmFiaWxpdHlUeXBlEhIKCmN2c3Nfc2Nv",
            "cmUYAiABKAISWAoIc2V2ZXJpdHkYAyABKA4yRi5nb29nbGUuZGV2dG9vbHMu",
            "Y29udGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuVnVsbmVyYWJpbGl0eVR5cGUu",
            "U2V2ZXJpdHkSVQoHZGV0YWlscxgEIAMoCzJELmdvb2dsZS5kZXZ0b29scy5j",
            "b250YWluZXJhbmFseXNpcy52MWFscGhhMS5WdWxuZXJhYmlsaXR5VHlwZS5E",
            "ZXRhaWwazgEKB1ZlcnNpb24SDQoFZXBvY2gYASABKAUSDAoEbmFtZRgCIAEo",
            "CRIQCghyZXZpc2lvbhgDIAEoCRJfCgRraW5kGAUgASgOMlEuZ29vZ2xlLmRl",
            "dnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLlZ1bG5lcmFiaWxp",
            "dHlUeXBlLlZlcnNpb24uVmVyc2lvbktpbmQiMwoLVmVyc2lvbktpbmQSCgoG",
            "Tk9STUFMEAASCwoHTUlOSU1VTRABEgsKB01BWElNVU0QAhq4AwoGRGV0YWls",
            "Eg8KB2NwZV91cmkYASABKAkSDwoHcGFja2FnZRgIIAEoCRJjChRtaW5fYWZm",
            "ZWN0ZWRfdmVyc2lvbhgGIAEoCzJFLmdvb2dsZS5kZXZ0b29scy5jb250YWlu",
            "ZXJhbmFseXNpcy52MWFscGhhMS5WdWxuZXJhYmlsaXR5VHlwZS5WZXJzaW9u",
            "EmMKFG1heF9hZmZlY3RlZF92ZXJzaW9uGAcgASgLMkUuZ29vZ2xlLmRldnRv",
            "b2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLlZ1bG5lcmFiaWxpdHlU",
            "eXBlLlZlcnNpb24SFQoNc2V2ZXJpdHlfbmFtZRgEIAEoCRITCgtkZXNjcmlw",
            "dGlvbhgJIAEoCRJrCg5maXhlZF9sb2NhdGlvbhgFIAEoCzJTLmdvb2dsZS5k",
            "ZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5WdWxuZXJhYmls",
            "aXR5VHlwZS5WdWxuZXJhYmlsaXR5TG9jYXRpb24SFAoMcGFja2FnZV90eXBl",
            "GAogASgJEhMKC2lzX29ic29sZXRlGAsgASgIGvUBChRWdWxuZXJhYmlsaXR5",
            "RGV0YWlscxIMCgR0eXBlGAMgASgJElgKCHNldmVyaXR5GAQgASgOMkYuZ29v",
            "Z2xlLmRldnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLlZ1bG5l",
            "cmFiaWxpdHlUeXBlLlNldmVyaXR5EhIKCmN2c3Nfc2NvcmUYBSABKAISYQoN",
            "cGFja2FnZV9pc3N1ZRgGIAMoCzJKLmdvb2dsZS5kZXZ0b29scy5jb250YWlu",
            "ZXJhbmFseXNpcy52MWFscGhhMS5WdWxuZXJhYmlsaXR5VHlwZS5QYWNrYWdl",
            "SXNzdWUaggIKDFBhY2thZ2VJc3N1ZRJuChFhZmZlY3RlZF9sb2NhdGlvbhgB",
            "IAEoCzJTLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFs",
            "cGhhMS5WdWxuZXJhYmlsaXR5VHlwZS5WdWxuZXJhYmlsaXR5TG9jYXRpb24S",
            "awoOZml4ZWRfbG9jYXRpb24YAiABKAsyUy5nb29nbGUuZGV2dG9vbHMuY29u",
            "dGFpbmVyYW5hbHlzaXMudjFhbHBoYTEuVnVsbmVyYWJpbGl0eVR5cGUuVnVs",
            "bmVyYWJpbGl0eUxvY2F0aW9uEhUKDXNldmVyaXR5X25hbWUYAyABKAkakQEK",
            "FVZ1bG5lcmFiaWxpdHlMb2NhdGlvbhIPCgdjcGVfdXJpGAEgASgJEg8KB3Bh",
            "Y2thZ2UYAiABKAkSVgoHdmVyc2lvbhgEIAEoCzJFLmdvb2dsZS5kZXZ0b29s",
            "cy5jb250YWluZXJhbmFseXNpcy52MWFscGhhMS5WdWxuZXJhYmlsaXR5VHlw",
            "ZS5WZXJzaW9uIl4KCFNldmVyaXR5EhgKFFNFVkVSSVRZX1VOU1BFQ0lGSUVE",
            "EAASCwoHTUlOSU1BTBABEgcKA0xPVxACEgoKBk1FRElVTRADEggKBEhJR0gQ",
            "BBIMCghDUklUSUNBTBAFQowBCiVjb20uZ29vZ2xlLmNvbnRhaW5lcmFuYWx5",
            "c2lzLnYxYWxwaGExUAFaW2dvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dv",
            "b2dsZWFwaXMvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTE7",
            "Y29udGFpbmVyYW5hbHlzaXOiAgNHQ0FiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType), global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Parser, new[]{ "CvssScore", "Severity", "Details" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version), global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version.Parser, new[]{ "Epoch", "Name", "Revision", "Kind" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version.Types.VersionKind) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail), global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail.Parser, new[]{ "CpeUri", "Package", "MinAffectedVersion", "MaxAffectedVersion", "SeverityName", "Description", "FixedLocation", "PackageType", "IsObsolete" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails), global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityDetails.Parser, new[]{ "Type", "Severity", "CvssScore", "PackageIssue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue), global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue.Parser, new[]{ "AffectedLocation", "FixedLocation", "SeverityName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation), global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation.Parser, new[]{ "CpeUri", "Package", "Version" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// VulnerabilityType provides metadata about a security vulnerability.
  /// </summary>
  public sealed partial class VulnerabilityType : pb::IMessage<VulnerabilityType> {
    private static readonly pb::MessageParser<VulnerabilityType> _parser = new pb::MessageParser<VulnerabilityType>(() => new VulnerabilityType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VulnerabilityType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.PackageVulnerabilityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VulnerabilityType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VulnerabilityType(VulnerabilityType other) : this() {
      cvssScore_ = other.cvssScore_;
      severity_ = other.severity_;
      details_ = other.details_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VulnerabilityType Clone() {
      return new VulnerabilityType(this);
    }

    /// <summary>Field number for the "cvss_score" field.</summary>
    public const int CvssScoreFieldNumber = 2;
    private float cvssScore_;
    /// <summary>
    /// The CVSS score for this Vulnerability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CvssScore {
      get { return cvssScore_; }
      set {
        cvssScore_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 3;
    private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity severity_ = 0;
    /// <summary>
    /// Note provider assigned impact of the vulnerability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail> _repeated_details_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail.Parser);
    private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail> details_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail>();
    /// <summary>
    /// All information about the package to specifically identify this
    /// vulnerability. One entry per (version range and cpe_uri) the
    /// package vulnerability has manifested in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Detail> Details {
      get { return details_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VulnerabilityType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VulnerabilityType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CvssScore, other.CvssScore)) return false;
      if (Severity != other.Severity) return false;
      if(!details_.Equals(other.details_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CvssScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CvssScore);
      if (Severity != 0) hash ^= Severity.GetHashCode();
      hash ^= details_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CvssScore != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(CvssScore);
      }
      if (Severity != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Severity);
      }
      details_.WriteTo(output, _repeated_details_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CvssScore != 0F) {
        size += 1 + 4;
      }
      if (Severity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      size += details_.CalculateSize(_repeated_details_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VulnerabilityType other) {
      if (other == null) {
        return;
      }
      if (other.CvssScore != 0F) {
        CvssScore = other.CvssScore;
      }
      if (other.Severity != 0) {
        Severity = other.Severity;
      }
      details_.Add(other.details_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 21: {
            CvssScore = input.ReadFloat();
            break;
          }
          case 24: {
            Severity = (global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity) input.ReadEnum();
            break;
          }
          case 34: {
            details_.AddEntriesFrom(input, _repeated_details_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the VulnerabilityType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Note provider-assigned severity/impact ranking
      /// </summary>
      public enum Severity {
        /// <summary>
        /// Unknown Impact
        /// </summary>
        [pbr::OriginalName("SEVERITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Minimal Impact
        /// </summary>
        [pbr::OriginalName("MINIMAL")] Minimal = 1,
        /// <summary>
        /// Low Impact
        /// </summary>
        [pbr::OriginalName("LOW")] Low = 2,
        /// <summary>
        /// Medium Impact
        /// </summary>
        [pbr::OriginalName("MEDIUM")] Medium = 3,
        /// <summary>
        /// High Impact
        /// </summary>
        [pbr::OriginalName("HIGH")] High = 4,
        /// <summary>
        /// Critical Impact
        /// </summary>
        [pbr::OriginalName("CRITICAL")] Critical = 5,
      }

      /// <summary>
      /// Version contains structured information about the version of the package.
      /// For a discussion of this in Debian/Ubuntu:
      /// http://serverfault.com/questions/604541/debian-packages-version-convention
      /// For a discussion of this in Redhat/Fedora/Centos:
      /// http://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/
      /// </summary>
      public sealed partial class Version : pb::IMessage<Version> {
        private static readonly pb::MessageParser<Version> _parser = new pb::MessageParser<Version>(() => new Version());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Version> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Version() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Version(Version other) : this() {
          epoch_ = other.epoch_;
          name_ = other.name_;
          revision_ = other.revision_;
          kind_ = other.kind_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Version Clone() {
          return new Version(this);
        }

        /// <summary>Field number for the "epoch" field.</summary>
        public const int EpochFieldNumber = 1;
        private int epoch_;
        /// <summary>
        /// Used to correct mistakes in the version numbering scheme.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Epoch {
          get { return epoch_; }
          set {
            epoch_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        /// <summary>
        /// The main part of the version name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "revision" field.</summary>
        public const int RevisionFieldNumber = 3;
        private string revision_ = "";
        /// <summary>
        /// The iteration of the package build from the above version.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Revision {
          get { return revision_; }
          set {
            revision_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "kind" field.</summary>
        public const int KindFieldNumber = 5;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version.Types.VersionKind kind_ = 0;
        /// <summary>
        /// Distinguish between sentinel MIN/MAX versions and normal versions.
        /// If kind is not NORMAL, then the other fields are ignored.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version.Types.VersionKind Kind {
          get { return kind_; }
          set {
            kind_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Version);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Version other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Epoch != other.Epoch) return false;
          if (Name != other.Name) return false;
          if (Revision != other.Revision) return false;
          if (Kind != other.Kind) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Epoch != 0) hash ^= Epoch.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Revision.Length != 0) hash ^= Revision.GetHashCode();
          if (Kind != 0) hash ^= Kind.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Epoch != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Epoch);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Revision.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Revision);
          }
          if (Kind != 0) {
            output.WriteRawTag(40);
            output.WriteEnum((int) Kind);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Epoch != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Epoch);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Revision.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Revision);
          }
          if (Kind != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Version other) {
          if (other == null) {
            return;
          }
          if (other.Epoch != 0) {
            Epoch = other.Epoch;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Revision.Length != 0) {
            Revision = other.Revision;
          }
          if (other.Kind != 0) {
            Kind = other.Kind;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Epoch = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Revision = input.ReadString();
                break;
              }
              case 40: {
                Kind = (global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version.Types.VersionKind) input.ReadEnum();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Version message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Whether this is an ordinary package version or a
          /// sentinel MIN/MAX version.
          /// </summary>
          public enum VersionKind {
            /// <summary>
            /// A standard package version, defined by the other fields.
            /// </summary>
            [pbr::OriginalName("NORMAL")] Normal = 0,
            /// <summary>
            /// A special version representing negative infinity,
            /// other fields are ignored.
            /// </summary>
            [pbr::OriginalName("MINIMUM")] Minimum = 1,
            /// <summary>
            /// A special version representing positive infinity,
            /// other fields are ignored.
            /// </summary>
            [pbr::OriginalName("MAXIMUM")] Maximum = 2,
          }

        }
        #endregion

      }

      /// <summary>
      /// Identifies all occurrences of this vulnerability in the package for a
      /// specific distro/location
      /// For example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2
      /// </summary>
      public sealed partial class Detail : pb::IMessage<Detail> {
        private static readonly pb::MessageParser<Detail> _parser = new pb::MessageParser<Detail>(() => new Detail());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Detail> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Detail() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Detail(Detail other) : this() {
          cpeUri_ = other.cpeUri_;
          package_ = other.package_;
          minAffectedVersion_ = other.minAffectedVersion_ != null ? other.minAffectedVersion_.Clone() : null;
          maxAffectedVersion_ = other.maxAffectedVersion_ != null ? other.maxAffectedVersion_.Clone() : null;
          severityName_ = other.severityName_;
          description_ = other.description_;
          fixedLocation_ = other.fixedLocation_ != null ? other.fixedLocation_.Clone() : null;
          packageType_ = other.packageType_;
          isObsolete_ = other.isObsolete_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Detail Clone() {
          return new Detail(this);
        }

        /// <summary>Field number for the "cpe_uri" field.</summary>
        public const int CpeUriFieldNumber = 1;
        private string cpeUri_ = "";
        /// <summary>
        /// The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in
        /// which the vulnerability manifests.  Examples include distro or storage
        /// location for vulnerable jar.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CpeUri {
          get { return cpeUri_; }
          set {
            cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "package" field.</summary>
        public const int PackageFieldNumber = 8;
        private string package_ = "";
        /// <summary>
        /// The name of the package where the vulnerability was found.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Package {
          get { return package_; }
          set {
            package_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "min_affected_version" field.</summary>
        public const int MinAffectedVersionFieldNumber = 6;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version minAffectedVersion_;
        /// <summary>
        /// The min version of the package in which the vulnerability exists.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version MinAffectedVersion {
          get { return minAffectedVersion_; }
          set {
            minAffectedVersion_ = value;
          }
        }

        /// <summary>Field number for the "max_affected_version" field.</summary>
        public const int MaxAffectedVersionFieldNumber = 7;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version maxAffectedVersion_;
        /// <summary>
        /// The max version of the package in which the vulnerability exists.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version MaxAffectedVersion {
          get { return maxAffectedVersion_; }
          set {
            maxAffectedVersion_ = value;
          }
        }

        /// <summary>Field number for the "severity_name" field.</summary>
        public const int SeverityNameFieldNumber = 4;
        private string severityName_ = "";
        /// <summary>
        /// The severity (eg: distro assigned severity) for this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SeverityName {
          get { return severityName_; }
          set {
            severityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 9;
        private string description_ = "";
        /// <summary>
        /// A vendor-specific description of this note.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fixed_location" field.</summary>
        public const int FixedLocationFieldNumber = 5;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation fixedLocation_;
        /// <summary>
        /// The fix for this specific package version.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation FixedLocation {
          get { return fixedLocation_; }
          set {
            fixedLocation_ = value;
          }
        }

        /// <summary>Field number for the "package_type" field.</summary>
        public const int PackageTypeFieldNumber = 10;
        private string packageType_ = "";
        /// <summary>
        /// The type of package; whether native or non native(ruby gems,
        /// node.js packages etc)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string PackageType {
          get { return packageType_; }
          set {
            packageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_obsolete" field.</summary>
        public const int IsObsoleteFieldNumber = 11;
        private bool isObsolete_;
        /// <summary>
        /// Whether this Detail is obsolete. Occurrences are expected not to point to
        /// obsolete details.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsObsolete {
          get { return isObsolete_; }
          set {
            isObsolete_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Detail);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Detail other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpeUri != other.CpeUri) return false;
          if (Package != other.Package) return false;
          if (!object.Equals(MinAffectedVersion, other.MinAffectedVersion)) return false;
          if (!object.Equals(MaxAffectedVersion, other.MaxAffectedVersion)) return false;
          if (SeverityName != other.SeverityName) return false;
          if (Description != other.Description) return false;
          if (!object.Equals(FixedLocation, other.FixedLocation)) return false;
          if (PackageType != other.PackageType) return false;
          if (IsObsolete != other.IsObsolete) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
          if (Package.Length != 0) hash ^= Package.GetHashCode();
          if (minAffectedVersion_ != null) hash ^= MinAffectedVersion.GetHashCode();
          if (maxAffectedVersion_ != null) hash ^= MaxAffectedVersion.GetHashCode();
          if (SeverityName.Length != 0) hash ^= SeverityName.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (fixedLocation_ != null) hash ^= FixedLocation.GetHashCode();
          if (PackageType.Length != 0) hash ^= PackageType.GetHashCode();
          if (IsObsolete != false) hash ^= IsObsolete.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CpeUri);
          }
          if (SeverityName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SeverityName);
          }
          if (fixedLocation_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(FixedLocation);
          }
          if (minAffectedVersion_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(MinAffectedVersion);
          }
          if (maxAffectedVersion_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(MaxAffectedVersion);
          }
          if (Package.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Package);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Description);
          }
          if (PackageType.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(PackageType);
          }
          if (IsObsolete != false) {
            output.WriteRawTag(88);
            output.WriteBool(IsObsolete);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
          }
          if (Package.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Package);
          }
          if (minAffectedVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinAffectedVersion);
          }
          if (maxAffectedVersion_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxAffectedVersion);
          }
          if (SeverityName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SeverityName);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (fixedLocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedLocation);
          }
          if (PackageType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PackageType);
          }
          if (IsObsolete != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Detail other) {
          if (other == null) {
            return;
          }
          if (other.CpeUri.Length != 0) {
            CpeUri = other.CpeUri;
          }
          if (other.Package.Length != 0) {
            Package = other.Package;
          }
          if (other.minAffectedVersion_ != null) {
            if (minAffectedVersion_ == null) {
              MinAffectedVersion = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
            }
            MinAffectedVersion.MergeFrom(other.MinAffectedVersion);
          }
          if (other.maxAffectedVersion_ != null) {
            if (maxAffectedVersion_ == null) {
              MaxAffectedVersion = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
            }
            MaxAffectedVersion.MergeFrom(other.MaxAffectedVersion);
          }
          if (other.SeverityName.Length != 0) {
            SeverityName = other.SeverityName;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          if (other.fixedLocation_ != null) {
            if (fixedLocation_ == null) {
              FixedLocation = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation();
            }
            FixedLocation.MergeFrom(other.FixedLocation);
          }
          if (other.PackageType.Length != 0) {
            PackageType = other.PackageType;
          }
          if (other.IsObsolete != false) {
            IsObsolete = other.IsObsolete;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CpeUri = input.ReadString();
                break;
              }
              case 34: {
                SeverityName = input.ReadString();
                break;
              }
              case 42: {
                if (fixedLocation_ == null) {
                  FixedLocation = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation();
                }
                input.ReadMessage(FixedLocation);
                break;
              }
              case 50: {
                if (minAffectedVersion_ == null) {
                  MinAffectedVersion = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
                }
                input.ReadMessage(MinAffectedVersion);
                break;
              }
              case 58: {
                if (maxAffectedVersion_ == null) {
                  MaxAffectedVersion = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
                }
                input.ReadMessage(MaxAffectedVersion);
                break;
              }
              case 66: {
                Package = input.ReadString();
                break;
              }
              case 74: {
                Description = input.ReadString();
                break;
              }
              case 82: {
                PackageType = input.ReadString();
                break;
              }
              case 88: {
                IsObsolete = input.ReadBool();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Used by Occurrence to point to where the vulnerability exists and how
      /// to fix it.
      /// </summary>
      public sealed partial class VulnerabilityDetails : pb::IMessage<VulnerabilityDetails> {
        private static readonly pb::MessageParser<VulnerabilityDetails> _parser = new pb::MessageParser<VulnerabilityDetails>(() => new VulnerabilityDetails());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VulnerabilityDetails> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VulnerabilityDetails() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VulnerabilityDetails(VulnerabilityDetails other) : this() {
          type_ = other.type_;
          severity_ = other.severity_;
          cvssScore_ = other.cvssScore_;
          packageIssue_ = other.packageIssue_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VulnerabilityDetails Clone() {
          return new VulnerabilityDetails(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 3;
        private string type_ = "";
        /// <summary>
        /// The type of package; whether native or non native(ruby gems,
        /// node.js packages etc)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Type {
          get { return type_; }
          set {
            type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "severity" field.</summary>
        public const int SeverityFieldNumber = 4;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity severity_ = 0;
        /// <summary>
        /// Output only. The note provider assigned Severity of the vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity Severity {
          get { return severity_; }
          set {
            severity_ = value;
          }
        }

        /// <summary>Field number for the "cvss_score" field.</summary>
        public const int CvssScoreFieldNumber = 5;
        private float cvssScore_;
        /// <summary>
        /// Output only. The CVSS score of this vulnerability. CVSS score is on a
        /// scale of 0-10 where 0 indicates low severity and 10 indicates high
        /// severity.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float CvssScore {
          get { return cvssScore_; }
          set {
            cvssScore_ = value;
          }
        }

        /// <summary>Field number for the "package_issue" field.</summary>
        public const int PackageIssueFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue> _repeated_packageIssue_codec
            = pb::FieldCodec.ForMessage(50, global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue.Parser);
        private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue> packageIssue_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue>();
        /// <summary>
        /// The set of affected locations and their fixes (if available) within
        /// the associated resource.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.PackageIssue> PackageIssue {
          get { return packageIssue_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VulnerabilityDetails);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VulnerabilityDetails other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (Severity != other.Severity) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CvssScore, other.CvssScore)) return false;
          if(!packageIssue_.Equals(other.packageIssue_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type.Length != 0) hash ^= Type.GetHashCode();
          if (Severity != 0) hash ^= Severity.GetHashCode();
          if (CvssScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CvssScore);
          hash ^= packageIssue_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Type);
          }
          if (Severity != 0) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Severity);
          }
          if (CvssScore != 0F) {
            output.WriteRawTag(45);
            output.WriteFloat(CvssScore);
          }
          packageIssue_.WriteTo(output, _repeated_packageIssue_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
          }
          if (Severity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
          }
          if (CvssScore != 0F) {
            size += 1 + 4;
          }
          size += packageIssue_.CalculateSize(_repeated_packageIssue_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VulnerabilityDetails other) {
          if (other == null) {
            return;
          }
          if (other.Type.Length != 0) {
            Type = other.Type;
          }
          if (other.Severity != 0) {
            Severity = other.Severity;
          }
          if (other.CvssScore != 0F) {
            CvssScore = other.CvssScore;
          }
          packageIssue_.Add(other.packageIssue_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 26: {
                Type = input.ReadString();
                break;
              }
              case 32: {
                Severity = (global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Severity) input.ReadEnum();
                break;
              }
              case 45: {
                CvssScore = input.ReadFloat();
                break;
              }
              case 50: {
                packageIssue_.AddEntriesFrom(input, _repeated_packageIssue_codec);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// This message wraps a location affected by a vulnerability and its
      /// associated fix (if one is available).
      /// </summary>
      public sealed partial class PackageIssue : pb::IMessage<PackageIssue> {
        private static readonly pb::MessageParser<PackageIssue> _parser = new pb::MessageParser<PackageIssue>(() => new PackageIssue());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<PackageIssue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageIssue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageIssue(PackageIssue other) : this() {
          affectedLocation_ = other.affectedLocation_ != null ? other.affectedLocation_.Clone() : null;
          fixedLocation_ = other.fixedLocation_ != null ? other.fixedLocation_.Clone() : null;
          severityName_ = other.severityName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PackageIssue Clone() {
          return new PackageIssue(this);
        }

        /// <summary>Field number for the "affected_location" field.</summary>
        public const int AffectedLocationFieldNumber = 1;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation affectedLocation_;
        /// <summary>
        /// The location of the vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation AffectedLocation {
          get { return affectedLocation_; }
          set {
            affectedLocation_ = value;
          }
        }

        /// <summary>Field number for the "fixed_location" field.</summary>
        public const int FixedLocationFieldNumber = 2;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation fixedLocation_;
        /// <summary>
        /// The location of the available fix for vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation FixedLocation {
          get { return fixedLocation_; }
          set {
            fixedLocation_ = value;
          }
        }

        /// <summary>Field number for the "severity_name" field.</summary>
        public const int SeverityNameFieldNumber = 3;
        private string severityName_ = "";
        /// <summary>
        /// The severity (eg: distro assigned severity) for this vulnerability.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SeverityName {
          get { return severityName_; }
          set {
            severityName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as PackageIssue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(PackageIssue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(AffectedLocation, other.AffectedLocation)) return false;
          if (!object.Equals(FixedLocation, other.FixedLocation)) return false;
          if (SeverityName != other.SeverityName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (affectedLocation_ != null) hash ^= AffectedLocation.GetHashCode();
          if (fixedLocation_ != null) hash ^= FixedLocation.GetHashCode();
          if (SeverityName.Length != 0) hash ^= SeverityName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (affectedLocation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(AffectedLocation);
          }
          if (fixedLocation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(FixedLocation);
          }
          if (SeverityName.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(SeverityName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (affectedLocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AffectedLocation);
          }
          if (fixedLocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedLocation);
          }
          if (SeverityName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SeverityName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(PackageIssue other) {
          if (other == null) {
            return;
          }
          if (other.affectedLocation_ != null) {
            if (affectedLocation_ == null) {
              AffectedLocation = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation();
            }
            AffectedLocation.MergeFrom(other.AffectedLocation);
          }
          if (other.fixedLocation_ != null) {
            if (fixedLocation_ == null) {
              FixedLocation = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation();
            }
            FixedLocation.MergeFrom(other.FixedLocation);
          }
          if (other.SeverityName.Length != 0) {
            SeverityName = other.SeverityName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (affectedLocation_ == null) {
                  AffectedLocation = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation();
                }
                input.ReadMessage(AffectedLocation);
                break;
              }
              case 18: {
                if (fixedLocation_ == null) {
                  FixedLocation = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.VulnerabilityLocation();
                }
                input.ReadMessage(FixedLocation);
                break;
              }
              case 26: {
                SeverityName = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// The location of the vulnerability
      /// </summary>
      public sealed partial class VulnerabilityLocation : pb::IMessage<VulnerabilityLocation> {
        private static readonly pb::MessageParser<VulnerabilityLocation> _parser = new pb::MessageParser<VulnerabilityLocation>(() => new VulnerabilityLocation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VulnerabilityLocation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VulnerabilityLocation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VulnerabilityLocation(VulnerabilityLocation other) : this() {
          cpeUri_ = other.cpeUri_;
          package_ = other.package_;
          version_ = other.version_ != null ? other.version_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VulnerabilityLocation Clone() {
          return new VulnerabilityLocation(this);
        }

        /// <summary>Field number for the "cpe_uri" field.</summary>
        public const int CpeUriFieldNumber = 1;
        private string cpeUri_ = "";
        /// <summary>
        /// The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)
        /// format. Examples include distro or storage location for vulnerable jar.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CpeUri {
          get { return cpeUri_; }
          set {
            cpeUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "package" field.</summary>
        public const int PackageFieldNumber = 2;
        private string package_ = "";
        /// <summary>
        /// The package being described.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Package {
          get { return package_; }
          set {
            package_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "version" field.</summary>
        public const int VersionFieldNumber = 4;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version version_;
        /// <summary>
        /// The version of the package being described.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version Version {
          get { return version_; }
          set {
            version_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VulnerabilityLocation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VulnerabilityLocation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpeUri != other.CpeUri) return false;
          if (Package != other.Package) return false;
          if (!object.Equals(Version, other.Version)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CpeUri.Length != 0) hash ^= CpeUri.GetHashCode();
          if (Package.Length != 0) hash ^= Package.GetHashCode();
          if (version_ != null) hash ^= Version.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CpeUri.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(CpeUri);
          }
          if (Package.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Package);
          }
          if (version_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(Version);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CpeUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CpeUri);
          }
          if (Package.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Package);
          }
          if (version_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VulnerabilityLocation other) {
          if (other == null) {
            return;
          }
          if (other.CpeUri.Length != 0) {
            CpeUri = other.CpeUri;
          }
          if (other.Package.Length != 0) {
            Package = other.Package;
          }
          if (other.version_ != null) {
            if (version_ == null) {
              Version = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
            }
            Version.MergeFrom(other.Version);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CpeUri = input.ReadString();
                break;
              }
              case 18: {
                Package = input.ReadString();
                break;
              }
              case 34: {
                if (version_ == null) {
                  Version = new global::Google.Devtools.Containeranalysis.V1Alpha1.VulnerabilityType.Types.Version();
                }
                input.ReadMessage(Version);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
