// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/devtools/containeranalysis/v1alpha1/image_basis.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Devtools.Containeranalysis.V1Alpha1 {

  /// <summary>Holder for reflection information generated from google/devtools/containeranalysis/v1alpha1/image_basis.proto</summary>
  public static partial class ImageBasisReflection {

    #region Descriptor
    /// <summary>File descriptor for google/devtools/containeranalysis/v1alpha1/image_basis.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImageBasisReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjxnb29nbGUvZGV2dG9vbHMvY29udGFpbmVyYW5hbHlzaXMvdjFhbHBoYTEv",
            "aW1hZ2VfYmFzaXMucHJvdG8SKmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "byKaBgoLRG9ja2VySW1hZ2Ua6QIKBUxheWVyEloKCWRpcmVjdGl2ZRgBIAEo",
            "DjJHLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFscGhh",
            "MS5Eb2NrZXJJbWFnZS5MYXllci5EaXJlY3RpdmUSEQoJYXJndW1lbnRzGAIg",
            "ASgJIvABCglEaXJlY3RpdmUSGQoVRElSRUNUSVZFX1VOU1BFQ0lGSUVEEAAS",
            "DgoKTUFJTlRBSU5FUhABEgcKA1JVThACEgcKA0NNRBADEgkKBUxBQkVMEAQS",
            "CgoGRVhQT1NFEAUSBwoDRU5WEAYSBwoDQUREEAcSCAoEQ09QWRAIEg4KCkVO",
            "VFJZUE9JTlQQCRIKCgZWT0xVTUUQChIICgRVU0VSEAsSCwoHV09SS0RJUhAM",
            "EgcKA0FSRxANEgsKB09OQlVJTEQQDhIOCgpTVE9QU0lHTkFMEA8SDwoLSEVB",
            "TFRIQ0hFQ0sQEBIJCgVTSEVMTBARGkAKC0ZpbmdlcnByaW50Eg8KB3YxX25h",
            "bWUYASABKAkSDwoHdjJfYmxvYhgCIAMoCRIPCgd2Ml9uYW1lGAMgASgJGncK",
            "BUJhc2lzEhQKDHJlc291cmNlX3VybBgBIAEoCRJYCgtmaW5nZXJwcmludBgC",
            "IAEoCzJDLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJhbmFseXNpcy52MWFs",
            "cGhhMS5Eb2NrZXJJbWFnZS5GaW5nZXJwcmludBrjAQoHRGVyaXZlZBJYCgtm",
            "aW5nZXJwcmludBgBIAEoCzJDLmdvb2dsZS5kZXZ0b29scy5jb250YWluZXJh",
            "bmFseXNpcy52MWFscGhhMS5Eb2NrZXJJbWFnZS5GaW5nZXJwcmludBIQCghk",
            "aXN0YW5jZRgCIAEoDRJRCgpsYXllcl9pbmZvGAMgAygLMj0uZ29vZ2xlLmRl",
            "dnRvb2xzLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExLkRvY2tlckltYWdl",
            "LkxheWVyEhkKEWJhc2VfcmVzb3VyY2VfdXJsGAQgASgJQowBCiVjb20uZ29v",
            "Z2xlLmNvbnRhaW5lcmFuYWx5c2lzLnYxYWxwaGExUAFaW2dvb2dsZS5nb2xh",
            "bmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvZGV2dG9vbHMvY29udGFpbmVy",
            "YW5hbHlzaXMvdjFhbHBoYTE7Y29udGFpbmVyYW5hbHlzaXOiAgNHQ0FiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage), global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer), global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer.Parser, new[]{ "Directive", "Arguments" }, null, new[]{ typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer.Types.Directive) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint), global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint.Parser, new[]{ "V1Name", "V2Blob", "V2Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis), global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Basis.Parser, new[]{ "ResourceUrl", "Fingerprint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived), global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Derived.Parser, new[]{ "Fingerprint", "Distance", "LayerInfo", "BaseResourceUrl" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// DockerImage holds types defining base image notes
  /// and derived image occurrences.
  /// </summary>
  public sealed partial class DockerImage : pb::IMessage<DockerImage> {
    private static readonly pb::MessageParser<DockerImage> _parser = new pb::MessageParser<DockerImage>(() => new DockerImage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DockerImage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Devtools.Containeranalysis.V1Alpha1.ImageBasisReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DockerImage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DockerImage(DockerImage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DockerImage Clone() {
      return new DockerImage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DockerImage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DockerImage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DockerImage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DockerImage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Layer holds metadata specific to a layer of a Docker image.
      /// </summary>
      public sealed partial class Layer : pb::IMessage<Layer> {
        private static readonly pb::MessageParser<Layer> _parser = new pb::MessageParser<Layer>(() => new Layer());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Layer> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Layer() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Layer(Layer other) : this() {
          directive_ = other.directive_;
          arguments_ = other.arguments_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Layer Clone() {
          return new Layer(this);
        }

        /// <summary>Field number for the "directive" field.</summary>
        public const int DirectiveFieldNumber = 1;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer.Types.Directive directive_ = 0;
        /// <summary>
        /// The recovered Dockerfile directive used to construct this layer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer.Types.Directive Directive {
          get { return directive_; }
          set {
            directive_ = value;
          }
        }

        /// <summary>Field number for the "arguments" field.</summary>
        public const int ArgumentsFieldNumber = 2;
        private string arguments_ = "";
        /// <summary>
        /// The recovered arguments to the Dockerfile directive.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Arguments {
          get { return arguments_; }
          set {
            arguments_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Layer);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Layer other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Directive != other.Directive) return false;
          if (Arguments != other.Arguments) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Directive != 0) hash ^= Directive.GetHashCode();
          if (Arguments.Length != 0) hash ^= Arguments.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Directive != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Directive);
          }
          if (Arguments.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Arguments);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Directive != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Directive);
          }
          if (Arguments.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Arguments);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Layer other) {
          if (other == null) {
            return;
          }
          if (other.Directive != 0) {
            Directive = other.Directive;
          }
          if (other.Arguments.Length != 0) {
            Arguments = other.Arguments;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Directive = (global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer.Types.Directive) input.ReadEnum();
                break;
              }
              case 18: {
                Arguments = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Layer message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          /// <summary>
          /// Instructions from dockerfile
          /// </summary>
          public enum Directive {
            /// <summary>
            /// Default value for unsupported/missing directive
            /// </summary>
            [pbr::OriginalName("DIRECTIVE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#maintainer
            /// </summary>
            [pbr::OriginalName("MAINTAINER")] Maintainer = 1,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#run
            /// </summary>
            [pbr::OriginalName("RUN")] Run = 2,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#cmd
            /// </summary>
            [pbr::OriginalName("CMD")] Cmd = 3,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#label
            /// </summary>
            [pbr::OriginalName("LABEL")] Label = 4,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#expose
            /// </summary>
            [pbr::OriginalName("EXPOSE")] Expose = 5,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#env
            /// </summary>
            [pbr::OriginalName("ENV")] Env = 6,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#add
            /// </summary>
            [pbr::OriginalName("ADD")] Add = 7,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#copy
            /// </summary>
            [pbr::OriginalName("COPY")] Copy = 8,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#entrypoint
            /// </summary>
            [pbr::OriginalName("ENTRYPOINT")] Entrypoint = 9,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#volume
            /// </summary>
            [pbr::OriginalName("VOLUME")] Volume = 10,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#user
            /// </summary>
            [pbr::OriginalName("USER")] User = 11,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#workdir
            /// </summary>
            [pbr::OriginalName("WORKDIR")] Workdir = 12,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#arg
            /// </summary>
            [pbr::OriginalName("ARG")] Arg = 13,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#onbuild
            /// </summary>
            [pbr::OriginalName("ONBUILD")] Onbuild = 14,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#stopsignal
            /// </summary>
            [pbr::OriginalName("STOPSIGNAL")] Stopsignal = 15,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#healthcheck
            /// </summary>
            [pbr::OriginalName("HEALTHCHECK")] Healthcheck = 16,
            /// <summary>
            /// https://docs.docker.com/reference/builder/#shell
            /// </summary>
            [pbr::OriginalName("SHELL")] Shell = 17,
          }

        }
        #endregion

      }

      /// <summary>
      /// A set of properties that uniquely identify a given Docker image.
      /// </summary>
      public sealed partial class Fingerprint : pb::IMessage<Fingerprint> {
        private static readonly pb::MessageParser<Fingerprint> _parser = new pb::MessageParser<Fingerprint>(() => new Fingerprint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Fingerprint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Fingerprint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Fingerprint(Fingerprint other) : this() {
          v1Name_ = other.v1Name_;
          v2Blob_ = other.v2Blob_.Clone();
          v2Name_ = other.v2Name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Fingerprint Clone() {
          return new Fingerprint(this);
        }

        /// <summary>Field number for the "v1_name" field.</summary>
        public const int V1NameFieldNumber = 1;
        private string v1Name_ = "";
        /// <summary>
        /// The layer-id of the final layer in the Docker image's v1
        /// representation.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string V1Name {
          get { return v1Name_; }
          set {
            v1Name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "v2_blob" field.</summary>
        public const int V2BlobFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_v2Blob_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> v2Blob_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The ordered list of v2 blobs that represent a given image.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> V2Blob {
          get { return v2Blob_; }
        }

        /// <summary>Field number for the "v2_name" field.</summary>
        public const int V2NameFieldNumber = 3;
        private string v2Name_ = "";
        /// <summary>
        /// Output only. The name of the image's v2 blobs computed via:
        ///   [bottom] := v2_blob[bottom]
        ///   [N] := sha256(v2_blob[N] + " " + v2_name[N+1])
        /// Only the name of the final blob is kept.
        /// This field can be used as a filter in list requests.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string V2Name {
          get { return v2Name_; }
          set {
            v2Name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Fingerprint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Fingerprint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (V1Name != other.V1Name) return false;
          if(!v2Blob_.Equals(other.v2Blob_)) return false;
          if (V2Name != other.V2Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (V1Name.Length != 0) hash ^= V1Name.GetHashCode();
          hash ^= v2Blob_.GetHashCode();
          if (V2Name.Length != 0) hash ^= V2Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (V1Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(V1Name);
          }
          v2Blob_.WriteTo(output, _repeated_v2Blob_codec);
          if (V2Name.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(V2Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (V1Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(V1Name);
          }
          size += v2Blob_.CalculateSize(_repeated_v2Blob_codec);
          if (V2Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(V2Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Fingerprint other) {
          if (other == null) {
            return;
          }
          if (other.V1Name.Length != 0) {
            V1Name = other.V1Name;
          }
          v2Blob_.Add(other.v2Blob_);
          if (other.V2Name.Length != 0) {
            V2Name = other.V2Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                V1Name = input.ReadString();
                break;
              }
              case 18: {
                v2Blob_.AddEntriesFrom(input, _repeated_v2Blob_codec);
                break;
              }
              case 26: {
                V2Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Basis describes the base image portion (Note) of the DockerImage
      /// relationship.  Linked occurrences are derived from this or an
      /// equivalent image via:
      ///   FROM &lt;Basis.resource_url>
      /// Or an equivalent reference, e.g. a tag of the resource_url.
      /// </summary>
      public sealed partial class Basis : pb::IMessage<Basis> {
        private static readonly pb::MessageParser<Basis> _parser = new pb::MessageParser<Basis>(() => new Basis());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Basis> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Basis() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Basis(Basis other) : this() {
          resourceUrl_ = other.resourceUrl_;
          fingerprint_ = other.fingerprint_ != null ? other.fingerprint_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Basis Clone() {
          return new Basis(this);
        }

        /// <summary>Field number for the "resource_url" field.</summary>
        public const int ResourceUrlFieldNumber = 1;
        private string resourceUrl_ = "";
        /// <summary>
        /// The resource_url for the resource representing the basis of
        /// associated occurrence images.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ResourceUrl {
          get { return resourceUrl_; }
          set {
            resourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "fingerprint" field.</summary>
        public const int FingerprintFieldNumber = 2;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint fingerprint_;
        /// <summary>
        /// The fingerprint of the base image.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint Fingerprint {
          get { return fingerprint_; }
          set {
            fingerprint_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Basis);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Basis other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ResourceUrl != other.ResourceUrl) return false;
          if (!object.Equals(Fingerprint, other.Fingerprint)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ResourceUrl.Length != 0) hash ^= ResourceUrl.GetHashCode();
          if (fingerprint_ != null) hash ^= Fingerprint.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (ResourceUrl.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(ResourceUrl);
          }
          if (fingerprint_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Fingerprint);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ResourceUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceUrl);
          }
          if (fingerprint_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fingerprint);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Basis other) {
          if (other == null) {
            return;
          }
          if (other.ResourceUrl.Length != 0) {
            ResourceUrl = other.ResourceUrl;
          }
          if (other.fingerprint_ != null) {
            if (fingerprint_ == null) {
              Fingerprint = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint();
            }
            Fingerprint.MergeFrom(other.Fingerprint);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ResourceUrl = input.ReadString();
                break;
              }
              case 18: {
                if (fingerprint_ == null) {
                  Fingerprint = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint();
                }
                input.ReadMessage(Fingerprint);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Derived describes the derived image portion (Occurrence) of the
      /// DockerImage relationship.  This image would be produced from a Dockerfile
      /// with FROM &lt;DockerImage.Basis in attached Note>.
      /// </summary>
      public sealed partial class Derived : pb::IMessage<Derived> {
        private static readonly pb::MessageParser<Derived> _parser = new pb::MessageParser<Derived>(() => new Derived());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Derived> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Derived() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Derived(Derived other) : this() {
          fingerprint_ = other.fingerprint_ != null ? other.fingerprint_.Clone() : null;
          distance_ = other.distance_;
          layerInfo_ = other.layerInfo_.Clone();
          baseResourceUrl_ = other.baseResourceUrl_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Derived Clone() {
          return new Derived(this);
        }

        /// <summary>Field number for the "fingerprint" field.</summary>
        public const int FingerprintFieldNumber = 1;
        private global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint fingerprint_;
        /// <summary>
        /// The fingerprint of the derived image.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint Fingerprint {
          get { return fingerprint_; }
          set {
            fingerprint_ = value;
          }
        }

        /// <summary>Field number for the "distance" field.</summary>
        public const int DistanceFieldNumber = 2;
        private uint distance_;
        /// <summary>
        /// Output only. The number of layers by which this image differs from the
        /// associated image basis.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Distance {
          get { return distance_; }
          set {
            distance_ = value;
          }
        }

        /// <summary>Field number for the "layer_info" field.</summary>
        public const int LayerInfoFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer> _repeated_layerInfo_codec
            = pb::FieldCodec.ForMessage(26, global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer.Parser);
        private readonly pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer> layerInfo_ = new pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer>();
        /// <summary>
        /// This contains layer-specific metadata, if populated it has length
        /// "distance" and is ordered with [distance] being the layer immediately
        /// following the base image and [1] being the final layer.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Layer> LayerInfo {
          get { return layerInfo_; }
        }

        /// <summary>Field number for the "base_resource_url" field.</summary>
        public const int BaseResourceUrlFieldNumber = 4;
        private string baseResourceUrl_ = "";
        /// <summary>
        /// Output only. This contains the base image URL for the derived image
        /// occurrence.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string BaseResourceUrl {
          get { return baseResourceUrl_; }
          set {
            baseResourceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Derived);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Derived other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Fingerprint, other.Fingerprint)) return false;
          if (Distance != other.Distance) return false;
          if(!layerInfo_.Equals(other.layerInfo_)) return false;
          if (BaseResourceUrl != other.BaseResourceUrl) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (fingerprint_ != null) hash ^= Fingerprint.GetHashCode();
          if (Distance != 0) hash ^= Distance.GetHashCode();
          hash ^= layerInfo_.GetHashCode();
          if (BaseResourceUrl.Length != 0) hash ^= BaseResourceUrl.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (fingerprint_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Fingerprint);
          }
          if (Distance != 0) {
            output.WriteRawTag(16);
            output.WriteUInt32(Distance);
          }
          layerInfo_.WriteTo(output, _repeated_layerInfo_codec);
          if (BaseResourceUrl.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(BaseResourceUrl);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (fingerprint_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fingerprint);
          }
          if (Distance != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distance);
          }
          size += layerInfo_.CalculateSize(_repeated_layerInfo_codec);
          if (BaseResourceUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseResourceUrl);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Derived other) {
          if (other == null) {
            return;
          }
          if (other.fingerprint_ != null) {
            if (fingerprint_ == null) {
              Fingerprint = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint();
            }
            Fingerprint.MergeFrom(other.Fingerprint);
          }
          if (other.Distance != 0) {
            Distance = other.Distance;
          }
          layerInfo_.Add(other.layerInfo_);
          if (other.BaseResourceUrl.Length != 0) {
            BaseResourceUrl = other.BaseResourceUrl;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (fingerprint_ == null) {
                  Fingerprint = new global::Google.Devtools.Containeranalysis.V1Alpha1.DockerImage.Types.Fingerprint();
                }
                input.ReadMessage(Fingerprint);
                break;
              }
              case 16: {
                Distance = input.ReadUInt32();
                break;
              }
              case 26: {
                layerInfo_.AddEntriesFrom(input, _repeated_layerInfo_codec);
                break;
              }
              case 34: {
                BaseResourceUrl = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
